/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type InsightsSmartDetectionRuleObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type InsightsSmartDetectionRuleParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalEmailRecipients []*string `json:"additionalEmailRecipients,omitempty" tf:"additional_email_recipients,omitempty"`

	// +kubebuilder:validation:Required
	ApplicationInsightsID *string `json:"applicationInsightsId" tf:"application_insights_id,omitempty"`

	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	SendEmailsToSubscriptionOwners *bool `json:"sendEmailsToSubscriptionOwners,omitempty" tf:"send_emails_to_subscription_owners,omitempty"`
}

// InsightsSmartDetectionRuleSpec defines the desired state of InsightsSmartDetectionRule
type InsightsSmartDetectionRuleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     InsightsSmartDetectionRuleParameters `json:"forProvider"`
}

// InsightsSmartDetectionRuleStatus defines the observed state of InsightsSmartDetectionRule.
type InsightsSmartDetectionRuleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        InsightsSmartDetectionRuleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// InsightsSmartDetectionRule is the Schema for the InsightsSmartDetectionRules API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type InsightsSmartDetectionRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              InsightsSmartDetectionRuleSpec   `json:"spec"`
	Status            InsightsSmartDetectionRuleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// InsightsSmartDetectionRuleList contains a list of InsightsSmartDetectionRules
type InsightsSmartDetectionRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []InsightsSmartDetectionRule `json:"items"`
}

// Repository type metadata.
var (
	InsightsSmartDetectionRule_Kind             = "InsightsSmartDetectionRule"
	InsightsSmartDetectionRule_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: InsightsSmartDetectionRule_Kind}.String()
	InsightsSmartDetectionRule_KindAPIVersion   = InsightsSmartDetectionRule_Kind + "." + CRDGroupVersion.String()
	InsightsSmartDetectionRule_GroupVersionKind = CRDGroupVersion.WithKind(InsightsSmartDetectionRule_Kind)
)

func init() {
	SchemeBuilder.Register(&InsightsSmartDetectionRule{}, &InsightsSmartDetectionRuleList{})
}
