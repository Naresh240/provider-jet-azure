/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ManagementIdentityProviderFacebookObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type ManagementIdentityProviderFacebookParameters struct {

	// +kubebuilder:validation:Required
	APIManagementName *string `json:"apiManagementName" tf:"api_management_name,omitempty"`

	// +kubebuilder:validation:Required
	AppID *string `json:"appId" tf:"app_id,omitempty"`

	// +kubebuilder:validation:Required
	AppSecretSecretRef v1.SecretKeySelector `json:"appSecretSecretRef" tf:"-"`

	// +kubebuilder:validation:Required
	ResourceGroupName *string `json:"resourceGroupName" tf:"resource_group_name,omitempty"`
}

// ManagementIdentityProviderFacebookSpec defines the desired state of ManagementIdentityProviderFacebook
type ManagementIdentityProviderFacebookSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ManagementIdentityProviderFacebookParameters `json:"forProvider"`
}

// ManagementIdentityProviderFacebookStatus defines the observed state of ManagementIdentityProviderFacebook.
type ManagementIdentityProviderFacebookStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ManagementIdentityProviderFacebookObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ManagementIdentityProviderFacebook is the Schema for the ManagementIdentityProviderFacebooks API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type ManagementIdentityProviderFacebook struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ManagementIdentityProviderFacebookSpec   `json:"spec"`
	Status            ManagementIdentityProviderFacebookStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ManagementIdentityProviderFacebookList contains a list of ManagementIdentityProviderFacebooks
type ManagementIdentityProviderFacebookList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ManagementIdentityProviderFacebook `json:"items"`
}

// Repository type metadata.
var (
	ManagementIdentityProviderFacebook_Kind             = "ManagementIdentityProviderFacebook"
	ManagementIdentityProviderFacebook_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ManagementIdentityProviderFacebook_Kind}.String()
	ManagementIdentityProviderFacebook_KindAPIVersion   = ManagementIdentityProviderFacebook_Kind + "." + CRDGroupVersion.String()
	ManagementIdentityProviderFacebook_GroupVersionKind = CRDGroupVersion.WithKind(ManagementIdentityProviderFacebook_Kind)
)

func init() {
	SchemeBuilder.Register(&ManagementIdentityProviderFacebook{}, &ManagementIdentityProviderFacebookList{})
}
