/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ManagementApiVersionSetObservation struct {
}

type ManagementApiVersionSetParameters struct {

	// +kubebuilder:validation:Required
	APIManagementName *string `json:"apiManagementName" tf:"api_management_name,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Required
	DisplayName *string `json:"displayName" tf:"display_name,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	ResourceGroupName *string `json:"resourceGroupName" tf:"resource_group_name,omitempty"`

	// +kubebuilder:validation:Optional
	VersionHeaderName *string `json:"versionHeaderName,omitempty" tf:"version_header_name,omitempty"`

	// +kubebuilder:validation:Optional
	VersionQueryName *string `json:"versionQueryName,omitempty" tf:"version_query_name,omitempty"`

	// +kubebuilder:validation:Required
	VersioningScheme *string `json:"versioningScheme" tf:"versioning_scheme,omitempty"`
}

// ManagementApiVersionSetSpec defines the desired state of ManagementApiVersionSet
type ManagementApiVersionSetSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ManagementApiVersionSetParameters `json:"forProvider"`
}

// ManagementApiVersionSetStatus defines the observed state of ManagementApiVersionSet.
type ManagementApiVersionSetStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ManagementApiVersionSetObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ManagementApiVersionSet is the Schema for the ManagementApiVersionSets API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type ManagementApiVersionSet struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ManagementApiVersionSetSpec   `json:"spec"`
	Status            ManagementApiVersionSetStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ManagementApiVersionSetList contains a list of ManagementApiVersionSets
type ManagementApiVersionSetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ManagementApiVersionSet `json:"items"`
}

// Repository type metadata.
var (
	ManagementApiVersionSet_Kind             = "ManagementApiVersionSet"
	ManagementApiVersionSet_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ManagementApiVersionSet_Kind}.String()
	ManagementApiVersionSet_KindAPIVersion   = ManagementApiVersionSet_Kind + "." + CRDGroupVersion.String()
	ManagementApiVersionSet_GroupVersionKind = CRDGroupVersion.WithKind(ManagementApiVersionSet_Kind)
)

func init() {
	SchemeBuilder.Register(&ManagementApiVersionSet{}, &ManagementApiVersionSetList{})
}
