/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ManagementEmailTemplateObservation struct {
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Title *string `json:"title,omitempty" tf:"title,omitempty"`
}

type ManagementEmailTemplateParameters struct {

	// +kubebuilder:validation:Required
	APIManagementName *string `json:"apiManagementName" tf:"api_management_name,omitempty"`

	// +kubebuilder:validation:Required
	Body *string `json:"body" tf:"body,omitempty"`

	// +kubebuilder:validation:Required
	ResourceGroupName *string `json:"resourceGroupName" tf:"resource_group_name,omitempty"`

	// +kubebuilder:validation:Required
	Subject *string `json:"subject" tf:"subject,omitempty"`

	// +kubebuilder:validation:Required
	TemplateName *string `json:"templateName" tf:"template_name,omitempty"`
}

// ManagementEmailTemplateSpec defines the desired state of ManagementEmailTemplate
type ManagementEmailTemplateSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ManagementEmailTemplateParameters `json:"forProvider"`
}

// ManagementEmailTemplateStatus defines the observed state of ManagementEmailTemplate.
type ManagementEmailTemplateStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ManagementEmailTemplateObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ManagementEmailTemplate is the Schema for the ManagementEmailTemplates API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type ManagementEmailTemplate struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ManagementEmailTemplateSpec   `json:"spec"`
	Status            ManagementEmailTemplateStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ManagementEmailTemplateList contains a list of ManagementEmailTemplates
type ManagementEmailTemplateList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ManagementEmailTemplate `json:"items"`
}

// Repository type metadata.
var (
	ManagementEmailTemplate_Kind             = "ManagementEmailTemplate"
	ManagementEmailTemplate_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ManagementEmailTemplate_Kind}.String()
	ManagementEmailTemplate_KindAPIVersion   = ManagementEmailTemplate_Kind + "." + CRDGroupVersion.String()
	ManagementEmailTemplate_GroupVersionKind = CRDGroupVersion.WithKind(ManagementEmailTemplate_Kind)
)

func init() {
	SchemeBuilder.Register(&ManagementEmailTemplate{}, &ManagementEmailTemplateList{})
}
