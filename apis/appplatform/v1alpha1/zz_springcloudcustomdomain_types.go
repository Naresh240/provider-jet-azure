/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SpringCloudCustomDomainObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type SpringCloudCustomDomainParameters struct {

	// +kubebuilder:validation:Optional
	CertificateName *string `json:"certificateName,omitempty" tf:"certificate_name,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	SpringCloudAppID *string `json:"springCloudAppId" tf:"spring_cloud_app_id,omitempty"`

	// +kubebuilder:validation:Optional
	Thumbprint *string `json:"thumbprint,omitempty" tf:"thumbprint,omitempty"`
}

// SpringCloudCustomDomainSpec defines the desired state of SpringCloudCustomDomain
type SpringCloudCustomDomainSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SpringCloudCustomDomainParameters `json:"forProvider"`
}

// SpringCloudCustomDomainStatus defines the observed state of SpringCloudCustomDomain.
type SpringCloudCustomDomainStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SpringCloudCustomDomainObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SpringCloudCustomDomain is the Schema for the SpringCloudCustomDomains API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type SpringCloudCustomDomain struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SpringCloudCustomDomainSpec   `json:"spec"`
	Status            SpringCloudCustomDomainStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SpringCloudCustomDomainList contains a list of SpringCloudCustomDomains
type SpringCloudCustomDomainList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SpringCloudCustomDomain `json:"items"`
}

// Repository type metadata.
var (
	SpringCloudCustomDomain_Kind             = "SpringCloudCustomDomain"
	SpringCloudCustomDomain_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SpringCloudCustomDomain_Kind}.String()
	SpringCloudCustomDomain_KindAPIVersion   = SpringCloudCustomDomain_Kind + "." + CRDGroupVersion.String()
	SpringCloudCustomDomain_GroupVersionKind = CRDGroupVersion.WithKind(SpringCloudCustomDomain_Kind)
)

func init() {
	SchemeBuilder.Register(&SpringCloudCustomDomain{}, &SpringCloudCustomDomainList{})
}
