/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ThreatProtectionObservation struct {
}

type ThreatProtectionParameters struct {

	// +kubebuilder:validation:Required
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// +kubebuilder:validation:Required
	TargetResourceID *string `json:"targetResourceId" tf:"target_resource_id,omitempty"`
}

// ThreatProtectionSpec defines the desired state of ThreatProtection
type ThreatProtectionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ThreatProtectionParameters `json:"forProvider"`
}

// ThreatProtectionStatus defines the observed state of ThreatProtection.
type ThreatProtectionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ThreatProtectionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ThreatProtection is the Schema for the ThreatProtections API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type ThreatProtection struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ThreatProtectionSpec   `json:"spec"`
	Status            ThreatProtectionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ThreatProtectionList contains a list of ThreatProtections
type ThreatProtectionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ThreatProtection `json:"items"`
}

// Repository type metadata.
var (
	ThreatProtection_Kind             = "ThreatProtection"
	ThreatProtection_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ThreatProtection_Kind}.String()
	ThreatProtection_KindAPIVersion   = ThreatProtection_Kind + "." + CRDGroupVersion.String()
	ThreatProtection_GroupVersionKind = CRDGroupVersion.WithKind(ThreatProtection_Kind)
)

func init() {
	SchemeBuilder.Register(&ThreatProtection{}, &ThreatProtectionList{})
}
