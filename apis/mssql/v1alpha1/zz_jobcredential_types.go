/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type JobCredentialObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type JobCredentialParameters struct {

	// +kubebuilder:validation:Required
	JobAgentID *string `json:"jobAgentId" tf:"job_agent_id,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// +kubebuilder:validation:Required
	Username *string `json:"username" tf:"username,omitempty"`
}

// JobCredentialSpec defines the desired state of JobCredential
type JobCredentialSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     JobCredentialParameters `json:"forProvider"`
}

// JobCredentialStatus defines the observed state of JobCredential.
type JobCredentialStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        JobCredentialObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// JobCredential is the Schema for the JobCredentials API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type JobCredential struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              JobCredentialSpec   `json:"spec"`
	Status            JobCredentialStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// JobCredentialList contains a list of JobCredentials
type JobCredentialList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []JobCredential `json:"items"`
}

// Repository type metadata.
var (
	JobCredential_Kind             = "JobCredential"
	JobCredential_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: JobCredential_Kind}.String()
	JobCredential_KindAPIVersion   = JobCredential_Kind + "." + CRDGroupVersion.String()
	JobCredential_GroupVersionKind = CRDGroupVersion.WithKind(JobCredential_Kind)
)

func init() {
	SchemeBuilder.Register(&JobCredential{}, &JobCredentialList{})
}
