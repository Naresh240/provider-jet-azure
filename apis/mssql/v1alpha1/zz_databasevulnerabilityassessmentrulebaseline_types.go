/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BaselineResultObservation struct {
}

type BaselineResultParameters struct {

	// +kubebuilder:validation:Required
	Result []*string `json:"result" tf:"result,omitempty"`
}

type DatabaseVulnerabilityAssessmentRuleBaselineObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type DatabaseVulnerabilityAssessmentRuleBaselineParameters struct {

	// +kubebuilder:validation:Optional
	BaselineName *string `json:"baselineName,omitempty" tf:"baseline_name,omitempty"`

	// +kubebuilder:validation:Required
	BaselineResult []BaselineResultParameters `json:"baselineResult" tf:"baseline_result,omitempty"`

	// +kubebuilder:validation:Required
	DatabaseName *string `json:"databaseName" tf:"database_name,omitempty"`

	// +kubebuilder:validation:Required
	RuleID *string `json:"ruleId" tf:"rule_id,omitempty"`

	// +kubebuilder:validation:Required
	ServerVulnerabilityAssessmentID *string `json:"serverVulnerabilityAssessmentId" tf:"server_vulnerability_assessment_id,omitempty"`
}

// DatabaseVulnerabilityAssessmentRuleBaselineSpec defines the desired state of DatabaseVulnerabilityAssessmentRuleBaseline
type DatabaseVulnerabilityAssessmentRuleBaselineSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DatabaseVulnerabilityAssessmentRuleBaselineParameters `json:"forProvider"`
}

// DatabaseVulnerabilityAssessmentRuleBaselineStatus defines the observed state of DatabaseVulnerabilityAssessmentRuleBaseline.
type DatabaseVulnerabilityAssessmentRuleBaselineStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DatabaseVulnerabilityAssessmentRuleBaselineObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// DatabaseVulnerabilityAssessmentRuleBaseline is the Schema for the DatabaseVulnerabilityAssessmentRuleBaselines API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type DatabaseVulnerabilityAssessmentRuleBaseline struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DatabaseVulnerabilityAssessmentRuleBaselineSpec   `json:"spec"`
	Status            DatabaseVulnerabilityAssessmentRuleBaselineStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DatabaseVulnerabilityAssessmentRuleBaselineList contains a list of DatabaseVulnerabilityAssessmentRuleBaselines
type DatabaseVulnerabilityAssessmentRuleBaselineList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DatabaseVulnerabilityAssessmentRuleBaseline `json:"items"`
}

// Repository type metadata.
var (
	DatabaseVulnerabilityAssessmentRuleBaseline_Kind             = "DatabaseVulnerabilityAssessmentRuleBaseline"
	DatabaseVulnerabilityAssessmentRuleBaseline_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DatabaseVulnerabilityAssessmentRuleBaseline_Kind}.String()
	DatabaseVulnerabilityAssessmentRuleBaseline_KindAPIVersion   = DatabaseVulnerabilityAssessmentRuleBaseline_Kind + "." + CRDGroupVersion.String()
	DatabaseVulnerabilityAssessmentRuleBaseline_GroupVersionKind = CRDGroupVersion.WithKind(DatabaseVulnerabilityAssessmentRuleBaseline_Kind)
)

func init() {
	SchemeBuilder.Register(&DatabaseVulnerabilityAssessmentRuleBaseline{}, &DatabaseVulnerabilityAssessmentRuleBaselineList{})
}
