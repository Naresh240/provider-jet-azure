/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this AnalyticsCluster.
func (mg *AnalyticsCluster) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AnalyticsCluster.
func (mg *AnalyticsCluster) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AnalyticsCluster.
func (mg *AnalyticsCluster) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AnalyticsCluster.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AnalyticsCluster) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AnalyticsCluster.
func (mg *AnalyticsCluster) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AnalyticsCluster.
func (mg *AnalyticsCluster) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AnalyticsCluster.
func (mg *AnalyticsCluster) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AnalyticsCluster.
func (mg *AnalyticsCluster) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AnalyticsCluster.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AnalyticsCluster) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AnalyticsCluster.
func (mg *AnalyticsCluster) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AnalyticsClusterCustomerManagedKey.
func (mg *AnalyticsClusterCustomerManagedKey) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AnalyticsClusterCustomerManagedKey.
func (mg *AnalyticsClusterCustomerManagedKey) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AnalyticsClusterCustomerManagedKey.
func (mg *AnalyticsClusterCustomerManagedKey) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AnalyticsClusterCustomerManagedKey.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AnalyticsClusterCustomerManagedKey) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AnalyticsClusterCustomerManagedKey.
func (mg *AnalyticsClusterCustomerManagedKey) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AnalyticsClusterCustomerManagedKey.
func (mg *AnalyticsClusterCustomerManagedKey) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AnalyticsClusterCustomerManagedKey.
func (mg *AnalyticsClusterCustomerManagedKey) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AnalyticsClusterCustomerManagedKey.
func (mg *AnalyticsClusterCustomerManagedKey) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AnalyticsClusterCustomerManagedKey.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AnalyticsClusterCustomerManagedKey) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AnalyticsClusterCustomerManagedKey.
func (mg *AnalyticsClusterCustomerManagedKey) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AnalyticsDataExportRule.
func (mg *AnalyticsDataExportRule) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AnalyticsDataExportRule.
func (mg *AnalyticsDataExportRule) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AnalyticsDataExportRule.
func (mg *AnalyticsDataExportRule) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AnalyticsDataExportRule.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AnalyticsDataExportRule) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AnalyticsDataExportRule.
func (mg *AnalyticsDataExportRule) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AnalyticsDataExportRule.
func (mg *AnalyticsDataExportRule) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AnalyticsDataExportRule.
func (mg *AnalyticsDataExportRule) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AnalyticsDataExportRule.
func (mg *AnalyticsDataExportRule) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AnalyticsDataExportRule.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AnalyticsDataExportRule) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AnalyticsDataExportRule.
func (mg *AnalyticsDataExportRule) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AnalyticsDatasourceWindowsEvent.
func (mg *AnalyticsDatasourceWindowsEvent) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AnalyticsDatasourceWindowsEvent.
func (mg *AnalyticsDatasourceWindowsEvent) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AnalyticsDatasourceWindowsEvent.
func (mg *AnalyticsDatasourceWindowsEvent) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AnalyticsDatasourceWindowsEvent.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AnalyticsDatasourceWindowsEvent) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AnalyticsDatasourceWindowsEvent.
func (mg *AnalyticsDatasourceWindowsEvent) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AnalyticsDatasourceWindowsEvent.
func (mg *AnalyticsDatasourceWindowsEvent) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AnalyticsDatasourceWindowsEvent.
func (mg *AnalyticsDatasourceWindowsEvent) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AnalyticsDatasourceWindowsEvent.
func (mg *AnalyticsDatasourceWindowsEvent) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AnalyticsDatasourceWindowsEvent.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AnalyticsDatasourceWindowsEvent) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AnalyticsDatasourceWindowsEvent.
func (mg *AnalyticsDatasourceWindowsEvent) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AnalyticsDatasourceWindowsPerformanceCounter.
func (mg *AnalyticsDatasourceWindowsPerformanceCounter) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AnalyticsDatasourceWindowsPerformanceCounter.
func (mg *AnalyticsDatasourceWindowsPerformanceCounter) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AnalyticsDatasourceWindowsPerformanceCounter.
func (mg *AnalyticsDatasourceWindowsPerformanceCounter) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AnalyticsDatasourceWindowsPerformanceCounter.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AnalyticsDatasourceWindowsPerformanceCounter) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AnalyticsDatasourceWindowsPerformanceCounter.
func (mg *AnalyticsDatasourceWindowsPerformanceCounter) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AnalyticsDatasourceWindowsPerformanceCounter.
func (mg *AnalyticsDatasourceWindowsPerformanceCounter) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AnalyticsDatasourceWindowsPerformanceCounter.
func (mg *AnalyticsDatasourceWindowsPerformanceCounter) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AnalyticsDatasourceWindowsPerformanceCounter.
func (mg *AnalyticsDatasourceWindowsPerformanceCounter) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AnalyticsDatasourceWindowsPerformanceCounter.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AnalyticsDatasourceWindowsPerformanceCounter) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AnalyticsDatasourceWindowsPerformanceCounter.
func (mg *AnalyticsDatasourceWindowsPerformanceCounter) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AnalyticsLinkedService.
func (mg *AnalyticsLinkedService) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AnalyticsLinkedService.
func (mg *AnalyticsLinkedService) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AnalyticsLinkedService.
func (mg *AnalyticsLinkedService) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AnalyticsLinkedService.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AnalyticsLinkedService) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AnalyticsLinkedService.
func (mg *AnalyticsLinkedService) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AnalyticsLinkedService.
func (mg *AnalyticsLinkedService) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AnalyticsLinkedService.
func (mg *AnalyticsLinkedService) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AnalyticsLinkedService.
func (mg *AnalyticsLinkedService) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AnalyticsLinkedService.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AnalyticsLinkedService) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AnalyticsLinkedService.
func (mg *AnalyticsLinkedService) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AnalyticsLinkedStorageAccount.
func (mg *AnalyticsLinkedStorageAccount) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AnalyticsLinkedStorageAccount.
func (mg *AnalyticsLinkedStorageAccount) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AnalyticsLinkedStorageAccount.
func (mg *AnalyticsLinkedStorageAccount) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AnalyticsLinkedStorageAccount.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AnalyticsLinkedStorageAccount) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AnalyticsLinkedStorageAccount.
func (mg *AnalyticsLinkedStorageAccount) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AnalyticsLinkedStorageAccount.
func (mg *AnalyticsLinkedStorageAccount) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AnalyticsLinkedStorageAccount.
func (mg *AnalyticsLinkedStorageAccount) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AnalyticsLinkedStorageAccount.
func (mg *AnalyticsLinkedStorageAccount) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AnalyticsLinkedStorageAccount.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AnalyticsLinkedStorageAccount) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AnalyticsLinkedStorageAccount.
func (mg *AnalyticsLinkedStorageAccount) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AnalyticsSavedSearch.
func (mg *AnalyticsSavedSearch) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AnalyticsSavedSearch.
func (mg *AnalyticsSavedSearch) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AnalyticsSavedSearch.
func (mg *AnalyticsSavedSearch) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AnalyticsSavedSearch.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AnalyticsSavedSearch) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AnalyticsSavedSearch.
func (mg *AnalyticsSavedSearch) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AnalyticsSavedSearch.
func (mg *AnalyticsSavedSearch) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AnalyticsSavedSearch.
func (mg *AnalyticsSavedSearch) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AnalyticsSavedSearch.
func (mg *AnalyticsSavedSearch) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AnalyticsSavedSearch.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AnalyticsSavedSearch) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AnalyticsSavedSearch.
func (mg *AnalyticsSavedSearch) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AnalyticsSolution.
func (mg *AnalyticsSolution) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AnalyticsSolution.
func (mg *AnalyticsSolution) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AnalyticsSolution.
func (mg *AnalyticsSolution) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AnalyticsSolution.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AnalyticsSolution) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AnalyticsSolution.
func (mg *AnalyticsSolution) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AnalyticsSolution.
func (mg *AnalyticsSolution) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AnalyticsSolution.
func (mg *AnalyticsSolution) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AnalyticsSolution.
func (mg *AnalyticsSolution) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AnalyticsSolution.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AnalyticsSolution) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AnalyticsSolution.
func (mg *AnalyticsSolution) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
