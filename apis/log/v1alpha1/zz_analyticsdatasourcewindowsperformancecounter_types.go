/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AnalyticsDatasourceWindowsPerformanceCounterObservation struct {
}

type AnalyticsDatasourceWindowsPerformanceCounterParameters struct {

	// +kubebuilder:validation:Required
	CounterName *string `json:"counterName" tf:"counter_name,omitempty"`

	// +kubebuilder:validation:Required
	InstanceName *string `json:"instanceName" tf:"instance_name,omitempty"`

	// +kubebuilder:validation:Required
	IntervalSeconds *int64 `json:"intervalSeconds" tf:"interval_seconds,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	ObjectName *string `json:"objectName" tf:"object_name,omitempty"`

	// +kubebuilder:validation:Required
	ResourceGroupName *string `json:"resourceGroupName" tf:"resource_group_name,omitempty"`

	// +kubebuilder:validation:Required
	WorkspaceName *string `json:"workspaceName" tf:"workspace_name,omitempty"`
}

// AnalyticsDatasourceWindowsPerformanceCounterSpec defines the desired state of AnalyticsDatasourceWindowsPerformanceCounter
type AnalyticsDatasourceWindowsPerformanceCounterSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AnalyticsDatasourceWindowsPerformanceCounterParameters `json:"forProvider"`
}

// AnalyticsDatasourceWindowsPerformanceCounterStatus defines the observed state of AnalyticsDatasourceWindowsPerformanceCounter.
type AnalyticsDatasourceWindowsPerformanceCounterStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AnalyticsDatasourceWindowsPerformanceCounterObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AnalyticsDatasourceWindowsPerformanceCounter is the Schema for the AnalyticsDatasourceWindowsPerformanceCounters API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type AnalyticsDatasourceWindowsPerformanceCounter struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AnalyticsDatasourceWindowsPerformanceCounterSpec   `json:"spec"`
	Status            AnalyticsDatasourceWindowsPerformanceCounterStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AnalyticsDatasourceWindowsPerformanceCounterList contains a list of AnalyticsDatasourceWindowsPerformanceCounters
type AnalyticsDatasourceWindowsPerformanceCounterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AnalyticsDatasourceWindowsPerformanceCounter `json:"items"`
}

// Repository type metadata.
var (
	AnalyticsDatasourceWindowsPerformanceCounter_Kind             = "AnalyticsDatasourceWindowsPerformanceCounter"
	AnalyticsDatasourceWindowsPerformanceCounter_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AnalyticsDatasourceWindowsPerformanceCounter_Kind}.String()
	AnalyticsDatasourceWindowsPerformanceCounter_KindAPIVersion   = AnalyticsDatasourceWindowsPerformanceCounter_Kind + "." + CRDGroupVersion.String()
	AnalyticsDatasourceWindowsPerformanceCounter_GroupVersionKind = CRDGroupVersion.WithKind(AnalyticsDatasourceWindowsPerformanceCounter_Kind)
)

func init() {
	SchemeBuilder.Register(&AnalyticsDatasourceWindowsPerformanceCounter{}, &AnalyticsDatasourceWindowsPerformanceCounterList{})
}
