/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AnalyticsLinkedStorageAccountObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type AnalyticsLinkedStorageAccountParameters struct {

	// +kubebuilder:validation:Required
	DataSourceType *string `json:"dataSourceType" tf:"data_source_type,omitempty"`

	// +kubebuilder:validation:Required
	ResourceGroupName *string `json:"resourceGroupName" tf:"resource_group_name,omitempty"`

	// +kubebuilder:validation:Required
	StorageAccountIds []*string `json:"storageAccountIds" tf:"storage_account_ids,omitempty"`

	// +kubebuilder:validation:Required
	WorkspaceResourceID *string `json:"workspaceResourceId" tf:"workspace_resource_id,omitempty"`
}

// AnalyticsLinkedStorageAccountSpec defines the desired state of AnalyticsLinkedStorageAccount
type AnalyticsLinkedStorageAccountSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AnalyticsLinkedStorageAccountParameters `json:"forProvider"`
}

// AnalyticsLinkedStorageAccountStatus defines the observed state of AnalyticsLinkedStorageAccount.
type AnalyticsLinkedStorageAccountStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AnalyticsLinkedStorageAccountObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AnalyticsLinkedStorageAccount is the Schema for the AnalyticsLinkedStorageAccounts API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type AnalyticsLinkedStorageAccount struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AnalyticsLinkedStorageAccountSpec   `json:"spec"`
	Status            AnalyticsLinkedStorageAccountStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AnalyticsLinkedStorageAccountList contains a list of AnalyticsLinkedStorageAccounts
type AnalyticsLinkedStorageAccountList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AnalyticsLinkedStorageAccount `json:"items"`
}

// Repository type metadata.
var (
	AnalyticsLinkedStorageAccount_Kind             = "AnalyticsLinkedStorageAccount"
	AnalyticsLinkedStorageAccount_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AnalyticsLinkedStorageAccount_Kind}.String()
	AnalyticsLinkedStorageAccount_KindAPIVersion   = AnalyticsLinkedStorageAccount_Kind + "." + CRDGroupVersion.String()
	AnalyticsLinkedStorageAccount_GroupVersionKind = CRDGroupVersion.WithKind(AnalyticsLinkedStorageAccount_Kind)
)

func init() {
	SchemeBuilder.Register(&AnalyticsLinkedStorageAccount{}, &AnalyticsLinkedStorageAccountList{})
}
