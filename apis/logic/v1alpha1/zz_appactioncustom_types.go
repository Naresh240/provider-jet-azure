/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AppActionCustomObservation struct {
}

type AppActionCustomParameters struct {

	// +kubebuilder:validation:Required
	Body *string `json:"body" tf:"body,omitempty"`

	// +kubebuilder:validation:Required
	LogicAppID *string `json:"logicAppId" tf:"logic_app_id,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

// AppActionCustomSpec defines the desired state of AppActionCustom
type AppActionCustomSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AppActionCustomParameters `json:"forProvider"`
}

// AppActionCustomStatus defines the observed state of AppActionCustom.
type AppActionCustomStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AppActionCustomObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AppActionCustom is the Schema for the AppActionCustoms API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type AppActionCustom struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AppActionCustomSpec   `json:"spec"`
	Status            AppActionCustomStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AppActionCustomList contains a list of AppActionCustoms
type AppActionCustomList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AppActionCustom `json:"items"`
}

// Repository type metadata.
var (
	AppActionCustom_Kind             = "AppActionCustom"
	AppActionCustom_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AppActionCustom_Kind}.String()
	AppActionCustom_KindAPIVersion   = AppActionCustom_Kind + "." + CRDGroupVersion.String()
	AppActionCustom_GroupVersionKind = CRDGroupVersion.WithKind(AppActionCustom_Kind)
)

func init() {
	SchemeBuilder.Register(&AppActionCustom{}, &AppActionCustomList{})
}
