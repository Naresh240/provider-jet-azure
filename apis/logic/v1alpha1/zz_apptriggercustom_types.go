/*
Copyright 2022 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AppTriggerCustomObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type AppTriggerCustomParameters struct {

	// +kubebuilder:validation:Required
	Body *string `json:"body" tf:"body,omitempty"`

	// +kubebuilder:validation:Required
	LogicAppID *string `json:"logicAppId" tf:"logic_app_id,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

// AppTriggerCustomSpec defines the desired state of AppTriggerCustom
type AppTriggerCustomSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AppTriggerCustomParameters `json:"forProvider"`
}

// AppTriggerCustomStatus defines the observed state of AppTriggerCustom.
type AppTriggerCustomStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AppTriggerCustomObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AppTriggerCustom is the Schema for the AppTriggerCustoms API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type AppTriggerCustom struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AppTriggerCustomSpec   `json:"spec"`
	Status            AppTriggerCustomStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AppTriggerCustomList contains a list of AppTriggerCustoms
type AppTriggerCustomList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AppTriggerCustom `json:"items"`
}

// Repository type metadata.
var (
	AppTriggerCustom_Kind             = "AppTriggerCustom"
	AppTriggerCustom_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AppTriggerCustom_Kind}.String()
	AppTriggerCustom_KindAPIVersion   = AppTriggerCustom_Kind + "." + CRDGroupVersion.String()
	AppTriggerCustom_GroupVersionKind = CRDGroupVersion.WithKind(AppTriggerCustom_Kind)
)

func init() {
	SchemeBuilder.Register(&AppTriggerCustom{}, &AppTriggerCustomList{})
}
