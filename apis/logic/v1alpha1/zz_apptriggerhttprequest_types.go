/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AppTriggerHTTPRequestObservation struct {
	CallbackURL *string `json:"callbackUrl,omitempty" tf:"callback_url,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type AppTriggerHTTPRequestParameters struct {

	// +kubebuilder:validation:Required
	LogicAppID *string `json:"logicAppId" tf:"logic_app_id,omitempty"`

	// +kubebuilder:validation:Optional
	Method *string `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	RelativePath *string `json:"relativePath,omitempty" tf:"relative_path,omitempty"`

	// +kubebuilder:validation:Required
	Schema *string `json:"schema" tf:"schema,omitempty"`
}

// AppTriggerHTTPRequestSpec defines the desired state of AppTriggerHTTPRequest
type AppTriggerHTTPRequestSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AppTriggerHTTPRequestParameters `json:"forProvider"`
}

// AppTriggerHTTPRequestStatus defines the observed state of AppTriggerHTTPRequest.
type AppTriggerHTTPRequestStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AppTriggerHTTPRequestObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AppTriggerHTTPRequest is the Schema for the AppTriggerHTTPRequests API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type AppTriggerHTTPRequest struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AppTriggerHTTPRequestSpec   `json:"spec"`
	Status            AppTriggerHTTPRequestStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AppTriggerHTTPRequestList contains a list of AppTriggerHTTPRequests
type AppTriggerHTTPRequestList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AppTriggerHTTPRequest `json:"items"`
}

// Repository type metadata.
var (
	AppTriggerHTTPRequest_Kind             = "AppTriggerHTTPRequest"
	AppTriggerHTTPRequest_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AppTriggerHTTPRequest_Kind}.String()
	AppTriggerHTTPRequest_KindAPIVersion   = AppTriggerHTTPRequest_Kind + "." + CRDGroupVersion.String()
	AppTriggerHTTPRequest_GroupVersionKind = CRDGroupVersion.WithKind(AppTriggerHTTPRequest_Kind)
)

func init() {
	SchemeBuilder.Register(&AppTriggerHTTPRequest{}, &AppTriggerHTTPRequestList{})
}
