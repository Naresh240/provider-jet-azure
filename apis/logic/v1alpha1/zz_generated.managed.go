/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this AppActionCustom.
func (mg *AppActionCustom) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AppActionCustom.
func (mg *AppActionCustom) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AppActionCustom.
func (mg *AppActionCustom) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AppActionCustom.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AppActionCustom) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AppActionCustom.
func (mg *AppActionCustom) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AppActionCustom.
func (mg *AppActionCustom) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AppActionCustom.
func (mg *AppActionCustom) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AppActionCustom.
func (mg *AppActionCustom) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AppActionCustom.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AppActionCustom) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AppActionCustom.
func (mg *AppActionCustom) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AppActionHttp.
func (mg *AppActionHttp) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AppActionHttp.
func (mg *AppActionHttp) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AppActionHttp.
func (mg *AppActionHttp) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AppActionHttp.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AppActionHttp) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AppActionHttp.
func (mg *AppActionHttp) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AppActionHttp.
func (mg *AppActionHttp) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AppActionHttp.
func (mg *AppActionHttp) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AppActionHttp.
func (mg *AppActionHttp) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AppActionHttp.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AppActionHttp) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AppActionHttp.
func (mg *AppActionHttp) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AppIntegrationAccount.
func (mg *AppIntegrationAccount) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AppIntegrationAccount.
func (mg *AppIntegrationAccount) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AppIntegrationAccount.
func (mg *AppIntegrationAccount) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AppIntegrationAccount.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AppIntegrationAccount) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AppIntegrationAccount.
func (mg *AppIntegrationAccount) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AppIntegrationAccount.
func (mg *AppIntegrationAccount) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AppIntegrationAccount.
func (mg *AppIntegrationAccount) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AppIntegrationAccount.
func (mg *AppIntegrationAccount) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AppIntegrationAccount.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AppIntegrationAccount) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AppIntegrationAccount.
func (mg *AppIntegrationAccount) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AppIntegrationAccountAgreement.
func (mg *AppIntegrationAccountAgreement) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AppIntegrationAccountAgreement.
func (mg *AppIntegrationAccountAgreement) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AppIntegrationAccountAgreement.
func (mg *AppIntegrationAccountAgreement) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AppIntegrationAccountAgreement.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AppIntegrationAccountAgreement) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AppIntegrationAccountAgreement.
func (mg *AppIntegrationAccountAgreement) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AppIntegrationAccountAgreement.
func (mg *AppIntegrationAccountAgreement) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AppIntegrationAccountAgreement.
func (mg *AppIntegrationAccountAgreement) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AppIntegrationAccountAgreement.
func (mg *AppIntegrationAccountAgreement) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AppIntegrationAccountAgreement.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AppIntegrationAccountAgreement) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AppIntegrationAccountAgreement.
func (mg *AppIntegrationAccountAgreement) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AppIntegrationAccountAssembly.
func (mg *AppIntegrationAccountAssembly) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AppIntegrationAccountAssembly.
func (mg *AppIntegrationAccountAssembly) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AppIntegrationAccountAssembly.
func (mg *AppIntegrationAccountAssembly) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AppIntegrationAccountAssembly.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AppIntegrationAccountAssembly) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AppIntegrationAccountAssembly.
func (mg *AppIntegrationAccountAssembly) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AppIntegrationAccountAssembly.
func (mg *AppIntegrationAccountAssembly) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AppIntegrationAccountAssembly.
func (mg *AppIntegrationAccountAssembly) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AppIntegrationAccountAssembly.
func (mg *AppIntegrationAccountAssembly) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AppIntegrationAccountAssembly.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AppIntegrationAccountAssembly) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AppIntegrationAccountAssembly.
func (mg *AppIntegrationAccountAssembly) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AppIntegrationAccountBatchConfiguration.
func (mg *AppIntegrationAccountBatchConfiguration) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AppIntegrationAccountBatchConfiguration.
func (mg *AppIntegrationAccountBatchConfiguration) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AppIntegrationAccountBatchConfiguration.
func (mg *AppIntegrationAccountBatchConfiguration) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AppIntegrationAccountBatchConfiguration.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AppIntegrationAccountBatchConfiguration) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AppIntegrationAccountBatchConfiguration.
func (mg *AppIntegrationAccountBatchConfiguration) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AppIntegrationAccountBatchConfiguration.
func (mg *AppIntegrationAccountBatchConfiguration) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AppIntegrationAccountBatchConfiguration.
func (mg *AppIntegrationAccountBatchConfiguration) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AppIntegrationAccountBatchConfiguration.
func (mg *AppIntegrationAccountBatchConfiguration) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AppIntegrationAccountBatchConfiguration.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AppIntegrationAccountBatchConfiguration) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AppIntegrationAccountBatchConfiguration.
func (mg *AppIntegrationAccountBatchConfiguration) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AppIntegrationAccountMap.
func (mg *AppIntegrationAccountMap) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AppIntegrationAccountMap.
func (mg *AppIntegrationAccountMap) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AppIntegrationAccountMap.
func (mg *AppIntegrationAccountMap) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AppIntegrationAccountMap.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AppIntegrationAccountMap) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AppIntegrationAccountMap.
func (mg *AppIntegrationAccountMap) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AppIntegrationAccountMap.
func (mg *AppIntegrationAccountMap) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AppIntegrationAccountMap.
func (mg *AppIntegrationAccountMap) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AppIntegrationAccountMap.
func (mg *AppIntegrationAccountMap) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AppIntegrationAccountMap.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AppIntegrationAccountMap) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AppIntegrationAccountMap.
func (mg *AppIntegrationAccountMap) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AppIntegrationAccountPartner.
func (mg *AppIntegrationAccountPartner) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AppIntegrationAccountPartner.
func (mg *AppIntegrationAccountPartner) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AppIntegrationAccountPartner.
func (mg *AppIntegrationAccountPartner) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AppIntegrationAccountPartner.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AppIntegrationAccountPartner) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AppIntegrationAccountPartner.
func (mg *AppIntegrationAccountPartner) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AppIntegrationAccountPartner.
func (mg *AppIntegrationAccountPartner) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AppIntegrationAccountPartner.
func (mg *AppIntegrationAccountPartner) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AppIntegrationAccountPartner.
func (mg *AppIntegrationAccountPartner) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AppIntegrationAccountPartner.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AppIntegrationAccountPartner) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AppIntegrationAccountPartner.
func (mg *AppIntegrationAccountPartner) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AppIntegrationAccountSchema.
func (mg *AppIntegrationAccountSchema) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AppIntegrationAccountSchema.
func (mg *AppIntegrationAccountSchema) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AppIntegrationAccountSchema.
func (mg *AppIntegrationAccountSchema) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AppIntegrationAccountSchema.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AppIntegrationAccountSchema) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AppIntegrationAccountSchema.
func (mg *AppIntegrationAccountSchema) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AppIntegrationAccountSchema.
func (mg *AppIntegrationAccountSchema) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AppIntegrationAccountSchema.
func (mg *AppIntegrationAccountSchema) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AppIntegrationAccountSchema.
func (mg *AppIntegrationAccountSchema) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AppIntegrationAccountSchema.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AppIntegrationAccountSchema) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AppIntegrationAccountSchema.
func (mg *AppIntegrationAccountSchema) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AppIntegrationAccountSession.
func (mg *AppIntegrationAccountSession) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AppIntegrationAccountSession.
func (mg *AppIntegrationAccountSession) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AppIntegrationAccountSession.
func (mg *AppIntegrationAccountSession) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AppIntegrationAccountSession.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AppIntegrationAccountSession) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AppIntegrationAccountSession.
func (mg *AppIntegrationAccountSession) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AppIntegrationAccountSession.
func (mg *AppIntegrationAccountSession) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AppIntegrationAccountSession.
func (mg *AppIntegrationAccountSession) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AppIntegrationAccountSession.
func (mg *AppIntegrationAccountSession) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AppIntegrationAccountSession.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AppIntegrationAccountSession) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AppIntegrationAccountSession.
func (mg *AppIntegrationAccountSession) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AppTriggerCustom.
func (mg *AppTriggerCustom) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AppTriggerCustom.
func (mg *AppTriggerCustom) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AppTriggerCustom.
func (mg *AppTriggerCustom) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AppTriggerCustom.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AppTriggerCustom) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AppTriggerCustom.
func (mg *AppTriggerCustom) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AppTriggerCustom.
func (mg *AppTriggerCustom) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AppTriggerCustom.
func (mg *AppTriggerCustom) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AppTriggerCustom.
func (mg *AppTriggerCustom) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AppTriggerCustom.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AppTriggerCustom) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AppTriggerCustom.
func (mg *AppTriggerCustom) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AppTriggerHttpRequest.
func (mg *AppTriggerHttpRequest) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AppTriggerHttpRequest.
func (mg *AppTriggerHttpRequest) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AppTriggerHttpRequest.
func (mg *AppTriggerHttpRequest) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AppTriggerHttpRequest.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AppTriggerHttpRequest) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AppTriggerHttpRequest.
func (mg *AppTriggerHttpRequest) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AppTriggerHttpRequest.
func (mg *AppTriggerHttpRequest) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AppTriggerHttpRequest.
func (mg *AppTriggerHttpRequest) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AppTriggerHttpRequest.
func (mg *AppTriggerHttpRequest) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AppTriggerHttpRequest.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AppTriggerHttpRequest) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AppTriggerHttpRequest.
func (mg *AppTriggerHttpRequest) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AppTriggerRecurrence.
func (mg *AppTriggerRecurrence) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AppTriggerRecurrence.
func (mg *AppTriggerRecurrence) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AppTriggerRecurrence.
func (mg *AppTriggerRecurrence) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AppTriggerRecurrence.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AppTriggerRecurrence) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AppTriggerRecurrence.
func (mg *AppTriggerRecurrence) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AppTriggerRecurrence.
func (mg *AppTriggerRecurrence) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AppTriggerRecurrence.
func (mg *AppTriggerRecurrence) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AppTriggerRecurrence.
func (mg *AppTriggerRecurrence) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AppTriggerRecurrence.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AppTriggerRecurrence) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AppTriggerRecurrence.
func (mg *AppTriggerRecurrence) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AppWorkflow.
func (mg *AppWorkflow) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AppWorkflow.
func (mg *AppWorkflow) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AppWorkflow.
func (mg *AppWorkflow) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AppWorkflow.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AppWorkflow) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AppWorkflow.
func (mg *AppWorkflow) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AppWorkflow.
func (mg *AppWorkflow) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AppWorkflow.
func (mg *AppWorkflow) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AppWorkflow.
func (mg *AppWorkflow) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AppWorkflow.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AppWorkflow) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AppWorkflow.
func (mg *AppWorkflow) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
