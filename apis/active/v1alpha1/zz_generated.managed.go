/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this DirectoryDomainService.
func (mg *DirectoryDomainService) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DirectoryDomainService.
func (mg *DirectoryDomainService) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this DirectoryDomainService.
func (mg *DirectoryDomainService) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this DirectoryDomainService.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *DirectoryDomainService) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this DirectoryDomainService.
func (mg *DirectoryDomainService) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DirectoryDomainService.
func (mg *DirectoryDomainService) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DirectoryDomainService.
func (mg *DirectoryDomainService) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this DirectoryDomainService.
func (mg *DirectoryDomainService) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this DirectoryDomainService.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *DirectoryDomainService) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this DirectoryDomainService.
func (mg *DirectoryDomainService) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this DirectoryDomainServiceReplicaSet.
func (mg *DirectoryDomainServiceReplicaSet) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DirectoryDomainServiceReplicaSet.
func (mg *DirectoryDomainServiceReplicaSet) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this DirectoryDomainServiceReplicaSet.
func (mg *DirectoryDomainServiceReplicaSet) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this DirectoryDomainServiceReplicaSet.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *DirectoryDomainServiceReplicaSet) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this DirectoryDomainServiceReplicaSet.
func (mg *DirectoryDomainServiceReplicaSet) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DirectoryDomainServiceReplicaSet.
func (mg *DirectoryDomainServiceReplicaSet) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DirectoryDomainServiceReplicaSet.
func (mg *DirectoryDomainServiceReplicaSet) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this DirectoryDomainServiceReplicaSet.
func (mg *DirectoryDomainServiceReplicaSet) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this DirectoryDomainServiceReplicaSet.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *DirectoryDomainServiceReplicaSet) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this DirectoryDomainServiceReplicaSet.
func (mg *DirectoryDomainServiceReplicaSet) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
