/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ProtectionBackupInstanceDiskObservation struct {
}

type ProtectionBackupInstanceDiskParameters struct {

	// +kubebuilder:validation:Required
	BackupPolicyID *string `json:"backupPolicyId" tf:"backup_policy_id,omitempty"`

	// +kubebuilder:validation:Required
	DiskID *string `json:"diskId" tf:"disk_id,omitempty"`

	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	SnapshotResourceGroupName *string `json:"snapshotResourceGroupName" tf:"snapshot_resource_group_name,omitempty"`

	// +kubebuilder:validation:Required
	VaultID *string `json:"vaultId" tf:"vault_id,omitempty"`
}

// ProtectionBackupInstanceDiskSpec defines the desired state of ProtectionBackupInstanceDisk
type ProtectionBackupInstanceDiskSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ProtectionBackupInstanceDiskParameters `json:"forProvider"`
}

// ProtectionBackupInstanceDiskStatus defines the observed state of ProtectionBackupInstanceDisk.
type ProtectionBackupInstanceDiskStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ProtectionBackupInstanceDiskObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ProtectionBackupInstanceDisk is the Schema for the ProtectionBackupInstanceDisks API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type ProtectionBackupInstanceDisk struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ProtectionBackupInstanceDiskSpec   `json:"spec"`
	Status            ProtectionBackupInstanceDiskStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ProtectionBackupInstanceDiskList contains a list of ProtectionBackupInstanceDisks
type ProtectionBackupInstanceDiskList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ProtectionBackupInstanceDisk `json:"items"`
}

// Repository type metadata.
var (
	ProtectionBackupInstanceDisk_Kind             = "ProtectionBackupInstanceDisk"
	ProtectionBackupInstanceDisk_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ProtectionBackupInstanceDisk_Kind}.String()
	ProtectionBackupInstanceDisk_KindAPIVersion   = ProtectionBackupInstanceDisk_Kind + "." + CRDGroupVersion.String()
	ProtectionBackupInstanceDisk_GroupVersionKind = CRDGroupVersion.WithKind(ProtectionBackupInstanceDisk_Kind)
)

func init() {
	SchemeBuilder.Register(&ProtectionBackupInstanceDisk{}, &ProtectionBackupInstanceDiskList{})
}
