/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this Factory.
func (mg *Factory) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this Factory.
func (mg *Factory) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this Factory.
func (mg *Factory) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this Factory.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *Factory) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this Factory.
func (mg *Factory) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this Factory.
func (mg *Factory) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this Factory.
func (mg *Factory) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this Factory.
func (mg *Factory) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this Factory.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *Factory) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this Factory.
func (mg *Factory) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryCustomDataset.
func (mg *FactoryCustomDataset) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryCustomDataset.
func (mg *FactoryCustomDataset) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryCustomDataset.
func (mg *FactoryCustomDataset) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryCustomDataset.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryCustomDataset) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryCustomDataset.
func (mg *FactoryCustomDataset) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryCustomDataset.
func (mg *FactoryCustomDataset) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryCustomDataset.
func (mg *FactoryCustomDataset) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryCustomDataset.
func (mg *FactoryCustomDataset) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryCustomDataset.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryCustomDataset) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryCustomDataset.
func (mg *FactoryCustomDataset) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryDataFlow.
func (mg *FactoryDataFlow) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryDataFlow.
func (mg *FactoryDataFlow) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryDataFlow.
func (mg *FactoryDataFlow) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryDataFlow.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryDataFlow) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryDataFlow.
func (mg *FactoryDataFlow) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryDataFlow.
func (mg *FactoryDataFlow) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryDataFlow.
func (mg *FactoryDataFlow) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryDataFlow.
func (mg *FactoryDataFlow) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryDataFlow.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryDataFlow) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryDataFlow.
func (mg *FactoryDataFlow) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryDatasetAzureBlob.
func (mg *FactoryDatasetAzureBlob) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryDatasetAzureBlob.
func (mg *FactoryDatasetAzureBlob) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryDatasetAzureBlob.
func (mg *FactoryDatasetAzureBlob) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryDatasetAzureBlob.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryDatasetAzureBlob) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryDatasetAzureBlob.
func (mg *FactoryDatasetAzureBlob) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryDatasetAzureBlob.
func (mg *FactoryDatasetAzureBlob) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryDatasetAzureBlob.
func (mg *FactoryDatasetAzureBlob) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryDatasetAzureBlob.
func (mg *FactoryDatasetAzureBlob) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryDatasetAzureBlob.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryDatasetAzureBlob) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryDatasetAzureBlob.
func (mg *FactoryDatasetAzureBlob) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryDatasetBinary.
func (mg *FactoryDatasetBinary) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryDatasetBinary.
func (mg *FactoryDatasetBinary) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryDatasetBinary.
func (mg *FactoryDatasetBinary) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryDatasetBinary.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryDatasetBinary) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryDatasetBinary.
func (mg *FactoryDatasetBinary) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryDatasetBinary.
func (mg *FactoryDatasetBinary) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryDatasetBinary.
func (mg *FactoryDatasetBinary) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryDatasetBinary.
func (mg *FactoryDatasetBinary) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryDatasetBinary.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryDatasetBinary) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryDatasetBinary.
func (mg *FactoryDatasetBinary) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryDatasetCosmosdbSqlapi.
func (mg *FactoryDatasetCosmosdbSqlapi) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryDatasetCosmosdbSqlapi.
func (mg *FactoryDatasetCosmosdbSqlapi) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryDatasetCosmosdbSqlapi.
func (mg *FactoryDatasetCosmosdbSqlapi) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryDatasetCosmosdbSqlapi.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryDatasetCosmosdbSqlapi) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryDatasetCosmosdbSqlapi.
func (mg *FactoryDatasetCosmosdbSqlapi) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryDatasetCosmosdbSqlapi.
func (mg *FactoryDatasetCosmosdbSqlapi) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryDatasetCosmosdbSqlapi.
func (mg *FactoryDatasetCosmosdbSqlapi) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryDatasetCosmosdbSqlapi.
func (mg *FactoryDatasetCosmosdbSqlapi) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryDatasetCosmosdbSqlapi.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryDatasetCosmosdbSqlapi) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryDatasetCosmosdbSqlapi.
func (mg *FactoryDatasetCosmosdbSqlapi) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryDatasetDelimitedText.
func (mg *FactoryDatasetDelimitedText) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryDatasetDelimitedText.
func (mg *FactoryDatasetDelimitedText) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryDatasetDelimitedText.
func (mg *FactoryDatasetDelimitedText) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryDatasetDelimitedText.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryDatasetDelimitedText) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryDatasetDelimitedText.
func (mg *FactoryDatasetDelimitedText) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryDatasetDelimitedText.
func (mg *FactoryDatasetDelimitedText) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryDatasetDelimitedText.
func (mg *FactoryDatasetDelimitedText) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryDatasetDelimitedText.
func (mg *FactoryDatasetDelimitedText) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryDatasetDelimitedText.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryDatasetDelimitedText) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryDatasetDelimitedText.
func (mg *FactoryDatasetDelimitedText) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryDatasetHttp.
func (mg *FactoryDatasetHttp) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryDatasetHttp.
func (mg *FactoryDatasetHttp) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryDatasetHttp.
func (mg *FactoryDatasetHttp) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryDatasetHttp.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryDatasetHttp) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryDatasetHttp.
func (mg *FactoryDatasetHttp) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryDatasetHttp.
func (mg *FactoryDatasetHttp) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryDatasetHttp.
func (mg *FactoryDatasetHttp) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryDatasetHttp.
func (mg *FactoryDatasetHttp) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryDatasetHttp.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryDatasetHttp) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryDatasetHttp.
func (mg *FactoryDatasetHttp) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryDatasetJson.
func (mg *FactoryDatasetJson) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryDatasetJson.
func (mg *FactoryDatasetJson) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryDatasetJson.
func (mg *FactoryDatasetJson) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryDatasetJson.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryDatasetJson) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryDatasetJson.
func (mg *FactoryDatasetJson) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryDatasetJson.
func (mg *FactoryDatasetJson) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryDatasetJson.
func (mg *FactoryDatasetJson) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryDatasetJson.
func (mg *FactoryDatasetJson) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryDatasetJson.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryDatasetJson) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryDatasetJson.
func (mg *FactoryDatasetJson) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryDatasetMysql.
func (mg *FactoryDatasetMysql) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryDatasetMysql.
func (mg *FactoryDatasetMysql) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryDatasetMysql.
func (mg *FactoryDatasetMysql) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryDatasetMysql.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryDatasetMysql) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryDatasetMysql.
func (mg *FactoryDatasetMysql) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryDatasetMysql.
func (mg *FactoryDatasetMysql) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryDatasetMysql.
func (mg *FactoryDatasetMysql) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryDatasetMysql.
func (mg *FactoryDatasetMysql) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryDatasetMysql.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryDatasetMysql) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryDatasetMysql.
func (mg *FactoryDatasetMysql) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryDatasetParquet.
func (mg *FactoryDatasetParquet) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryDatasetParquet.
func (mg *FactoryDatasetParquet) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryDatasetParquet.
func (mg *FactoryDatasetParquet) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryDatasetParquet.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryDatasetParquet) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryDatasetParquet.
func (mg *FactoryDatasetParquet) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryDatasetParquet.
func (mg *FactoryDatasetParquet) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryDatasetParquet.
func (mg *FactoryDatasetParquet) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryDatasetParquet.
func (mg *FactoryDatasetParquet) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryDatasetParquet.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryDatasetParquet) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryDatasetParquet.
func (mg *FactoryDatasetParquet) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryDatasetPostgresql.
func (mg *FactoryDatasetPostgresql) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryDatasetPostgresql.
func (mg *FactoryDatasetPostgresql) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryDatasetPostgresql.
func (mg *FactoryDatasetPostgresql) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryDatasetPostgresql.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryDatasetPostgresql) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryDatasetPostgresql.
func (mg *FactoryDatasetPostgresql) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryDatasetPostgresql.
func (mg *FactoryDatasetPostgresql) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryDatasetPostgresql.
func (mg *FactoryDatasetPostgresql) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryDatasetPostgresql.
func (mg *FactoryDatasetPostgresql) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryDatasetPostgresql.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryDatasetPostgresql) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryDatasetPostgresql.
func (mg *FactoryDatasetPostgresql) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryDatasetSnowflake.
func (mg *FactoryDatasetSnowflake) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryDatasetSnowflake.
func (mg *FactoryDatasetSnowflake) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryDatasetSnowflake.
func (mg *FactoryDatasetSnowflake) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryDatasetSnowflake.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryDatasetSnowflake) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryDatasetSnowflake.
func (mg *FactoryDatasetSnowflake) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryDatasetSnowflake.
func (mg *FactoryDatasetSnowflake) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryDatasetSnowflake.
func (mg *FactoryDatasetSnowflake) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryDatasetSnowflake.
func (mg *FactoryDatasetSnowflake) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryDatasetSnowflake.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryDatasetSnowflake) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryDatasetSnowflake.
func (mg *FactoryDatasetSnowflake) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryDatasetSqlServerTable.
func (mg *FactoryDatasetSqlServerTable) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryDatasetSqlServerTable.
func (mg *FactoryDatasetSqlServerTable) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryDatasetSqlServerTable.
func (mg *FactoryDatasetSqlServerTable) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryDatasetSqlServerTable.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryDatasetSqlServerTable) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryDatasetSqlServerTable.
func (mg *FactoryDatasetSqlServerTable) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryDatasetSqlServerTable.
func (mg *FactoryDatasetSqlServerTable) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryDatasetSqlServerTable.
func (mg *FactoryDatasetSqlServerTable) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryDatasetSqlServerTable.
func (mg *FactoryDatasetSqlServerTable) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryDatasetSqlServerTable.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryDatasetSqlServerTable) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryDatasetSqlServerTable.
func (mg *FactoryDatasetSqlServerTable) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryIntegrationRuntimeAzure.
func (mg *FactoryIntegrationRuntimeAzure) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryIntegrationRuntimeAzure.
func (mg *FactoryIntegrationRuntimeAzure) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryIntegrationRuntimeAzure.
func (mg *FactoryIntegrationRuntimeAzure) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryIntegrationRuntimeAzure.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryIntegrationRuntimeAzure) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryIntegrationRuntimeAzure.
func (mg *FactoryIntegrationRuntimeAzure) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryIntegrationRuntimeAzure.
func (mg *FactoryIntegrationRuntimeAzure) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryIntegrationRuntimeAzure.
func (mg *FactoryIntegrationRuntimeAzure) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryIntegrationRuntimeAzure.
func (mg *FactoryIntegrationRuntimeAzure) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryIntegrationRuntimeAzure.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryIntegrationRuntimeAzure) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryIntegrationRuntimeAzure.
func (mg *FactoryIntegrationRuntimeAzure) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryIntegrationRuntimeAzureSsis.
func (mg *FactoryIntegrationRuntimeAzureSsis) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryIntegrationRuntimeAzureSsis.
func (mg *FactoryIntegrationRuntimeAzureSsis) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryIntegrationRuntimeAzureSsis.
func (mg *FactoryIntegrationRuntimeAzureSsis) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryIntegrationRuntimeAzureSsis.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryIntegrationRuntimeAzureSsis) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryIntegrationRuntimeAzureSsis.
func (mg *FactoryIntegrationRuntimeAzureSsis) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryIntegrationRuntimeAzureSsis.
func (mg *FactoryIntegrationRuntimeAzureSsis) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryIntegrationRuntimeAzureSsis.
func (mg *FactoryIntegrationRuntimeAzureSsis) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryIntegrationRuntimeAzureSsis.
func (mg *FactoryIntegrationRuntimeAzureSsis) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryIntegrationRuntimeAzureSsis.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryIntegrationRuntimeAzureSsis) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryIntegrationRuntimeAzureSsis.
func (mg *FactoryIntegrationRuntimeAzureSsis) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryIntegrationRuntimeManaged.
func (mg *FactoryIntegrationRuntimeManaged) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryIntegrationRuntimeManaged.
func (mg *FactoryIntegrationRuntimeManaged) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryIntegrationRuntimeManaged.
func (mg *FactoryIntegrationRuntimeManaged) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryIntegrationRuntimeManaged.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryIntegrationRuntimeManaged) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryIntegrationRuntimeManaged.
func (mg *FactoryIntegrationRuntimeManaged) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryIntegrationRuntimeManaged.
func (mg *FactoryIntegrationRuntimeManaged) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryIntegrationRuntimeManaged.
func (mg *FactoryIntegrationRuntimeManaged) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryIntegrationRuntimeManaged.
func (mg *FactoryIntegrationRuntimeManaged) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryIntegrationRuntimeManaged.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryIntegrationRuntimeManaged) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryIntegrationRuntimeManaged.
func (mg *FactoryIntegrationRuntimeManaged) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryIntegrationRuntimeSelfHosted.
func (mg *FactoryIntegrationRuntimeSelfHosted) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryIntegrationRuntimeSelfHosted.
func (mg *FactoryIntegrationRuntimeSelfHosted) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryIntegrationRuntimeSelfHosted.
func (mg *FactoryIntegrationRuntimeSelfHosted) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryIntegrationRuntimeSelfHosted.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryIntegrationRuntimeSelfHosted) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryIntegrationRuntimeSelfHosted.
func (mg *FactoryIntegrationRuntimeSelfHosted) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryIntegrationRuntimeSelfHosted.
func (mg *FactoryIntegrationRuntimeSelfHosted) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryIntegrationRuntimeSelfHosted.
func (mg *FactoryIntegrationRuntimeSelfHosted) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryIntegrationRuntimeSelfHosted.
func (mg *FactoryIntegrationRuntimeSelfHosted) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryIntegrationRuntimeSelfHosted.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryIntegrationRuntimeSelfHosted) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryIntegrationRuntimeSelfHosted.
func (mg *FactoryIntegrationRuntimeSelfHosted) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryLinkedCustomService.
func (mg *FactoryLinkedCustomService) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryLinkedCustomService.
func (mg *FactoryLinkedCustomService) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryLinkedCustomService.
func (mg *FactoryLinkedCustomService) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryLinkedCustomService.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryLinkedCustomService) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryLinkedCustomService.
func (mg *FactoryLinkedCustomService) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryLinkedCustomService.
func (mg *FactoryLinkedCustomService) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryLinkedCustomService.
func (mg *FactoryLinkedCustomService) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryLinkedCustomService.
func (mg *FactoryLinkedCustomService) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryLinkedCustomService.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryLinkedCustomService) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryLinkedCustomService.
func (mg *FactoryLinkedCustomService) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryLinkedServiceAzureBlobStorage.
func (mg *FactoryLinkedServiceAzureBlobStorage) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryLinkedServiceAzureBlobStorage.
func (mg *FactoryLinkedServiceAzureBlobStorage) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryLinkedServiceAzureBlobStorage.
func (mg *FactoryLinkedServiceAzureBlobStorage) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryLinkedServiceAzureBlobStorage.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceAzureBlobStorage) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryLinkedServiceAzureBlobStorage.
func (mg *FactoryLinkedServiceAzureBlobStorage) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryLinkedServiceAzureBlobStorage.
func (mg *FactoryLinkedServiceAzureBlobStorage) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryLinkedServiceAzureBlobStorage.
func (mg *FactoryLinkedServiceAzureBlobStorage) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryLinkedServiceAzureBlobStorage.
func (mg *FactoryLinkedServiceAzureBlobStorage) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryLinkedServiceAzureBlobStorage.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceAzureBlobStorage) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryLinkedServiceAzureBlobStorage.
func (mg *FactoryLinkedServiceAzureBlobStorage) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryLinkedServiceAzureDatabricks.
func (mg *FactoryLinkedServiceAzureDatabricks) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryLinkedServiceAzureDatabricks.
func (mg *FactoryLinkedServiceAzureDatabricks) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryLinkedServiceAzureDatabricks.
func (mg *FactoryLinkedServiceAzureDatabricks) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryLinkedServiceAzureDatabricks.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceAzureDatabricks) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryLinkedServiceAzureDatabricks.
func (mg *FactoryLinkedServiceAzureDatabricks) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryLinkedServiceAzureDatabricks.
func (mg *FactoryLinkedServiceAzureDatabricks) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryLinkedServiceAzureDatabricks.
func (mg *FactoryLinkedServiceAzureDatabricks) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryLinkedServiceAzureDatabricks.
func (mg *FactoryLinkedServiceAzureDatabricks) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryLinkedServiceAzureDatabricks.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceAzureDatabricks) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryLinkedServiceAzureDatabricks.
func (mg *FactoryLinkedServiceAzureDatabricks) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryLinkedServiceAzureFileStorage.
func (mg *FactoryLinkedServiceAzureFileStorage) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryLinkedServiceAzureFileStorage.
func (mg *FactoryLinkedServiceAzureFileStorage) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryLinkedServiceAzureFileStorage.
func (mg *FactoryLinkedServiceAzureFileStorage) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryLinkedServiceAzureFileStorage.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceAzureFileStorage) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryLinkedServiceAzureFileStorage.
func (mg *FactoryLinkedServiceAzureFileStorage) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryLinkedServiceAzureFileStorage.
func (mg *FactoryLinkedServiceAzureFileStorage) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryLinkedServiceAzureFileStorage.
func (mg *FactoryLinkedServiceAzureFileStorage) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryLinkedServiceAzureFileStorage.
func (mg *FactoryLinkedServiceAzureFileStorage) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryLinkedServiceAzureFileStorage.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceAzureFileStorage) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryLinkedServiceAzureFileStorage.
func (mg *FactoryLinkedServiceAzureFileStorage) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryLinkedServiceAzureFunction.
func (mg *FactoryLinkedServiceAzureFunction) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryLinkedServiceAzureFunction.
func (mg *FactoryLinkedServiceAzureFunction) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryLinkedServiceAzureFunction.
func (mg *FactoryLinkedServiceAzureFunction) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryLinkedServiceAzureFunction.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceAzureFunction) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryLinkedServiceAzureFunction.
func (mg *FactoryLinkedServiceAzureFunction) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryLinkedServiceAzureFunction.
func (mg *FactoryLinkedServiceAzureFunction) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryLinkedServiceAzureFunction.
func (mg *FactoryLinkedServiceAzureFunction) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryLinkedServiceAzureFunction.
func (mg *FactoryLinkedServiceAzureFunction) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryLinkedServiceAzureFunction.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceAzureFunction) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryLinkedServiceAzureFunction.
func (mg *FactoryLinkedServiceAzureFunction) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryLinkedServiceAzureSearch.
func (mg *FactoryLinkedServiceAzureSearch) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryLinkedServiceAzureSearch.
func (mg *FactoryLinkedServiceAzureSearch) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryLinkedServiceAzureSearch.
func (mg *FactoryLinkedServiceAzureSearch) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryLinkedServiceAzureSearch.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceAzureSearch) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryLinkedServiceAzureSearch.
func (mg *FactoryLinkedServiceAzureSearch) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryLinkedServiceAzureSearch.
func (mg *FactoryLinkedServiceAzureSearch) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryLinkedServiceAzureSearch.
func (mg *FactoryLinkedServiceAzureSearch) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryLinkedServiceAzureSearch.
func (mg *FactoryLinkedServiceAzureSearch) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryLinkedServiceAzureSearch.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceAzureSearch) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryLinkedServiceAzureSearch.
func (mg *FactoryLinkedServiceAzureSearch) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryLinkedServiceAzureSqlDatabase.
func (mg *FactoryLinkedServiceAzureSqlDatabase) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryLinkedServiceAzureSqlDatabase.
func (mg *FactoryLinkedServiceAzureSqlDatabase) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryLinkedServiceAzureSqlDatabase.
func (mg *FactoryLinkedServiceAzureSqlDatabase) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryLinkedServiceAzureSqlDatabase.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceAzureSqlDatabase) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryLinkedServiceAzureSqlDatabase.
func (mg *FactoryLinkedServiceAzureSqlDatabase) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryLinkedServiceAzureSqlDatabase.
func (mg *FactoryLinkedServiceAzureSqlDatabase) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryLinkedServiceAzureSqlDatabase.
func (mg *FactoryLinkedServiceAzureSqlDatabase) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryLinkedServiceAzureSqlDatabase.
func (mg *FactoryLinkedServiceAzureSqlDatabase) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryLinkedServiceAzureSqlDatabase.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceAzureSqlDatabase) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryLinkedServiceAzureSqlDatabase.
func (mg *FactoryLinkedServiceAzureSqlDatabase) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryLinkedServiceAzureTableStorage.
func (mg *FactoryLinkedServiceAzureTableStorage) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryLinkedServiceAzureTableStorage.
func (mg *FactoryLinkedServiceAzureTableStorage) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryLinkedServiceAzureTableStorage.
func (mg *FactoryLinkedServiceAzureTableStorage) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryLinkedServiceAzureTableStorage.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceAzureTableStorage) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryLinkedServiceAzureTableStorage.
func (mg *FactoryLinkedServiceAzureTableStorage) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryLinkedServiceAzureTableStorage.
func (mg *FactoryLinkedServiceAzureTableStorage) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryLinkedServiceAzureTableStorage.
func (mg *FactoryLinkedServiceAzureTableStorage) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryLinkedServiceAzureTableStorage.
func (mg *FactoryLinkedServiceAzureTableStorage) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryLinkedServiceAzureTableStorage.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceAzureTableStorage) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryLinkedServiceAzureTableStorage.
func (mg *FactoryLinkedServiceAzureTableStorage) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryLinkedServiceCosmosdb.
func (mg *FactoryLinkedServiceCosmosdb) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryLinkedServiceCosmosdb.
func (mg *FactoryLinkedServiceCosmosdb) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryLinkedServiceCosmosdb.
func (mg *FactoryLinkedServiceCosmosdb) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryLinkedServiceCosmosdb.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceCosmosdb) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryLinkedServiceCosmosdb.
func (mg *FactoryLinkedServiceCosmosdb) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryLinkedServiceCosmosdb.
func (mg *FactoryLinkedServiceCosmosdb) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryLinkedServiceCosmosdb.
func (mg *FactoryLinkedServiceCosmosdb) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryLinkedServiceCosmosdb.
func (mg *FactoryLinkedServiceCosmosdb) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryLinkedServiceCosmosdb.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceCosmosdb) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryLinkedServiceCosmosdb.
func (mg *FactoryLinkedServiceCosmosdb) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryLinkedServiceDataLakeStorageGen2.
func (mg *FactoryLinkedServiceDataLakeStorageGen2) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryLinkedServiceDataLakeStorageGen2.
func (mg *FactoryLinkedServiceDataLakeStorageGen2) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryLinkedServiceDataLakeStorageGen2.
func (mg *FactoryLinkedServiceDataLakeStorageGen2) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryLinkedServiceDataLakeStorageGen2.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceDataLakeStorageGen2) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryLinkedServiceDataLakeStorageGen2.
func (mg *FactoryLinkedServiceDataLakeStorageGen2) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryLinkedServiceDataLakeStorageGen2.
func (mg *FactoryLinkedServiceDataLakeStorageGen2) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryLinkedServiceDataLakeStorageGen2.
func (mg *FactoryLinkedServiceDataLakeStorageGen2) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryLinkedServiceDataLakeStorageGen2.
func (mg *FactoryLinkedServiceDataLakeStorageGen2) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryLinkedServiceDataLakeStorageGen2.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceDataLakeStorageGen2) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryLinkedServiceDataLakeStorageGen2.
func (mg *FactoryLinkedServiceDataLakeStorageGen2) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryLinkedServiceKeyVault.
func (mg *FactoryLinkedServiceKeyVault) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryLinkedServiceKeyVault.
func (mg *FactoryLinkedServiceKeyVault) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryLinkedServiceKeyVault.
func (mg *FactoryLinkedServiceKeyVault) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryLinkedServiceKeyVault.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceKeyVault) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryLinkedServiceKeyVault.
func (mg *FactoryLinkedServiceKeyVault) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryLinkedServiceKeyVault.
func (mg *FactoryLinkedServiceKeyVault) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryLinkedServiceKeyVault.
func (mg *FactoryLinkedServiceKeyVault) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryLinkedServiceKeyVault.
func (mg *FactoryLinkedServiceKeyVault) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryLinkedServiceKeyVault.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceKeyVault) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryLinkedServiceKeyVault.
func (mg *FactoryLinkedServiceKeyVault) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryLinkedServiceKusto.
func (mg *FactoryLinkedServiceKusto) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryLinkedServiceKusto.
func (mg *FactoryLinkedServiceKusto) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryLinkedServiceKusto.
func (mg *FactoryLinkedServiceKusto) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryLinkedServiceKusto.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceKusto) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryLinkedServiceKusto.
func (mg *FactoryLinkedServiceKusto) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryLinkedServiceKusto.
func (mg *FactoryLinkedServiceKusto) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryLinkedServiceKusto.
func (mg *FactoryLinkedServiceKusto) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryLinkedServiceKusto.
func (mg *FactoryLinkedServiceKusto) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryLinkedServiceKusto.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceKusto) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryLinkedServiceKusto.
func (mg *FactoryLinkedServiceKusto) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryLinkedServiceMysql.
func (mg *FactoryLinkedServiceMysql) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryLinkedServiceMysql.
func (mg *FactoryLinkedServiceMysql) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryLinkedServiceMysql.
func (mg *FactoryLinkedServiceMysql) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryLinkedServiceMysql.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceMysql) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryLinkedServiceMysql.
func (mg *FactoryLinkedServiceMysql) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryLinkedServiceMysql.
func (mg *FactoryLinkedServiceMysql) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryLinkedServiceMysql.
func (mg *FactoryLinkedServiceMysql) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryLinkedServiceMysql.
func (mg *FactoryLinkedServiceMysql) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryLinkedServiceMysql.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceMysql) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryLinkedServiceMysql.
func (mg *FactoryLinkedServiceMysql) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryLinkedServiceOdata.
func (mg *FactoryLinkedServiceOdata) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryLinkedServiceOdata.
func (mg *FactoryLinkedServiceOdata) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryLinkedServiceOdata.
func (mg *FactoryLinkedServiceOdata) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryLinkedServiceOdata.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceOdata) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryLinkedServiceOdata.
func (mg *FactoryLinkedServiceOdata) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryLinkedServiceOdata.
func (mg *FactoryLinkedServiceOdata) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryLinkedServiceOdata.
func (mg *FactoryLinkedServiceOdata) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryLinkedServiceOdata.
func (mg *FactoryLinkedServiceOdata) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryLinkedServiceOdata.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceOdata) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryLinkedServiceOdata.
func (mg *FactoryLinkedServiceOdata) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryLinkedServicePostgresql.
func (mg *FactoryLinkedServicePostgresql) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryLinkedServicePostgresql.
func (mg *FactoryLinkedServicePostgresql) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryLinkedServicePostgresql.
func (mg *FactoryLinkedServicePostgresql) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryLinkedServicePostgresql.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryLinkedServicePostgresql) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryLinkedServicePostgresql.
func (mg *FactoryLinkedServicePostgresql) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryLinkedServicePostgresql.
func (mg *FactoryLinkedServicePostgresql) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryLinkedServicePostgresql.
func (mg *FactoryLinkedServicePostgresql) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryLinkedServicePostgresql.
func (mg *FactoryLinkedServicePostgresql) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryLinkedServicePostgresql.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryLinkedServicePostgresql) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryLinkedServicePostgresql.
func (mg *FactoryLinkedServicePostgresql) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryLinkedServiceSftp.
func (mg *FactoryLinkedServiceSftp) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryLinkedServiceSftp.
func (mg *FactoryLinkedServiceSftp) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryLinkedServiceSftp.
func (mg *FactoryLinkedServiceSftp) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryLinkedServiceSftp.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceSftp) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryLinkedServiceSftp.
func (mg *FactoryLinkedServiceSftp) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryLinkedServiceSftp.
func (mg *FactoryLinkedServiceSftp) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryLinkedServiceSftp.
func (mg *FactoryLinkedServiceSftp) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryLinkedServiceSftp.
func (mg *FactoryLinkedServiceSftp) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryLinkedServiceSftp.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceSftp) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryLinkedServiceSftp.
func (mg *FactoryLinkedServiceSftp) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryLinkedServiceSnowflake.
func (mg *FactoryLinkedServiceSnowflake) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryLinkedServiceSnowflake.
func (mg *FactoryLinkedServiceSnowflake) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryLinkedServiceSnowflake.
func (mg *FactoryLinkedServiceSnowflake) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryLinkedServiceSnowflake.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceSnowflake) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryLinkedServiceSnowflake.
func (mg *FactoryLinkedServiceSnowflake) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryLinkedServiceSnowflake.
func (mg *FactoryLinkedServiceSnowflake) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryLinkedServiceSnowflake.
func (mg *FactoryLinkedServiceSnowflake) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryLinkedServiceSnowflake.
func (mg *FactoryLinkedServiceSnowflake) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryLinkedServiceSnowflake.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceSnowflake) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryLinkedServiceSnowflake.
func (mg *FactoryLinkedServiceSnowflake) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryLinkedServiceSqlServer.
func (mg *FactoryLinkedServiceSqlServer) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryLinkedServiceSqlServer.
func (mg *FactoryLinkedServiceSqlServer) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryLinkedServiceSqlServer.
func (mg *FactoryLinkedServiceSqlServer) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryLinkedServiceSqlServer.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceSqlServer) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryLinkedServiceSqlServer.
func (mg *FactoryLinkedServiceSqlServer) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryLinkedServiceSqlServer.
func (mg *FactoryLinkedServiceSqlServer) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryLinkedServiceSqlServer.
func (mg *FactoryLinkedServiceSqlServer) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryLinkedServiceSqlServer.
func (mg *FactoryLinkedServiceSqlServer) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryLinkedServiceSqlServer.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceSqlServer) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryLinkedServiceSqlServer.
func (mg *FactoryLinkedServiceSqlServer) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryLinkedServiceSynapse.
func (mg *FactoryLinkedServiceSynapse) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryLinkedServiceSynapse.
func (mg *FactoryLinkedServiceSynapse) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryLinkedServiceSynapse.
func (mg *FactoryLinkedServiceSynapse) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryLinkedServiceSynapse.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceSynapse) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryLinkedServiceSynapse.
func (mg *FactoryLinkedServiceSynapse) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryLinkedServiceSynapse.
func (mg *FactoryLinkedServiceSynapse) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryLinkedServiceSynapse.
func (mg *FactoryLinkedServiceSynapse) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryLinkedServiceSynapse.
func (mg *FactoryLinkedServiceSynapse) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryLinkedServiceSynapse.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceSynapse) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryLinkedServiceSynapse.
func (mg *FactoryLinkedServiceSynapse) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryLinkedServiceWeb.
func (mg *FactoryLinkedServiceWeb) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryLinkedServiceWeb.
func (mg *FactoryLinkedServiceWeb) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryLinkedServiceWeb.
func (mg *FactoryLinkedServiceWeb) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryLinkedServiceWeb.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceWeb) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryLinkedServiceWeb.
func (mg *FactoryLinkedServiceWeb) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryLinkedServiceWeb.
func (mg *FactoryLinkedServiceWeb) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryLinkedServiceWeb.
func (mg *FactoryLinkedServiceWeb) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryLinkedServiceWeb.
func (mg *FactoryLinkedServiceWeb) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryLinkedServiceWeb.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryLinkedServiceWeb) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryLinkedServiceWeb.
func (mg *FactoryLinkedServiceWeb) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryManagedPrivateEndpoint.
func (mg *FactoryManagedPrivateEndpoint) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryManagedPrivateEndpoint.
func (mg *FactoryManagedPrivateEndpoint) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryManagedPrivateEndpoint.
func (mg *FactoryManagedPrivateEndpoint) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryManagedPrivateEndpoint.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryManagedPrivateEndpoint) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryManagedPrivateEndpoint.
func (mg *FactoryManagedPrivateEndpoint) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryManagedPrivateEndpoint.
func (mg *FactoryManagedPrivateEndpoint) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryManagedPrivateEndpoint.
func (mg *FactoryManagedPrivateEndpoint) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryManagedPrivateEndpoint.
func (mg *FactoryManagedPrivateEndpoint) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryManagedPrivateEndpoint.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryManagedPrivateEndpoint) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryManagedPrivateEndpoint.
func (mg *FactoryManagedPrivateEndpoint) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryPipeline.
func (mg *FactoryPipeline) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryPipeline.
func (mg *FactoryPipeline) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryPipeline.
func (mg *FactoryPipeline) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryPipeline.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryPipeline) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryPipeline.
func (mg *FactoryPipeline) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryPipeline.
func (mg *FactoryPipeline) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryPipeline.
func (mg *FactoryPipeline) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryPipeline.
func (mg *FactoryPipeline) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryPipeline.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryPipeline) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryPipeline.
func (mg *FactoryPipeline) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryTriggerBlobEvent.
func (mg *FactoryTriggerBlobEvent) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryTriggerBlobEvent.
func (mg *FactoryTriggerBlobEvent) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryTriggerBlobEvent.
func (mg *FactoryTriggerBlobEvent) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryTriggerBlobEvent.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryTriggerBlobEvent) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryTriggerBlobEvent.
func (mg *FactoryTriggerBlobEvent) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryTriggerBlobEvent.
func (mg *FactoryTriggerBlobEvent) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryTriggerBlobEvent.
func (mg *FactoryTriggerBlobEvent) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryTriggerBlobEvent.
func (mg *FactoryTriggerBlobEvent) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryTriggerBlobEvent.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryTriggerBlobEvent) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryTriggerBlobEvent.
func (mg *FactoryTriggerBlobEvent) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryTriggerCustomEvent.
func (mg *FactoryTriggerCustomEvent) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryTriggerCustomEvent.
func (mg *FactoryTriggerCustomEvent) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryTriggerCustomEvent.
func (mg *FactoryTriggerCustomEvent) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryTriggerCustomEvent.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryTriggerCustomEvent) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryTriggerCustomEvent.
func (mg *FactoryTriggerCustomEvent) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryTriggerCustomEvent.
func (mg *FactoryTriggerCustomEvent) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryTriggerCustomEvent.
func (mg *FactoryTriggerCustomEvent) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryTriggerCustomEvent.
func (mg *FactoryTriggerCustomEvent) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryTriggerCustomEvent.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryTriggerCustomEvent) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryTriggerCustomEvent.
func (mg *FactoryTriggerCustomEvent) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FactoryTriggerSchedule.
func (mg *FactoryTriggerSchedule) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FactoryTriggerSchedule.
func (mg *FactoryTriggerSchedule) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FactoryTriggerSchedule.
func (mg *FactoryTriggerSchedule) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FactoryTriggerSchedule.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FactoryTriggerSchedule) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FactoryTriggerSchedule.
func (mg *FactoryTriggerSchedule) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FactoryTriggerSchedule.
func (mg *FactoryTriggerSchedule) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FactoryTriggerSchedule.
func (mg *FactoryTriggerSchedule) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FactoryTriggerSchedule.
func (mg *FactoryTriggerSchedule) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FactoryTriggerSchedule.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FactoryTriggerSchedule) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FactoryTriggerSchedule.
func (mg *FactoryTriggerSchedule) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this LakeAnalyticsFirewallRule.
func (mg *LakeAnalyticsFirewallRule) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this LakeAnalyticsFirewallRule.
func (mg *LakeAnalyticsFirewallRule) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this LakeAnalyticsFirewallRule.
func (mg *LakeAnalyticsFirewallRule) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this LakeAnalyticsFirewallRule.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *LakeAnalyticsFirewallRule) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this LakeAnalyticsFirewallRule.
func (mg *LakeAnalyticsFirewallRule) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this LakeAnalyticsFirewallRule.
func (mg *LakeAnalyticsFirewallRule) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this LakeAnalyticsFirewallRule.
func (mg *LakeAnalyticsFirewallRule) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this LakeAnalyticsFirewallRule.
func (mg *LakeAnalyticsFirewallRule) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this LakeAnalyticsFirewallRule.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *LakeAnalyticsFirewallRule) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this LakeAnalyticsFirewallRule.
func (mg *LakeAnalyticsFirewallRule) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this LakeStore.
func (mg *LakeStore) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this LakeStore.
func (mg *LakeStore) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this LakeStore.
func (mg *LakeStore) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this LakeStore.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *LakeStore) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this LakeStore.
func (mg *LakeStore) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this LakeStore.
func (mg *LakeStore) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this LakeStore.
func (mg *LakeStore) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this LakeStore.
func (mg *LakeStore) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this LakeStore.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *LakeStore) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this LakeStore.
func (mg *LakeStore) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this LakeStoreFile.
func (mg *LakeStoreFile) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this LakeStoreFile.
func (mg *LakeStoreFile) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this LakeStoreFile.
func (mg *LakeStoreFile) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this LakeStoreFile.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *LakeStoreFile) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this LakeStoreFile.
func (mg *LakeStoreFile) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this LakeStoreFile.
func (mg *LakeStoreFile) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this LakeStoreFile.
func (mg *LakeStoreFile) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this LakeStoreFile.
func (mg *LakeStoreFile) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this LakeStoreFile.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *LakeStoreFile) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this LakeStoreFile.
func (mg *LakeStoreFile) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this LakeStoreFirewallRule.
func (mg *LakeStoreFirewallRule) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this LakeStoreFirewallRule.
func (mg *LakeStoreFirewallRule) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this LakeStoreFirewallRule.
func (mg *LakeStoreFirewallRule) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this LakeStoreFirewallRule.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *LakeStoreFirewallRule) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this LakeStoreFirewallRule.
func (mg *LakeStoreFirewallRule) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this LakeStoreFirewallRule.
func (mg *LakeStoreFirewallRule) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this LakeStoreFirewallRule.
func (mg *LakeStoreFirewallRule) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this LakeStoreFirewallRule.
func (mg *LakeStoreFirewallRule) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this LakeStoreFirewallRule.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *LakeStoreFirewallRule) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this LakeStoreFirewallRule.
func (mg *LakeStoreFirewallRule) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this LakeStoreVirtualNetworkRule.
func (mg *LakeStoreVirtualNetworkRule) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this LakeStoreVirtualNetworkRule.
func (mg *LakeStoreVirtualNetworkRule) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this LakeStoreVirtualNetworkRule.
func (mg *LakeStoreVirtualNetworkRule) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this LakeStoreVirtualNetworkRule.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *LakeStoreVirtualNetworkRule) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this LakeStoreVirtualNetworkRule.
func (mg *LakeStoreVirtualNetworkRule) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this LakeStoreVirtualNetworkRule.
func (mg *LakeStoreVirtualNetworkRule) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this LakeStoreVirtualNetworkRule.
func (mg *LakeStoreVirtualNetworkRule) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this LakeStoreVirtualNetworkRule.
func (mg *LakeStoreVirtualNetworkRule) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this LakeStoreVirtualNetworkRule.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *LakeStoreVirtualNetworkRule) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this LakeStoreVirtualNetworkRule.
func (mg *LakeStoreVirtualNetworkRule) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ProtectionBackupInstanceBlobStorage.
func (mg *ProtectionBackupInstanceBlobStorage) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ProtectionBackupInstanceBlobStorage.
func (mg *ProtectionBackupInstanceBlobStorage) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ProtectionBackupInstanceBlobStorage.
func (mg *ProtectionBackupInstanceBlobStorage) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ProtectionBackupInstanceBlobStorage.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ProtectionBackupInstanceBlobStorage) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ProtectionBackupInstanceBlobStorage.
func (mg *ProtectionBackupInstanceBlobStorage) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ProtectionBackupInstanceBlobStorage.
func (mg *ProtectionBackupInstanceBlobStorage) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ProtectionBackupInstanceBlobStorage.
func (mg *ProtectionBackupInstanceBlobStorage) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ProtectionBackupInstanceBlobStorage.
func (mg *ProtectionBackupInstanceBlobStorage) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ProtectionBackupInstanceBlobStorage.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ProtectionBackupInstanceBlobStorage) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ProtectionBackupInstanceBlobStorage.
func (mg *ProtectionBackupInstanceBlobStorage) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ProtectionBackupInstanceDisk.
func (mg *ProtectionBackupInstanceDisk) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ProtectionBackupInstanceDisk.
func (mg *ProtectionBackupInstanceDisk) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ProtectionBackupInstanceDisk.
func (mg *ProtectionBackupInstanceDisk) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ProtectionBackupInstanceDisk.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ProtectionBackupInstanceDisk) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ProtectionBackupInstanceDisk.
func (mg *ProtectionBackupInstanceDisk) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ProtectionBackupInstanceDisk.
func (mg *ProtectionBackupInstanceDisk) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ProtectionBackupInstanceDisk.
func (mg *ProtectionBackupInstanceDisk) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ProtectionBackupInstanceDisk.
func (mg *ProtectionBackupInstanceDisk) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ProtectionBackupInstanceDisk.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ProtectionBackupInstanceDisk) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ProtectionBackupInstanceDisk.
func (mg *ProtectionBackupInstanceDisk) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ProtectionBackupInstancePostgresql.
func (mg *ProtectionBackupInstancePostgresql) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ProtectionBackupInstancePostgresql.
func (mg *ProtectionBackupInstancePostgresql) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ProtectionBackupInstancePostgresql.
func (mg *ProtectionBackupInstancePostgresql) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ProtectionBackupInstancePostgresql.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ProtectionBackupInstancePostgresql) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ProtectionBackupInstancePostgresql.
func (mg *ProtectionBackupInstancePostgresql) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ProtectionBackupInstancePostgresql.
func (mg *ProtectionBackupInstancePostgresql) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ProtectionBackupInstancePostgresql.
func (mg *ProtectionBackupInstancePostgresql) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ProtectionBackupInstancePostgresql.
func (mg *ProtectionBackupInstancePostgresql) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ProtectionBackupInstancePostgresql.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ProtectionBackupInstancePostgresql) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ProtectionBackupInstancePostgresql.
func (mg *ProtectionBackupInstancePostgresql) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ProtectionBackupPolicyBlobStorage.
func (mg *ProtectionBackupPolicyBlobStorage) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ProtectionBackupPolicyBlobStorage.
func (mg *ProtectionBackupPolicyBlobStorage) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ProtectionBackupPolicyBlobStorage.
func (mg *ProtectionBackupPolicyBlobStorage) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ProtectionBackupPolicyBlobStorage.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ProtectionBackupPolicyBlobStorage) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ProtectionBackupPolicyBlobStorage.
func (mg *ProtectionBackupPolicyBlobStorage) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ProtectionBackupPolicyBlobStorage.
func (mg *ProtectionBackupPolicyBlobStorage) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ProtectionBackupPolicyBlobStorage.
func (mg *ProtectionBackupPolicyBlobStorage) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ProtectionBackupPolicyBlobStorage.
func (mg *ProtectionBackupPolicyBlobStorage) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ProtectionBackupPolicyBlobStorage.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ProtectionBackupPolicyBlobStorage) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ProtectionBackupPolicyBlobStorage.
func (mg *ProtectionBackupPolicyBlobStorage) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ProtectionBackupPolicyDisk.
func (mg *ProtectionBackupPolicyDisk) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ProtectionBackupPolicyDisk.
func (mg *ProtectionBackupPolicyDisk) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ProtectionBackupPolicyDisk.
func (mg *ProtectionBackupPolicyDisk) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ProtectionBackupPolicyDisk.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ProtectionBackupPolicyDisk) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ProtectionBackupPolicyDisk.
func (mg *ProtectionBackupPolicyDisk) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ProtectionBackupPolicyDisk.
func (mg *ProtectionBackupPolicyDisk) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ProtectionBackupPolicyDisk.
func (mg *ProtectionBackupPolicyDisk) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ProtectionBackupPolicyDisk.
func (mg *ProtectionBackupPolicyDisk) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ProtectionBackupPolicyDisk.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ProtectionBackupPolicyDisk) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ProtectionBackupPolicyDisk.
func (mg *ProtectionBackupPolicyDisk) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ProtectionBackupPolicyPostgresql.
func (mg *ProtectionBackupPolicyPostgresql) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ProtectionBackupPolicyPostgresql.
func (mg *ProtectionBackupPolicyPostgresql) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ProtectionBackupPolicyPostgresql.
func (mg *ProtectionBackupPolicyPostgresql) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ProtectionBackupPolicyPostgresql.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ProtectionBackupPolicyPostgresql) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ProtectionBackupPolicyPostgresql.
func (mg *ProtectionBackupPolicyPostgresql) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ProtectionBackupPolicyPostgresql.
func (mg *ProtectionBackupPolicyPostgresql) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ProtectionBackupPolicyPostgresql.
func (mg *ProtectionBackupPolicyPostgresql) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ProtectionBackupPolicyPostgresql.
func (mg *ProtectionBackupPolicyPostgresql) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ProtectionBackupPolicyPostgresql.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ProtectionBackupPolicyPostgresql) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ProtectionBackupPolicyPostgresql.
func (mg *ProtectionBackupPolicyPostgresql) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ProtectionBackupVault.
func (mg *ProtectionBackupVault) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ProtectionBackupVault.
func (mg *ProtectionBackupVault) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ProtectionBackupVault.
func (mg *ProtectionBackupVault) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ProtectionBackupVault.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ProtectionBackupVault) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ProtectionBackupVault.
func (mg *ProtectionBackupVault) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ProtectionBackupVault.
func (mg *ProtectionBackupVault) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ProtectionBackupVault.
func (mg *ProtectionBackupVault) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ProtectionBackupVault.
func (mg *ProtectionBackupVault) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ProtectionBackupVault.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ProtectionBackupVault) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ProtectionBackupVault.
func (mg *ProtectionBackupVault) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this Share.
func (mg *Share) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this Share.
func (mg *Share) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this Share.
func (mg *Share) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this Share.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *Share) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this Share.
func (mg *Share) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this Share.
func (mg *Share) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this Share.
func (mg *Share) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this Share.
func (mg *Share) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this Share.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *Share) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this Share.
func (mg *Share) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ShareAccount.
func (mg *ShareAccount) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ShareAccount.
func (mg *ShareAccount) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ShareAccount.
func (mg *ShareAccount) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ShareAccount.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ShareAccount) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ShareAccount.
func (mg *ShareAccount) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ShareAccount.
func (mg *ShareAccount) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ShareAccount.
func (mg *ShareAccount) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ShareAccount.
func (mg *ShareAccount) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ShareAccount.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ShareAccount) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ShareAccount.
func (mg *ShareAccount) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ShareDatasetBlobStorage.
func (mg *ShareDatasetBlobStorage) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ShareDatasetBlobStorage.
func (mg *ShareDatasetBlobStorage) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ShareDatasetBlobStorage.
func (mg *ShareDatasetBlobStorage) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ShareDatasetBlobStorage.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ShareDatasetBlobStorage) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ShareDatasetBlobStorage.
func (mg *ShareDatasetBlobStorage) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ShareDatasetBlobStorage.
func (mg *ShareDatasetBlobStorage) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ShareDatasetBlobStorage.
func (mg *ShareDatasetBlobStorage) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ShareDatasetBlobStorage.
func (mg *ShareDatasetBlobStorage) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ShareDatasetBlobStorage.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ShareDatasetBlobStorage) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ShareDatasetBlobStorage.
func (mg *ShareDatasetBlobStorage) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ShareDatasetDataLakeGen1.
func (mg *ShareDatasetDataLakeGen1) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ShareDatasetDataLakeGen1.
func (mg *ShareDatasetDataLakeGen1) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ShareDatasetDataLakeGen1.
func (mg *ShareDatasetDataLakeGen1) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ShareDatasetDataLakeGen1.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ShareDatasetDataLakeGen1) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ShareDatasetDataLakeGen1.
func (mg *ShareDatasetDataLakeGen1) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ShareDatasetDataLakeGen1.
func (mg *ShareDatasetDataLakeGen1) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ShareDatasetDataLakeGen1.
func (mg *ShareDatasetDataLakeGen1) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ShareDatasetDataLakeGen1.
func (mg *ShareDatasetDataLakeGen1) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ShareDatasetDataLakeGen1.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ShareDatasetDataLakeGen1) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ShareDatasetDataLakeGen1.
func (mg *ShareDatasetDataLakeGen1) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ShareDatasetDataLakeGen2.
func (mg *ShareDatasetDataLakeGen2) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ShareDatasetDataLakeGen2.
func (mg *ShareDatasetDataLakeGen2) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ShareDatasetDataLakeGen2.
func (mg *ShareDatasetDataLakeGen2) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ShareDatasetDataLakeGen2.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ShareDatasetDataLakeGen2) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ShareDatasetDataLakeGen2.
func (mg *ShareDatasetDataLakeGen2) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ShareDatasetDataLakeGen2.
func (mg *ShareDatasetDataLakeGen2) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ShareDatasetDataLakeGen2.
func (mg *ShareDatasetDataLakeGen2) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ShareDatasetDataLakeGen2.
func (mg *ShareDatasetDataLakeGen2) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ShareDatasetDataLakeGen2.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ShareDatasetDataLakeGen2) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ShareDatasetDataLakeGen2.
func (mg *ShareDatasetDataLakeGen2) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ShareDatasetKustoCluster.
func (mg *ShareDatasetKustoCluster) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ShareDatasetKustoCluster.
func (mg *ShareDatasetKustoCluster) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ShareDatasetKustoCluster.
func (mg *ShareDatasetKustoCluster) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ShareDatasetKustoCluster.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ShareDatasetKustoCluster) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ShareDatasetKustoCluster.
func (mg *ShareDatasetKustoCluster) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ShareDatasetKustoCluster.
func (mg *ShareDatasetKustoCluster) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ShareDatasetKustoCluster.
func (mg *ShareDatasetKustoCluster) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ShareDatasetKustoCluster.
func (mg *ShareDatasetKustoCluster) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ShareDatasetKustoCluster.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ShareDatasetKustoCluster) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ShareDatasetKustoCluster.
func (mg *ShareDatasetKustoCluster) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ShareDatasetKustoDatabase.
func (mg *ShareDatasetKustoDatabase) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ShareDatasetKustoDatabase.
func (mg *ShareDatasetKustoDatabase) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ShareDatasetKustoDatabase.
func (mg *ShareDatasetKustoDatabase) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ShareDatasetKustoDatabase.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ShareDatasetKustoDatabase) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ShareDatasetKustoDatabase.
func (mg *ShareDatasetKustoDatabase) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ShareDatasetKustoDatabase.
func (mg *ShareDatasetKustoDatabase) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ShareDatasetKustoDatabase.
func (mg *ShareDatasetKustoDatabase) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ShareDatasetKustoDatabase.
func (mg *ShareDatasetKustoDatabase) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ShareDatasetKustoDatabase.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ShareDatasetKustoDatabase) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ShareDatasetKustoDatabase.
func (mg *ShareDatasetKustoDatabase) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
