/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ProtectionBackupInstanceBlobStorageObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type ProtectionBackupInstanceBlobStorageParameters struct {

	// +kubebuilder:validation:Required
	BackupPolicyID *string `json:"backupPolicyId" tf:"backup_policy_id,omitempty"`

	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	StorageAccountID *string `json:"storageAccountId" tf:"storage_account_id,omitempty"`

	// +kubebuilder:validation:Required
	VaultID *string `json:"vaultId" tf:"vault_id,omitempty"`
}

// ProtectionBackupInstanceBlobStorageSpec defines the desired state of ProtectionBackupInstanceBlobStorage
type ProtectionBackupInstanceBlobStorageSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ProtectionBackupInstanceBlobStorageParameters `json:"forProvider"`
}

// ProtectionBackupInstanceBlobStorageStatus defines the observed state of ProtectionBackupInstanceBlobStorage.
type ProtectionBackupInstanceBlobStorageStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ProtectionBackupInstanceBlobStorageObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ProtectionBackupInstanceBlobStorage is the Schema for the ProtectionBackupInstanceBlobStorages API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type ProtectionBackupInstanceBlobStorage struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ProtectionBackupInstanceBlobStorageSpec   `json:"spec"`
	Status            ProtectionBackupInstanceBlobStorageStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ProtectionBackupInstanceBlobStorageList contains a list of ProtectionBackupInstanceBlobStorages
type ProtectionBackupInstanceBlobStorageList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ProtectionBackupInstanceBlobStorage `json:"items"`
}

// Repository type metadata.
var (
	ProtectionBackupInstanceBlobStorage_Kind             = "ProtectionBackupInstanceBlobStorage"
	ProtectionBackupInstanceBlobStorage_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ProtectionBackupInstanceBlobStorage_Kind}.String()
	ProtectionBackupInstanceBlobStorage_KindAPIVersion   = ProtectionBackupInstanceBlobStorage_Kind + "." + CRDGroupVersion.String()
	ProtectionBackupInstanceBlobStorage_GroupVersionKind = CRDGroupVersion.WithKind(ProtectionBackupInstanceBlobStorage_Kind)
)

func init() {
	SchemeBuilder.Register(&ProtectionBackupInstanceBlobStorage{}, &ProtectionBackupInstanceBlobStorageList{})
}
