/*
Copyright 2022 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type MSSQLJobAgentObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type MSSQLJobAgentParameters struct {

	// +kubebuilder:validation:Required
	DatabaseID *string `json:"databaseId" tf:"database_id,omitempty"`

	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// MSSQLJobAgentSpec defines the desired state of MSSQLJobAgent
type MSSQLJobAgentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MSSQLJobAgentParameters `json:"forProvider"`
}

// MSSQLJobAgentStatus defines the observed state of MSSQLJobAgent.
type MSSQLJobAgentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MSSQLJobAgentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// MSSQLJobAgent is the Schema for the MSSQLJobAgents API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type MSSQLJobAgent struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MSSQLJobAgentSpec   `json:"spec"`
	Status            MSSQLJobAgentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MSSQLJobAgentList contains a list of MSSQLJobAgents
type MSSQLJobAgentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MSSQLJobAgent `json:"items"`
}

// Repository type metadata.
var (
	MSSQLJobAgent_Kind             = "MSSQLJobAgent"
	MSSQLJobAgent_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MSSQLJobAgent_Kind}.String()
	MSSQLJobAgent_KindAPIVersion   = MSSQLJobAgent_Kind + "." + CRDGroupVersion.String()
	MSSQLJobAgent_GroupVersionKind = CRDGroupVersion.WithKind(MSSQLJobAgent_Kind)
)

func init() {
	SchemeBuilder.Register(&MSSQLJobAgent{}, &MSSQLJobAgentList{})
}
