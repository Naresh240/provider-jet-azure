/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type MSSQLVirtualNetworkRuleObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type MSSQLVirtualNetworkRuleParameters struct {

	// +kubebuilder:validation:Optional
	IgnoreMissingVnetServiceEndpoint *bool `json:"ignoreMissingVnetServiceEndpoint,omitempty" tf:"ignore_missing_vnet_service_endpoint,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	ServerID *string `json:"serverId" tf:"server_id,omitempty"`

	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-jet-azure/apis/network/v1alpha2.Subnet
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-jet-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`
}

// MSSQLVirtualNetworkRuleSpec defines the desired state of MSSQLVirtualNetworkRule
type MSSQLVirtualNetworkRuleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MSSQLVirtualNetworkRuleParameters `json:"forProvider"`
}

// MSSQLVirtualNetworkRuleStatus defines the observed state of MSSQLVirtualNetworkRule.
type MSSQLVirtualNetworkRuleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MSSQLVirtualNetworkRuleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// MSSQLVirtualNetworkRule is the Schema for the MSSQLVirtualNetworkRules API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type MSSQLVirtualNetworkRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MSSQLVirtualNetworkRuleSpec   `json:"spec"`
	Status            MSSQLVirtualNetworkRuleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MSSQLVirtualNetworkRuleList contains a list of MSSQLVirtualNetworkRules
type MSSQLVirtualNetworkRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MSSQLVirtualNetworkRule `json:"items"`
}

// Repository type metadata.
var (
	MSSQLVirtualNetworkRule_Kind             = "MSSQLVirtualNetworkRule"
	MSSQLVirtualNetworkRule_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MSSQLVirtualNetworkRule_Kind}.String()
	MSSQLVirtualNetworkRule_KindAPIVersion   = MSSQLVirtualNetworkRule_Kind + "." + CRDGroupVersion.String()
	MSSQLVirtualNetworkRule_GroupVersionKind = CRDGroupVersion.WithKind(MSSQLVirtualNetworkRule_Kind)
)

func init() {
	SchemeBuilder.Register(&MSSQLVirtualNetworkRule{}, &MSSQLVirtualNetworkRuleList{})
}
