/*
Copyright 2022 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type MSSQLFirewallRuleObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type MSSQLFirewallRuleParameters struct {

	// +kubebuilder:validation:Required
	EndIPAddress *string `json:"endIpAddress" tf:"end_ip_address,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	ServerID *string `json:"serverId" tf:"server_id,omitempty"`

	// +kubebuilder:validation:Required
	StartIPAddress *string `json:"startIpAddress" tf:"start_ip_address,omitempty"`
}

// MSSQLFirewallRuleSpec defines the desired state of MSSQLFirewallRule
type MSSQLFirewallRuleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MSSQLFirewallRuleParameters `json:"forProvider"`
}

// MSSQLFirewallRuleStatus defines the observed state of MSSQLFirewallRule.
type MSSQLFirewallRuleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MSSQLFirewallRuleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// MSSQLFirewallRule is the Schema for the MSSQLFirewallRules API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type MSSQLFirewallRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MSSQLFirewallRuleSpec   `json:"spec"`
	Status            MSSQLFirewallRuleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MSSQLFirewallRuleList contains a list of MSSQLFirewallRules
type MSSQLFirewallRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MSSQLFirewallRule `json:"items"`
}

// Repository type metadata.
var (
	MSSQLFirewallRule_Kind             = "MSSQLFirewallRule"
	MSSQLFirewallRule_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MSSQLFirewallRule_Kind}.String()
	MSSQLFirewallRule_KindAPIVersion   = MSSQLFirewallRule_Kind + "." + CRDGroupVersion.String()
	MSSQLFirewallRule_GroupVersionKind = CRDGroupVersion.WithKind(MSSQLFirewallRule_Kind)
)

func init() {
	SchemeBuilder.Register(&MSSQLFirewallRule{}, &MSSQLFirewallRuleList{})
}
