/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CloudAppMysqlAssociationObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type CloudAppMysqlAssociationParameters struct {

	// +kubebuilder:validation:Required
	DatabaseName *string `json:"databaseName" tf:"database_name,omitempty"`

	// +kubebuilder:validation:Required
	MysqlServerID *string `json:"mysqlServerId" tf:"mysql_server_id,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// +kubebuilder:validation:Required
	SpringCloudAppID *string `json:"springCloudAppId" tf:"spring_cloud_app_id,omitempty"`

	// +kubebuilder:validation:Required
	Username *string `json:"username" tf:"username,omitempty"`
}

// CloudAppMysqlAssociationSpec defines the desired state of CloudAppMysqlAssociation
type CloudAppMysqlAssociationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CloudAppMysqlAssociationParameters `json:"forProvider"`
}

// CloudAppMysqlAssociationStatus defines the observed state of CloudAppMysqlAssociation.
type CloudAppMysqlAssociationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CloudAppMysqlAssociationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// CloudAppMysqlAssociation is the Schema for the CloudAppMysqlAssociations API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type CloudAppMysqlAssociation struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CloudAppMysqlAssociationSpec   `json:"spec"`
	Status            CloudAppMysqlAssociationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CloudAppMysqlAssociationList contains a list of CloudAppMysqlAssociations
type CloudAppMysqlAssociationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CloudAppMysqlAssociation `json:"items"`
}

// Repository type metadata.
var (
	CloudAppMysqlAssociation_Kind             = "CloudAppMysqlAssociation"
	CloudAppMysqlAssociation_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CloudAppMysqlAssociation_Kind}.String()
	CloudAppMysqlAssociation_KindAPIVersion   = CloudAppMysqlAssociation_Kind + "." + CRDGroupVersion.String()
	CloudAppMysqlAssociation_GroupVersionKind = CRDGroupVersion.WithKind(CloudAppMysqlAssociation_Kind)
)

func init() {
	SchemeBuilder.Register(&CloudAppMysqlAssociation{}, &CloudAppMysqlAssociationList{})
}
