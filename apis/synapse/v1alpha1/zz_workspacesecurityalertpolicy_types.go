/*
Copyright 2022 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type WorkspaceSecurityAlertPolicyObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type WorkspaceSecurityAlertPolicyParameters struct {

	// +kubebuilder:validation:Optional
	DisabledAlerts []*string `json:"disabledAlerts,omitempty" tf:"disabled_alerts,omitempty"`

	// +kubebuilder:validation:Optional
	EmailAccountAdminsEnabled *bool `json:"emailAccountAdminsEnabled,omitempty" tf:"email_account_admins_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	EmailAddresses []*string `json:"emailAddresses,omitempty" tf:"email_addresses,omitempty"`

	// +kubebuilder:validation:Required
	PolicyState *string `json:"policyState" tf:"policy_state,omitempty"`

	// +kubebuilder:validation:Optional
	RetentionDays *float64 `json:"retentionDays,omitempty" tf:"retention_days,omitempty"`

	// +kubebuilder:validation:Optional
	StorageAccountAccessKeySecretRef *v1.SecretKeySelector `json:"storageAccountAccessKeySecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	StorageEndpoint *string `json:"storageEndpoint,omitempty" tf:"storage_endpoint,omitempty"`

	// +kubebuilder:validation:Required
	SynapseWorkspaceID *string `json:"synapseWorkspaceId" tf:"synapse_workspace_id,omitempty"`
}

// WorkspaceSecurityAlertPolicySpec defines the desired state of WorkspaceSecurityAlertPolicy
type WorkspaceSecurityAlertPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WorkspaceSecurityAlertPolicyParameters `json:"forProvider"`
}

// WorkspaceSecurityAlertPolicyStatus defines the observed state of WorkspaceSecurityAlertPolicy.
type WorkspaceSecurityAlertPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WorkspaceSecurityAlertPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// WorkspaceSecurityAlertPolicy is the Schema for the WorkspaceSecurityAlertPolicys API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type WorkspaceSecurityAlertPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              WorkspaceSecurityAlertPolicySpec   `json:"spec"`
	Status            WorkspaceSecurityAlertPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WorkspaceSecurityAlertPolicyList contains a list of WorkspaceSecurityAlertPolicys
type WorkspaceSecurityAlertPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WorkspaceSecurityAlertPolicy `json:"items"`
}

// Repository type metadata.
var (
	WorkspaceSecurityAlertPolicy_Kind             = "WorkspaceSecurityAlertPolicy"
	WorkspaceSecurityAlertPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: WorkspaceSecurityAlertPolicy_Kind}.String()
	WorkspaceSecurityAlertPolicy_KindAPIVersion   = WorkspaceSecurityAlertPolicy_Kind + "." + CRDGroupVersion.String()
	WorkspaceSecurityAlertPolicy_GroupVersionKind = CRDGroupVersion.WithKind(WorkspaceSecurityAlertPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&WorkspaceSecurityAlertPolicy{}, &WorkspaceSecurityAlertPolicyList{})
}
