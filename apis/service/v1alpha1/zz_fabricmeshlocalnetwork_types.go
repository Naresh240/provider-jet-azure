/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type FabricMeshLocalNetworkObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type FabricMeshLocalNetworkParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	NetworkAddressPrefix *string `json:"networkAddressPrefix" tf:"network_address_prefix,omitempty"`

	// +kubebuilder:validation:Required
	ResourceGroupName *string `json:"resourceGroupName" tf:"resource_group_name,omitempty"`

	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// FabricMeshLocalNetworkSpec defines the desired state of FabricMeshLocalNetwork
type FabricMeshLocalNetworkSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FabricMeshLocalNetworkParameters `json:"forProvider"`
}

// FabricMeshLocalNetworkStatus defines the observed state of FabricMeshLocalNetwork.
type FabricMeshLocalNetworkStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FabricMeshLocalNetworkObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// FabricMeshLocalNetwork is the Schema for the FabricMeshLocalNetworks API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type FabricMeshLocalNetwork struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FabricMeshLocalNetworkSpec   `json:"spec"`
	Status            FabricMeshLocalNetworkStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FabricMeshLocalNetworkList contains a list of FabricMeshLocalNetworks
type FabricMeshLocalNetworkList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FabricMeshLocalNetwork `json:"items"`
}

// Repository type metadata.
var (
	FabricMeshLocalNetwork_Kind             = "FabricMeshLocalNetwork"
	FabricMeshLocalNetwork_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: FabricMeshLocalNetwork_Kind}.String()
	FabricMeshLocalNetwork_KindAPIVersion   = FabricMeshLocalNetwork_Kind + "." + CRDGroupVersion.String()
	FabricMeshLocalNetwork_GroupVersionKind = CRDGroupVersion.WithKind(FabricMeshLocalNetwork_Kind)
)

func init() {
	SchemeBuilder.Register(&FabricMeshLocalNetwork{}, &FabricMeshLocalNetworkList{})
}
