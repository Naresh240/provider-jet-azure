/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this RecoveryFabric.
func (mg *RecoveryFabric) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this RecoveryFabric.
func (mg *RecoveryFabric) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this RecoveryFabric.
func (mg *RecoveryFabric) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this RecoveryFabric.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *RecoveryFabric) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this RecoveryFabric.
func (mg *RecoveryFabric) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this RecoveryFabric.
func (mg *RecoveryFabric) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this RecoveryFabric.
func (mg *RecoveryFabric) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this RecoveryFabric.
func (mg *RecoveryFabric) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this RecoveryFabric.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *RecoveryFabric) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this RecoveryFabric.
func (mg *RecoveryFabric) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this RecoveryNetworkMapping.
func (mg *RecoveryNetworkMapping) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this RecoveryNetworkMapping.
func (mg *RecoveryNetworkMapping) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this RecoveryNetworkMapping.
func (mg *RecoveryNetworkMapping) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this RecoveryNetworkMapping.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *RecoveryNetworkMapping) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this RecoveryNetworkMapping.
func (mg *RecoveryNetworkMapping) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this RecoveryNetworkMapping.
func (mg *RecoveryNetworkMapping) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this RecoveryNetworkMapping.
func (mg *RecoveryNetworkMapping) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this RecoveryNetworkMapping.
func (mg *RecoveryNetworkMapping) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this RecoveryNetworkMapping.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *RecoveryNetworkMapping) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this RecoveryNetworkMapping.
func (mg *RecoveryNetworkMapping) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this RecoveryProtectionContainer.
func (mg *RecoveryProtectionContainer) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this RecoveryProtectionContainer.
func (mg *RecoveryProtectionContainer) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this RecoveryProtectionContainer.
func (mg *RecoveryProtectionContainer) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this RecoveryProtectionContainer.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *RecoveryProtectionContainer) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this RecoveryProtectionContainer.
func (mg *RecoveryProtectionContainer) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this RecoveryProtectionContainer.
func (mg *RecoveryProtectionContainer) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this RecoveryProtectionContainer.
func (mg *RecoveryProtectionContainer) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this RecoveryProtectionContainer.
func (mg *RecoveryProtectionContainer) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this RecoveryProtectionContainer.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *RecoveryProtectionContainer) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this RecoveryProtectionContainer.
func (mg *RecoveryProtectionContainer) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this RecoveryProtectionContainerMapping.
func (mg *RecoveryProtectionContainerMapping) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this RecoveryProtectionContainerMapping.
func (mg *RecoveryProtectionContainerMapping) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this RecoveryProtectionContainerMapping.
func (mg *RecoveryProtectionContainerMapping) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this RecoveryProtectionContainerMapping.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *RecoveryProtectionContainerMapping) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this RecoveryProtectionContainerMapping.
func (mg *RecoveryProtectionContainerMapping) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this RecoveryProtectionContainerMapping.
func (mg *RecoveryProtectionContainerMapping) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this RecoveryProtectionContainerMapping.
func (mg *RecoveryProtectionContainerMapping) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this RecoveryProtectionContainerMapping.
func (mg *RecoveryProtectionContainerMapping) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this RecoveryProtectionContainerMapping.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *RecoveryProtectionContainerMapping) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this RecoveryProtectionContainerMapping.
func (mg *RecoveryProtectionContainerMapping) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this RecoveryReplicatedVm.
func (mg *RecoveryReplicatedVm) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this RecoveryReplicatedVm.
func (mg *RecoveryReplicatedVm) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this RecoveryReplicatedVm.
func (mg *RecoveryReplicatedVm) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this RecoveryReplicatedVm.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *RecoveryReplicatedVm) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this RecoveryReplicatedVm.
func (mg *RecoveryReplicatedVm) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this RecoveryReplicatedVm.
func (mg *RecoveryReplicatedVm) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this RecoveryReplicatedVm.
func (mg *RecoveryReplicatedVm) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this RecoveryReplicatedVm.
func (mg *RecoveryReplicatedVm) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this RecoveryReplicatedVm.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *RecoveryReplicatedVm) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this RecoveryReplicatedVm.
func (mg *RecoveryReplicatedVm) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this RecoveryReplicationPolicy.
func (mg *RecoveryReplicationPolicy) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this RecoveryReplicationPolicy.
func (mg *RecoveryReplicationPolicy) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this RecoveryReplicationPolicy.
func (mg *RecoveryReplicationPolicy) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this RecoveryReplicationPolicy.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *RecoveryReplicationPolicy) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this RecoveryReplicationPolicy.
func (mg *RecoveryReplicationPolicy) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this RecoveryReplicationPolicy.
func (mg *RecoveryReplicationPolicy) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this RecoveryReplicationPolicy.
func (mg *RecoveryReplicationPolicy) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this RecoveryReplicationPolicy.
func (mg *RecoveryReplicationPolicy) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this RecoveryReplicationPolicy.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *RecoveryReplicationPolicy) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this RecoveryReplicationPolicy.
func (mg *RecoveryReplicationPolicy) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
