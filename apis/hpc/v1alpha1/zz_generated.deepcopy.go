// +build !ignore_autogenerated

/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessRuleObservation) DeepCopyInto(out *AccessRuleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessRuleObservation.
func (in *AccessRuleObservation) DeepCopy() *AccessRuleObservation {
	if in == nil {
		return nil
	}
	out := new(AccessRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessRuleParameters) DeepCopyInto(out *AccessRuleParameters) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = new(string)
		**out = **in
	}
	if in.AnonymousGID != nil {
		in, out := &in.AnonymousGID, &out.AnonymousGID
		*out = new(int64)
		**out = **in
	}
	if in.AnonymousUID != nil {
		in, out := &in.AnonymousUID, &out.AnonymousUID
		*out = new(int64)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.RootSquashEnabled != nil {
		in, out := &in.RootSquashEnabled, &out.RootSquashEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.SubmountAccessEnabled != nil {
		in, out := &in.SubmountAccessEnabled, &out.SubmountAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SuidEnabled != nil {
		in, out := &in.SuidEnabled, &out.SuidEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessRuleParameters.
func (in *AccessRuleParameters) DeepCopy() *AccessRuleParameters {
	if in == nil {
		return nil
	}
	out := new(AccessRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BindObservation) DeepCopyInto(out *BindObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BindObservation.
func (in *BindObservation) DeepCopy() *BindObservation {
	if in == nil {
		return nil
	}
	out := new(BindObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BindParameters) DeepCopyInto(out *BindParameters) {
	*out = *in
	if in.Dn != nil {
		in, out := &in.Dn, &out.Dn
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BindParameters.
func (in *BindParameters) DeepCopy() *BindParameters {
	if in == nil {
		return nil
	}
	out := new(BindParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cache) DeepCopyInto(out *Cache) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cache.
func (in *Cache) DeepCopy() *Cache {
	if in == nil {
		return nil
	}
	out := new(Cache)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cache) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheAccessPolicy) DeepCopyInto(out *CacheAccessPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheAccessPolicy.
func (in *CacheAccessPolicy) DeepCopy() *CacheAccessPolicy {
	if in == nil {
		return nil
	}
	out := new(CacheAccessPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheAccessPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheAccessPolicyAccessRuleObservation) DeepCopyInto(out *CacheAccessPolicyAccessRuleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheAccessPolicyAccessRuleObservation.
func (in *CacheAccessPolicyAccessRuleObservation) DeepCopy() *CacheAccessPolicyAccessRuleObservation {
	if in == nil {
		return nil
	}
	out := new(CacheAccessPolicyAccessRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheAccessPolicyAccessRuleParameters) DeepCopyInto(out *CacheAccessPolicyAccessRuleParameters) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = new(string)
		**out = **in
	}
	if in.AnonymousGID != nil {
		in, out := &in.AnonymousGID, &out.AnonymousGID
		*out = new(int64)
		**out = **in
	}
	if in.AnonymousUID != nil {
		in, out := &in.AnonymousUID, &out.AnonymousUID
		*out = new(int64)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.RootSquashEnabled != nil {
		in, out := &in.RootSquashEnabled, &out.RootSquashEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.SubmountAccessEnabled != nil {
		in, out := &in.SubmountAccessEnabled, &out.SubmountAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SuidEnabled != nil {
		in, out := &in.SuidEnabled, &out.SuidEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheAccessPolicyAccessRuleParameters.
func (in *CacheAccessPolicyAccessRuleParameters) DeepCopy() *CacheAccessPolicyAccessRuleParameters {
	if in == nil {
		return nil
	}
	out := new(CacheAccessPolicyAccessRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheAccessPolicyList) DeepCopyInto(out *CacheAccessPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CacheAccessPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheAccessPolicyList.
func (in *CacheAccessPolicyList) DeepCopy() *CacheAccessPolicyList {
	if in == nil {
		return nil
	}
	out := new(CacheAccessPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheAccessPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheAccessPolicyObservation) DeepCopyInto(out *CacheAccessPolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheAccessPolicyObservation.
func (in *CacheAccessPolicyObservation) DeepCopy() *CacheAccessPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(CacheAccessPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheAccessPolicyParameters) DeepCopyInto(out *CacheAccessPolicyParameters) {
	*out = *in
	if in.AccessRule != nil {
		in, out := &in.AccessRule, &out.AccessRule
		*out = make([]CacheAccessPolicyAccessRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HpcCacheID != nil {
		in, out := &in.HpcCacheID, &out.HpcCacheID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheAccessPolicyParameters.
func (in *CacheAccessPolicyParameters) DeepCopy() *CacheAccessPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(CacheAccessPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheAccessPolicySpec) DeepCopyInto(out *CacheAccessPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheAccessPolicySpec.
func (in *CacheAccessPolicySpec) DeepCopy() *CacheAccessPolicySpec {
	if in == nil {
		return nil
	}
	out := new(CacheAccessPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheAccessPolicyStatus) DeepCopyInto(out *CacheAccessPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheAccessPolicyStatus.
func (in *CacheAccessPolicyStatus) DeepCopy() *CacheAccessPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(CacheAccessPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheBlobNfsTarget) DeepCopyInto(out *CacheBlobNfsTarget) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheBlobNfsTarget.
func (in *CacheBlobNfsTarget) DeepCopy() *CacheBlobNfsTarget {
	if in == nil {
		return nil
	}
	out := new(CacheBlobNfsTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheBlobNfsTarget) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheBlobNfsTargetList) DeepCopyInto(out *CacheBlobNfsTargetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CacheBlobNfsTarget, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheBlobNfsTargetList.
func (in *CacheBlobNfsTargetList) DeepCopy() *CacheBlobNfsTargetList {
	if in == nil {
		return nil
	}
	out := new(CacheBlobNfsTargetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheBlobNfsTargetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheBlobNfsTargetObservation) DeepCopyInto(out *CacheBlobNfsTargetObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheBlobNfsTargetObservation.
func (in *CacheBlobNfsTargetObservation) DeepCopy() *CacheBlobNfsTargetObservation {
	if in == nil {
		return nil
	}
	out := new(CacheBlobNfsTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheBlobNfsTargetParameters) DeepCopyInto(out *CacheBlobNfsTargetParameters) {
	*out = *in
	if in.AccessPolicyName != nil {
		in, out := &in.AccessPolicyName, &out.AccessPolicyName
		*out = new(string)
		**out = **in
	}
	if in.CacheName != nil {
		in, out := &in.CacheName, &out.CacheName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamespacePath != nil {
		in, out := &in.NamespacePath, &out.NamespacePath
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.StorageContainerID != nil {
		in, out := &in.StorageContainerID, &out.StorageContainerID
		*out = new(string)
		**out = **in
	}
	if in.UsageModel != nil {
		in, out := &in.UsageModel, &out.UsageModel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheBlobNfsTargetParameters.
func (in *CacheBlobNfsTargetParameters) DeepCopy() *CacheBlobNfsTargetParameters {
	if in == nil {
		return nil
	}
	out := new(CacheBlobNfsTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheBlobNfsTargetSpec) DeepCopyInto(out *CacheBlobNfsTargetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheBlobNfsTargetSpec.
func (in *CacheBlobNfsTargetSpec) DeepCopy() *CacheBlobNfsTargetSpec {
	if in == nil {
		return nil
	}
	out := new(CacheBlobNfsTargetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheBlobNfsTargetStatus) DeepCopyInto(out *CacheBlobNfsTargetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheBlobNfsTargetStatus.
func (in *CacheBlobNfsTargetStatus) DeepCopy() *CacheBlobNfsTargetStatus {
	if in == nil {
		return nil
	}
	out := new(CacheBlobNfsTargetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheBlobTarget) DeepCopyInto(out *CacheBlobTarget) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheBlobTarget.
func (in *CacheBlobTarget) DeepCopy() *CacheBlobTarget {
	if in == nil {
		return nil
	}
	out := new(CacheBlobTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheBlobTarget) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheBlobTargetList) DeepCopyInto(out *CacheBlobTargetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CacheBlobTarget, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheBlobTargetList.
func (in *CacheBlobTargetList) DeepCopy() *CacheBlobTargetList {
	if in == nil {
		return nil
	}
	out := new(CacheBlobTargetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheBlobTargetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheBlobTargetObservation) DeepCopyInto(out *CacheBlobTargetObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheBlobTargetObservation.
func (in *CacheBlobTargetObservation) DeepCopy() *CacheBlobTargetObservation {
	if in == nil {
		return nil
	}
	out := new(CacheBlobTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheBlobTargetParameters) DeepCopyInto(out *CacheBlobTargetParameters) {
	*out = *in
	if in.AccessPolicyName != nil {
		in, out := &in.AccessPolicyName, &out.AccessPolicyName
		*out = new(string)
		**out = **in
	}
	if in.CacheName != nil {
		in, out := &in.CacheName, &out.CacheName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamespacePath != nil {
		in, out := &in.NamespacePath, &out.NamespacePath
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.StorageContainerID != nil {
		in, out := &in.StorageContainerID, &out.StorageContainerID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheBlobTargetParameters.
func (in *CacheBlobTargetParameters) DeepCopy() *CacheBlobTargetParameters {
	if in == nil {
		return nil
	}
	out := new(CacheBlobTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheBlobTargetSpec) DeepCopyInto(out *CacheBlobTargetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheBlobTargetSpec.
func (in *CacheBlobTargetSpec) DeepCopy() *CacheBlobTargetSpec {
	if in == nil {
		return nil
	}
	out := new(CacheBlobTargetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheBlobTargetStatus) DeepCopyInto(out *CacheBlobTargetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheBlobTargetStatus.
func (in *CacheBlobTargetStatus) DeepCopy() *CacheBlobTargetStatus {
	if in == nil {
		return nil
	}
	out := new(CacheBlobTargetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheList) DeepCopyInto(out *CacheList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cache, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheList.
func (in *CacheList) DeepCopy() *CacheList {
	if in == nil {
		return nil
	}
	out := new(CacheList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheNfsTarget) DeepCopyInto(out *CacheNfsTarget) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheNfsTarget.
func (in *CacheNfsTarget) DeepCopy() *CacheNfsTarget {
	if in == nil {
		return nil
	}
	out := new(CacheNfsTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheNfsTarget) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheNfsTargetList) DeepCopyInto(out *CacheNfsTargetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CacheNfsTarget, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheNfsTargetList.
func (in *CacheNfsTargetList) DeepCopy() *CacheNfsTargetList {
	if in == nil {
		return nil
	}
	out := new(CacheNfsTargetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheNfsTargetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheNfsTargetObservation) DeepCopyInto(out *CacheNfsTargetObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheNfsTargetObservation.
func (in *CacheNfsTargetObservation) DeepCopy() *CacheNfsTargetObservation {
	if in == nil {
		return nil
	}
	out := new(CacheNfsTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheNfsTargetParameters) DeepCopyInto(out *CacheNfsTargetParameters) {
	*out = *in
	if in.CacheName != nil {
		in, out := &in.CacheName, &out.CacheName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamespaceJunction != nil {
		in, out := &in.NamespaceJunction, &out.NamespaceJunction
		*out = make([]NamespaceJunctionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.TargetHostName != nil {
		in, out := &in.TargetHostName, &out.TargetHostName
		*out = new(string)
		**out = **in
	}
	if in.UsageModel != nil {
		in, out := &in.UsageModel, &out.UsageModel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheNfsTargetParameters.
func (in *CacheNfsTargetParameters) DeepCopy() *CacheNfsTargetParameters {
	if in == nil {
		return nil
	}
	out := new(CacheNfsTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheNfsTargetSpec) DeepCopyInto(out *CacheNfsTargetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheNfsTargetSpec.
func (in *CacheNfsTargetSpec) DeepCopy() *CacheNfsTargetSpec {
	if in == nil {
		return nil
	}
	out := new(CacheNfsTargetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheNfsTargetStatus) DeepCopyInto(out *CacheNfsTargetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheNfsTargetStatus.
func (in *CacheNfsTargetStatus) DeepCopy() *CacheNfsTargetStatus {
	if in == nil {
		return nil
	}
	out := new(CacheNfsTargetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheObservation) DeepCopyInto(out *CacheObservation) {
	*out = *in
	if in.MountAddresses != nil {
		in, out := &in.MountAddresses, &out.MountAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheObservation.
func (in *CacheObservation) DeepCopy() *CacheObservation {
	if in == nil {
		return nil
	}
	out := new(CacheObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheParameters) DeepCopyInto(out *CacheParameters) {
	*out = *in
	if in.CacheSizeInGb != nil {
		in, out := &in.CacheSizeInGb, &out.CacheSizeInGb
		*out = new(int64)
		**out = **in
	}
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = make([]DNSParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultAccessPolicy != nil {
		in, out := &in.DefaultAccessPolicy, &out.DefaultAccessPolicy
		*out = make([]DefaultAccessPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DirectoryActiveDirectory != nil {
		in, out := &in.DirectoryActiveDirectory, &out.DirectoryActiveDirectory
		*out = make([]DirectoryActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DirectoryFlatFile != nil {
		in, out := &in.DirectoryFlatFile, &out.DirectoryFlatFile
		*out = make([]DirectoryFlatFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DirectoryLdap != nil {
		in, out := &in.DirectoryLdap, &out.DirectoryLdap
		*out = make([]DirectoryLdapParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NtpServer != nil {
		in, out := &in.NtpServer, &out.NtpServer
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.RootSquashEnabled != nil {
		in, out := &in.RootSquashEnabled, &out.RootSquashEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheParameters.
func (in *CacheParameters) DeepCopy() *CacheParameters {
	if in == nil {
		return nil
	}
	out := new(CacheParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheSpec) DeepCopyInto(out *CacheSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheSpec.
func (in *CacheSpec) DeepCopy() *CacheSpec {
	if in == nil {
		return nil
	}
	out := new(CacheSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheStatus) DeepCopyInto(out *CacheStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheStatus.
func (in *CacheStatus) DeepCopy() *CacheStatus {
	if in == nil {
		return nil
	}
	out := new(CacheStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSObservation) DeepCopyInto(out *DNSObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSObservation.
func (in *DNSObservation) DeepCopy() *DNSObservation {
	if in == nil {
		return nil
	}
	out := new(DNSObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSParameters) DeepCopyInto(out *DNSParameters) {
	*out = *in
	if in.SearchDomain != nil {
		in, out := &in.SearchDomain, &out.SearchDomain
		*out = new(string)
		**out = **in
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSParameters.
func (in *DNSParameters) DeepCopy() *DNSParameters {
	if in == nil {
		return nil
	}
	out := new(DNSParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultAccessPolicyObservation) DeepCopyInto(out *DefaultAccessPolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultAccessPolicyObservation.
func (in *DefaultAccessPolicyObservation) DeepCopy() *DefaultAccessPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultAccessPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultAccessPolicyParameters) DeepCopyInto(out *DefaultAccessPolicyParameters) {
	*out = *in
	if in.AccessRule != nil {
		in, out := &in.AccessRule, &out.AccessRule
		*out = make([]AccessRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultAccessPolicyParameters.
func (in *DefaultAccessPolicyParameters) DeepCopy() *DefaultAccessPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultAccessPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryActiveDirectoryObservation) DeepCopyInto(out *DirectoryActiveDirectoryObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryActiveDirectoryObservation.
func (in *DirectoryActiveDirectoryObservation) DeepCopy() *DirectoryActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(DirectoryActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryActiveDirectoryParameters) DeepCopyInto(out *DirectoryActiveDirectoryParameters) {
	*out = *in
	if in.CacheNetbiosName != nil {
		in, out := &in.CacheNetbiosName, &out.CacheNetbiosName
		*out = new(string)
		**out = **in
	}
	if in.DNSPrimaryIP != nil {
		in, out := &in.DNSPrimaryIP, &out.DNSPrimaryIP
		*out = new(string)
		**out = **in
	}
	if in.DNSSecondaryIP != nil {
		in, out := &in.DNSSecondaryIP, &out.DNSSecondaryIP
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainNetbiosName != nil {
		in, out := &in.DomainNetbiosName, &out.DomainNetbiosName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryActiveDirectoryParameters.
func (in *DirectoryActiveDirectoryParameters) DeepCopy() *DirectoryActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(DirectoryActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryFlatFileObservation) DeepCopyInto(out *DirectoryFlatFileObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryFlatFileObservation.
func (in *DirectoryFlatFileObservation) DeepCopy() *DirectoryFlatFileObservation {
	if in == nil {
		return nil
	}
	out := new(DirectoryFlatFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryFlatFileParameters) DeepCopyInto(out *DirectoryFlatFileParameters) {
	*out = *in
	if in.GroupFileURI != nil {
		in, out := &in.GroupFileURI, &out.GroupFileURI
		*out = new(string)
		**out = **in
	}
	if in.PasswordFileURI != nil {
		in, out := &in.PasswordFileURI, &out.PasswordFileURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryFlatFileParameters.
func (in *DirectoryFlatFileParameters) DeepCopy() *DirectoryFlatFileParameters {
	if in == nil {
		return nil
	}
	out := new(DirectoryFlatFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryLdapObservation) DeepCopyInto(out *DirectoryLdapObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryLdapObservation.
func (in *DirectoryLdapObservation) DeepCopy() *DirectoryLdapObservation {
	if in == nil {
		return nil
	}
	out := new(DirectoryLdapObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryLdapParameters) DeepCopyInto(out *DirectoryLdapParameters) {
	*out = *in
	if in.BaseDn != nil {
		in, out := &in.BaseDn, &out.BaseDn
		*out = new(string)
		**out = **in
	}
	if in.Bind != nil {
		in, out := &in.Bind, &out.Bind
		*out = make([]BindParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CertificateValidationURI != nil {
		in, out := &in.CertificateValidationURI, &out.CertificateValidationURI
		*out = new(string)
		**out = **in
	}
	if in.DownloadCertificateAutomatically != nil {
		in, out := &in.DownloadCertificateAutomatically, &out.DownloadCertificateAutomatically
		*out = new(bool)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryLdapParameters.
func (in *DirectoryLdapParameters) DeepCopy() *DirectoryLdapParameters {
	if in == nil {
		return nil
	}
	out := new(DirectoryLdapParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceJunctionObservation) DeepCopyInto(out *NamespaceJunctionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceJunctionObservation.
func (in *NamespaceJunctionObservation) DeepCopy() *NamespaceJunctionObservation {
	if in == nil {
		return nil
	}
	out := new(NamespaceJunctionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceJunctionParameters) DeepCopyInto(out *NamespaceJunctionParameters) {
	*out = *in
	if in.AccessPolicyName != nil {
		in, out := &in.AccessPolicyName, &out.AccessPolicyName
		*out = new(string)
		**out = **in
	}
	if in.NamespacePath != nil {
		in, out := &in.NamespacePath, &out.NamespacePath
		*out = new(string)
		**out = **in
	}
	if in.NfsExport != nil {
		in, out := &in.NfsExport, &out.NfsExport
		*out = new(string)
		**out = **in
	}
	if in.TargetPath != nil {
		in, out := &in.TargetPath, &out.TargetPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceJunctionParameters.
func (in *NamespaceJunctionParameters) DeepCopy() *NamespaceJunctionParameters {
	if in == nil {
		return nil
	}
	out := new(NamespaceJunctionParameters)
	in.DeepCopyInto(out)
	return out
}
