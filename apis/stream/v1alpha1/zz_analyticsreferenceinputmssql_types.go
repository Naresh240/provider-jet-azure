/*
Copyright 2022 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AnalyticsReferenceInputMSSQLObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type AnalyticsReferenceInputMSSQLParameters struct {

	// +kubebuilder:validation:Required
	Database *string `json:"database" tf:"database,omitempty"`

	// +kubebuilder:validation:Optional
	DeltaSnapshotQuery *string `json:"deltaSnapshotQuery,omitempty" tf:"delta_snapshot_query,omitempty"`

	// +kubebuilder:validation:Required
	FullSnapshotQuery *string `json:"fullSnapshotQuery" tf:"full_snapshot_query,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// +kubebuilder:validation:Optional
	RefreshIntervalDuration *string `json:"refreshIntervalDuration,omitempty" tf:"refresh_interval_duration,omitempty"`

	// +kubebuilder:validation:Required
	RefreshType *string `json:"refreshType" tf:"refresh_type,omitempty"`

	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-jet-azure/apis/azure/v1alpha2.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// +kubebuilder:validation:Required
	Server *string `json:"server" tf:"server,omitempty"`

	// +kubebuilder:validation:Required
	StreamAnalyticsJobName *string `json:"streamAnalyticsJobName" tf:"stream_analytics_job_name,omitempty"`

	// +kubebuilder:validation:Required
	Username *string `json:"username" tf:"username,omitempty"`
}

// AnalyticsReferenceInputMSSQLSpec defines the desired state of AnalyticsReferenceInputMSSQL
type AnalyticsReferenceInputMSSQLSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AnalyticsReferenceInputMSSQLParameters `json:"forProvider"`
}

// AnalyticsReferenceInputMSSQLStatus defines the observed state of AnalyticsReferenceInputMSSQL.
type AnalyticsReferenceInputMSSQLStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AnalyticsReferenceInputMSSQLObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AnalyticsReferenceInputMSSQL is the Schema for the AnalyticsReferenceInputMSSQLs API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type AnalyticsReferenceInputMSSQL struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AnalyticsReferenceInputMSSQLSpec   `json:"spec"`
	Status            AnalyticsReferenceInputMSSQLStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AnalyticsReferenceInputMSSQLList contains a list of AnalyticsReferenceInputMSSQLs
type AnalyticsReferenceInputMSSQLList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AnalyticsReferenceInputMSSQL `json:"items"`
}

// Repository type metadata.
var (
	AnalyticsReferenceInputMSSQL_Kind             = "AnalyticsReferenceInputMSSQL"
	AnalyticsReferenceInputMSSQL_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AnalyticsReferenceInputMSSQL_Kind}.String()
	AnalyticsReferenceInputMSSQL_KindAPIVersion   = AnalyticsReferenceInputMSSQL_Kind + "." + CRDGroupVersion.String()
	AnalyticsReferenceInputMSSQL_GroupVersionKind = CRDGroupVersion.WithKind(AnalyticsReferenceInputMSSQL_Kind)
)

func init() {
	SchemeBuilder.Register(&AnalyticsReferenceInputMSSQL{}, &AnalyticsReferenceInputMSSQLList{})
}
