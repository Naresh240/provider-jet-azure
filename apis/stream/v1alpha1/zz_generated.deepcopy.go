//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsOutputTable) DeepCopyInto(out *AnalyticsOutputTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsOutputTable.
func (in *AnalyticsOutputTable) DeepCopy() *AnalyticsOutputTable {
	if in == nil {
		return nil
	}
	out := new(AnalyticsOutputTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AnalyticsOutputTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsOutputTableList) DeepCopyInto(out *AnalyticsOutputTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AnalyticsOutputTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsOutputTableList.
func (in *AnalyticsOutputTableList) DeepCopy() *AnalyticsOutputTableList {
	if in == nil {
		return nil
	}
	out := new(AnalyticsOutputTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AnalyticsOutputTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsOutputTableObservation) DeepCopyInto(out *AnalyticsOutputTableObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsOutputTableObservation.
func (in *AnalyticsOutputTableObservation) DeepCopy() *AnalyticsOutputTableObservation {
	if in == nil {
		return nil
	}
	out := new(AnalyticsOutputTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsOutputTableParameters) DeepCopyInto(out *AnalyticsOutputTableParameters) {
	*out = *in
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PartitionKey != nil {
		in, out := &in.PartitionKey, &out.PartitionKey
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RowKey != nil {
		in, out := &in.RowKey, &out.RowKey
		*out = new(string)
		**out = **in
	}
	out.StorageAccountKeySecretRef = in.StorageAccountKeySecretRef
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.StreamAnalyticsJobName != nil {
		in, out := &in.StreamAnalyticsJobName, &out.StreamAnalyticsJobName
		*out = new(string)
		**out = **in
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsOutputTableParameters.
func (in *AnalyticsOutputTableParameters) DeepCopy() *AnalyticsOutputTableParameters {
	if in == nil {
		return nil
	}
	out := new(AnalyticsOutputTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsOutputTableSpec) DeepCopyInto(out *AnalyticsOutputTableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsOutputTableSpec.
func (in *AnalyticsOutputTableSpec) DeepCopy() *AnalyticsOutputTableSpec {
	if in == nil {
		return nil
	}
	out := new(AnalyticsOutputTableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsOutputTableStatus) DeepCopyInto(out *AnalyticsOutputTableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsOutputTableStatus.
func (in *AnalyticsOutputTableStatus) DeepCopy() *AnalyticsOutputTableStatus {
	if in == nil {
		return nil
	}
	out := new(AnalyticsOutputTableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsReferenceInputMSSQL) DeepCopyInto(out *AnalyticsReferenceInputMSSQL) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsReferenceInputMSSQL.
func (in *AnalyticsReferenceInputMSSQL) DeepCopy() *AnalyticsReferenceInputMSSQL {
	if in == nil {
		return nil
	}
	out := new(AnalyticsReferenceInputMSSQL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AnalyticsReferenceInputMSSQL) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsReferenceInputMSSQLList) DeepCopyInto(out *AnalyticsReferenceInputMSSQLList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AnalyticsReferenceInputMSSQL, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsReferenceInputMSSQLList.
func (in *AnalyticsReferenceInputMSSQLList) DeepCopy() *AnalyticsReferenceInputMSSQLList {
	if in == nil {
		return nil
	}
	out := new(AnalyticsReferenceInputMSSQLList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AnalyticsReferenceInputMSSQLList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsReferenceInputMSSQLObservation) DeepCopyInto(out *AnalyticsReferenceInputMSSQLObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsReferenceInputMSSQLObservation.
func (in *AnalyticsReferenceInputMSSQLObservation) DeepCopy() *AnalyticsReferenceInputMSSQLObservation {
	if in == nil {
		return nil
	}
	out := new(AnalyticsReferenceInputMSSQLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsReferenceInputMSSQLParameters) DeepCopyInto(out *AnalyticsReferenceInputMSSQLParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DeltaSnapshotQuery != nil {
		in, out := &in.DeltaSnapshotQuery, &out.DeltaSnapshotQuery
		*out = new(string)
		**out = **in
	}
	if in.FullSnapshotQuery != nil {
		in, out := &in.FullSnapshotQuery, &out.FullSnapshotQuery
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.RefreshIntervalDuration != nil {
		in, out := &in.RefreshIntervalDuration, &out.RefreshIntervalDuration
		*out = new(string)
		**out = **in
	}
	if in.RefreshType != nil {
		in, out := &in.RefreshType, &out.RefreshType
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.StreamAnalyticsJobName != nil {
		in, out := &in.StreamAnalyticsJobName, &out.StreamAnalyticsJobName
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsReferenceInputMSSQLParameters.
func (in *AnalyticsReferenceInputMSSQLParameters) DeepCopy() *AnalyticsReferenceInputMSSQLParameters {
	if in == nil {
		return nil
	}
	out := new(AnalyticsReferenceInputMSSQLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsReferenceInputMSSQLSpec) DeepCopyInto(out *AnalyticsReferenceInputMSSQLSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsReferenceInputMSSQLSpec.
func (in *AnalyticsReferenceInputMSSQLSpec) DeepCopy() *AnalyticsReferenceInputMSSQLSpec {
	if in == nil {
		return nil
	}
	out := new(AnalyticsReferenceInputMSSQLSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsReferenceInputMSSQLStatus) DeepCopyInto(out *AnalyticsReferenceInputMSSQLStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsReferenceInputMSSQLStatus.
func (in *AnalyticsReferenceInputMSSQLStatus) DeepCopy() *AnalyticsReferenceInputMSSQLStatus {
	if in == nil {
		return nil
	}
	out := new(AnalyticsReferenceInputMSSQLStatus)
	in.DeepCopyInto(out)
	return out
}
