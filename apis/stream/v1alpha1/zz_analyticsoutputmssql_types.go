/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AnalyticsOutputMssqlObservation struct {
}

type AnalyticsOutputMssqlParameters struct {

	// +kubebuilder:validation:Required
	Database *string `json:"database" tf:"database,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// +kubebuilder:validation:Required
	ResourceGroupName *string `json:"resourceGroupName" tf:"resource_group_name,omitempty"`

	// +kubebuilder:validation:Required
	Server *string `json:"server" tf:"server,omitempty"`

	// +kubebuilder:validation:Required
	StreamAnalyticsJobName *string `json:"streamAnalyticsJobName" tf:"stream_analytics_job_name,omitempty"`

	// +kubebuilder:validation:Required
	Table *string `json:"table" tf:"table,omitempty"`

	// +kubebuilder:validation:Required
	User *string `json:"user" tf:"user,omitempty"`
}

// AnalyticsOutputMssqlSpec defines the desired state of AnalyticsOutputMssql
type AnalyticsOutputMssqlSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AnalyticsOutputMssqlParameters `json:"forProvider"`
}

// AnalyticsOutputMssqlStatus defines the observed state of AnalyticsOutputMssql.
type AnalyticsOutputMssqlStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AnalyticsOutputMssqlObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AnalyticsOutputMssql is the Schema for the AnalyticsOutputMssqls API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type AnalyticsOutputMssql struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AnalyticsOutputMssqlSpec   `json:"spec"`
	Status            AnalyticsOutputMssqlStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AnalyticsOutputMssqlList contains a list of AnalyticsOutputMssqls
type AnalyticsOutputMssqlList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AnalyticsOutputMssql `json:"items"`
}

// Repository type metadata.
var (
	AnalyticsOutputMssql_Kind             = "AnalyticsOutputMssql"
	AnalyticsOutputMssql_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AnalyticsOutputMssql_Kind}.String()
	AnalyticsOutputMssql_KindAPIVersion   = AnalyticsOutputMssql_Kind + "." + CRDGroupVersion.String()
	AnalyticsOutputMssql_GroupVersionKind = CRDGroupVersion.WithKind(AnalyticsOutputMssql_Kind)
)

func init() {
	SchemeBuilder.Register(&AnalyticsOutputMssql{}, &AnalyticsOutputMssqlList{})
}
