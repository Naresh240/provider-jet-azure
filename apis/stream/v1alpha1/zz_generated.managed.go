/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this AnalyticsFunctionJavascriptUdf.
func (mg *AnalyticsFunctionJavascriptUdf) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AnalyticsFunctionJavascriptUdf.
func (mg *AnalyticsFunctionJavascriptUdf) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AnalyticsFunctionJavascriptUdf.
func (mg *AnalyticsFunctionJavascriptUdf) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AnalyticsFunctionJavascriptUdf.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AnalyticsFunctionJavascriptUdf) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AnalyticsFunctionJavascriptUdf.
func (mg *AnalyticsFunctionJavascriptUdf) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AnalyticsFunctionJavascriptUdf.
func (mg *AnalyticsFunctionJavascriptUdf) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AnalyticsFunctionJavascriptUdf.
func (mg *AnalyticsFunctionJavascriptUdf) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AnalyticsFunctionJavascriptUdf.
func (mg *AnalyticsFunctionJavascriptUdf) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AnalyticsFunctionJavascriptUdf.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AnalyticsFunctionJavascriptUdf) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AnalyticsFunctionJavascriptUdf.
func (mg *AnalyticsFunctionJavascriptUdf) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AnalyticsJob.
func (mg *AnalyticsJob) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AnalyticsJob.
func (mg *AnalyticsJob) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AnalyticsJob.
func (mg *AnalyticsJob) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AnalyticsJob.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AnalyticsJob) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AnalyticsJob.
func (mg *AnalyticsJob) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AnalyticsJob.
func (mg *AnalyticsJob) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AnalyticsJob.
func (mg *AnalyticsJob) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AnalyticsJob.
func (mg *AnalyticsJob) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AnalyticsJob.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AnalyticsJob) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AnalyticsJob.
func (mg *AnalyticsJob) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AnalyticsOutputBlob.
func (mg *AnalyticsOutputBlob) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AnalyticsOutputBlob.
func (mg *AnalyticsOutputBlob) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AnalyticsOutputBlob.
func (mg *AnalyticsOutputBlob) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AnalyticsOutputBlob.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AnalyticsOutputBlob) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AnalyticsOutputBlob.
func (mg *AnalyticsOutputBlob) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AnalyticsOutputBlob.
func (mg *AnalyticsOutputBlob) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AnalyticsOutputBlob.
func (mg *AnalyticsOutputBlob) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AnalyticsOutputBlob.
func (mg *AnalyticsOutputBlob) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AnalyticsOutputBlob.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AnalyticsOutputBlob) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AnalyticsOutputBlob.
func (mg *AnalyticsOutputBlob) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AnalyticsOutputEventhub.
func (mg *AnalyticsOutputEventhub) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AnalyticsOutputEventhub.
func (mg *AnalyticsOutputEventhub) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AnalyticsOutputEventhub.
func (mg *AnalyticsOutputEventhub) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AnalyticsOutputEventhub.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AnalyticsOutputEventhub) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AnalyticsOutputEventhub.
func (mg *AnalyticsOutputEventhub) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AnalyticsOutputEventhub.
func (mg *AnalyticsOutputEventhub) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AnalyticsOutputEventhub.
func (mg *AnalyticsOutputEventhub) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AnalyticsOutputEventhub.
func (mg *AnalyticsOutputEventhub) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AnalyticsOutputEventhub.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AnalyticsOutputEventhub) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AnalyticsOutputEventhub.
func (mg *AnalyticsOutputEventhub) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AnalyticsOutputMssql.
func (mg *AnalyticsOutputMssql) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AnalyticsOutputMssql.
func (mg *AnalyticsOutputMssql) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AnalyticsOutputMssql.
func (mg *AnalyticsOutputMssql) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AnalyticsOutputMssql.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AnalyticsOutputMssql) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AnalyticsOutputMssql.
func (mg *AnalyticsOutputMssql) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AnalyticsOutputMssql.
func (mg *AnalyticsOutputMssql) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AnalyticsOutputMssql.
func (mg *AnalyticsOutputMssql) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AnalyticsOutputMssql.
func (mg *AnalyticsOutputMssql) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AnalyticsOutputMssql.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AnalyticsOutputMssql) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AnalyticsOutputMssql.
func (mg *AnalyticsOutputMssql) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AnalyticsOutputServicebusQueue.
func (mg *AnalyticsOutputServicebusQueue) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AnalyticsOutputServicebusQueue.
func (mg *AnalyticsOutputServicebusQueue) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AnalyticsOutputServicebusQueue.
func (mg *AnalyticsOutputServicebusQueue) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AnalyticsOutputServicebusQueue.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AnalyticsOutputServicebusQueue) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AnalyticsOutputServicebusQueue.
func (mg *AnalyticsOutputServicebusQueue) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AnalyticsOutputServicebusQueue.
func (mg *AnalyticsOutputServicebusQueue) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AnalyticsOutputServicebusQueue.
func (mg *AnalyticsOutputServicebusQueue) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AnalyticsOutputServicebusQueue.
func (mg *AnalyticsOutputServicebusQueue) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AnalyticsOutputServicebusQueue.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AnalyticsOutputServicebusQueue) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AnalyticsOutputServicebusQueue.
func (mg *AnalyticsOutputServicebusQueue) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AnalyticsOutputServicebusTopic.
func (mg *AnalyticsOutputServicebusTopic) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AnalyticsOutputServicebusTopic.
func (mg *AnalyticsOutputServicebusTopic) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AnalyticsOutputServicebusTopic.
func (mg *AnalyticsOutputServicebusTopic) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AnalyticsOutputServicebusTopic.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AnalyticsOutputServicebusTopic) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AnalyticsOutputServicebusTopic.
func (mg *AnalyticsOutputServicebusTopic) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AnalyticsOutputServicebusTopic.
func (mg *AnalyticsOutputServicebusTopic) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AnalyticsOutputServicebusTopic.
func (mg *AnalyticsOutputServicebusTopic) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AnalyticsOutputServicebusTopic.
func (mg *AnalyticsOutputServicebusTopic) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AnalyticsOutputServicebusTopic.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AnalyticsOutputServicebusTopic) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AnalyticsOutputServicebusTopic.
func (mg *AnalyticsOutputServicebusTopic) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AnalyticsReferenceInputBlob.
func (mg *AnalyticsReferenceInputBlob) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AnalyticsReferenceInputBlob.
func (mg *AnalyticsReferenceInputBlob) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AnalyticsReferenceInputBlob.
func (mg *AnalyticsReferenceInputBlob) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AnalyticsReferenceInputBlob.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AnalyticsReferenceInputBlob) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AnalyticsReferenceInputBlob.
func (mg *AnalyticsReferenceInputBlob) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AnalyticsReferenceInputBlob.
func (mg *AnalyticsReferenceInputBlob) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AnalyticsReferenceInputBlob.
func (mg *AnalyticsReferenceInputBlob) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AnalyticsReferenceInputBlob.
func (mg *AnalyticsReferenceInputBlob) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AnalyticsReferenceInputBlob.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AnalyticsReferenceInputBlob) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AnalyticsReferenceInputBlob.
func (mg *AnalyticsReferenceInputBlob) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AnalyticsStreamInputBlob.
func (mg *AnalyticsStreamInputBlob) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AnalyticsStreamInputBlob.
func (mg *AnalyticsStreamInputBlob) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AnalyticsStreamInputBlob.
func (mg *AnalyticsStreamInputBlob) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AnalyticsStreamInputBlob.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AnalyticsStreamInputBlob) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AnalyticsStreamInputBlob.
func (mg *AnalyticsStreamInputBlob) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AnalyticsStreamInputBlob.
func (mg *AnalyticsStreamInputBlob) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AnalyticsStreamInputBlob.
func (mg *AnalyticsStreamInputBlob) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AnalyticsStreamInputBlob.
func (mg *AnalyticsStreamInputBlob) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AnalyticsStreamInputBlob.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AnalyticsStreamInputBlob) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AnalyticsStreamInputBlob.
func (mg *AnalyticsStreamInputBlob) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AnalyticsStreamInputEventhub.
func (mg *AnalyticsStreamInputEventhub) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AnalyticsStreamInputEventhub.
func (mg *AnalyticsStreamInputEventhub) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AnalyticsStreamInputEventhub.
func (mg *AnalyticsStreamInputEventhub) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AnalyticsStreamInputEventhub.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AnalyticsStreamInputEventhub) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AnalyticsStreamInputEventhub.
func (mg *AnalyticsStreamInputEventhub) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AnalyticsStreamInputEventhub.
func (mg *AnalyticsStreamInputEventhub) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AnalyticsStreamInputEventhub.
func (mg *AnalyticsStreamInputEventhub) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AnalyticsStreamInputEventhub.
func (mg *AnalyticsStreamInputEventhub) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AnalyticsStreamInputEventhub.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AnalyticsStreamInputEventhub) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AnalyticsStreamInputEventhub.
func (mg *AnalyticsStreamInputEventhub) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AnalyticsStreamInputIothub.
func (mg *AnalyticsStreamInputIothub) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AnalyticsStreamInputIothub.
func (mg *AnalyticsStreamInputIothub) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AnalyticsStreamInputIothub.
func (mg *AnalyticsStreamInputIothub) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AnalyticsStreamInputIothub.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AnalyticsStreamInputIothub) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AnalyticsStreamInputIothub.
func (mg *AnalyticsStreamInputIothub) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AnalyticsStreamInputIothub.
func (mg *AnalyticsStreamInputIothub) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AnalyticsStreamInputIothub.
func (mg *AnalyticsStreamInputIothub) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AnalyticsStreamInputIothub.
func (mg *AnalyticsStreamInputIothub) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AnalyticsStreamInputIothub.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AnalyticsStreamInputIothub) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AnalyticsStreamInputIothub.
func (mg *AnalyticsStreamInputIothub) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
