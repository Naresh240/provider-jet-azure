/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AnalyticsJobObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	JobID *string `json:"jobId,omitempty" tf:"job_id,omitempty"`
}

type AnalyticsJobParameters struct {

	// +kubebuilder:validation:Optional
	CompatibilityLevel *string `json:"compatibilityLevel,omitempty" tf:"compatibility_level,omitempty"`

	// +kubebuilder:validation:Optional
	DataLocale *string `json:"dataLocale,omitempty" tf:"data_locale,omitempty"`

	// +kubebuilder:validation:Optional
	EventsLateArrivalMaxDelayInSeconds *int64 `json:"eventsLateArrivalMaxDelayInSeconds,omitempty" tf:"events_late_arrival_max_delay_in_seconds,omitempty"`

	// +kubebuilder:validation:Optional
	EventsOutOfOrderMaxDelayInSeconds *int64 `json:"eventsOutOfOrderMaxDelayInSeconds,omitempty" tf:"events_out_of_order_max_delay_in_seconds,omitempty"`

	// +kubebuilder:validation:Optional
	EventsOutOfOrderPolicy *string `json:"eventsOutOfOrderPolicy,omitempty" tf:"events_out_of_order_policy,omitempty"`

	// +kubebuilder:validation:Optional
	Identity []IdentityParameters `json:"identity,omitempty" tf:"identity,omitempty"`

	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	OutputErrorPolicy *string `json:"outputErrorPolicy,omitempty" tf:"output_error_policy,omitempty"`

	// +kubebuilder:validation:Required
	ResourceGroupName *string `json:"resourceGroupName" tf:"resource_group_name,omitempty"`

	// +kubebuilder:validation:Required
	StreamingUnits *int64 `json:"streamingUnits" tf:"streaming_units,omitempty"`

	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// +kubebuilder:validation:Required
	TransformationQuery *string `json:"transformationQuery" tf:"transformation_query,omitempty"`
}

type IdentityObservation struct {
	PrincipalID *string `json:"principalId,omitempty" tf:"principal_id,omitempty"`

	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`
}

type IdentityParameters struct {

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

// AnalyticsJobSpec defines the desired state of AnalyticsJob
type AnalyticsJobSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AnalyticsJobParameters `json:"forProvider"`
}

// AnalyticsJobStatus defines the observed state of AnalyticsJob.
type AnalyticsJobStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AnalyticsJobObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AnalyticsJob is the Schema for the AnalyticsJobs API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type AnalyticsJob struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AnalyticsJobSpec   `json:"spec"`
	Status            AnalyticsJobStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AnalyticsJobList contains a list of AnalyticsJobs
type AnalyticsJobList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AnalyticsJob `json:"items"`
}

// Repository type metadata.
var (
	AnalyticsJob_Kind             = "AnalyticsJob"
	AnalyticsJob_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AnalyticsJob_Kind}.String()
	AnalyticsJob_KindAPIVersion   = AnalyticsJob_Kind + "." + CRDGroupVersion.String()
	AnalyticsJob_GroupVersionKind = CRDGroupVersion.WithKind(AnalyticsJob_Kind)
)

func init() {
	SchemeBuilder.Register(&AnalyticsJob{}, &AnalyticsJobList{})
}
