/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AnalyticsOutputServicebusQueueObservation struct {
}

type AnalyticsOutputServicebusQueueParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	QueueName *string `json:"queueName" tf:"queue_name,omitempty"`

	// +kubebuilder:validation:Required
	ResourceGroupName *string `json:"resourceGroupName" tf:"resource_group_name,omitempty"`

	// +kubebuilder:validation:Required
	Serialization []AnalyticsOutputServicebusQueueSerializationParameters `json:"serialization" tf:"serialization,omitempty"`

	// +kubebuilder:validation:Required
	ServicebusNamespace *string `json:"servicebusNamespace" tf:"servicebus_namespace,omitempty"`

	// +kubebuilder:validation:Required
	SharedAccessPolicyKeySecretRef v1.SecretKeySelector `json:"sharedAccessPolicyKeySecretRef" tf:"-"`

	// +kubebuilder:validation:Required
	SharedAccessPolicyName *string `json:"sharedAccessPolicyName" tf:"shared_access_policy_name,omitempty"`

	// +kubebuilder:validation:Required
	StreamAnalyticsJobName *string `json:"streamAnalyticsJobName" tf:"stream_analytics_job_name,omitempty"`
}

type AnalyticsOutputServicebusQueueSerializationObservation struct {
}

type AnalyticsOutputServicebusQueueSerializationParameters struct {

	// +kubebuilder:validation:Optional
	Encoding *string `json:"encoding,omitempty" tf:"encoding,omitempty"`

	// +kubebuilder:validation:Optional
	FieldDelimiter *string `json:"fieldDelimiter,omitempty" tf:"field_delimiter,omitempty"`

	// +kubebuilder:validation:Optional
	Format *string `json:"format,omitempty" tf:"format,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

// AnalyticsOutputServicebusQueueSpec defines the desired state of AnalyticsOutputServicebusQueue
type AnalyticsOutputServicebusQueueSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AnalyticsOutputServicebusQueueParameters `json:"forProvider"`
}

// AnalyticsOutputServicebusQueueStatus defines the observed state of AnalyticsOutputServicebusQueue.
type AnalyticsOutputServicebusQueueStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AnalyticsOutputServicebusQueueObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AnalyticsOutputServicebusQueue is the Schema for the AnalyticsOutputServicebusQueues API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type AnalyticsOutputServicebusQueue struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AnalyticsOutputServicebusQueueSpec   `json:"spec"`
	Status            AnalyticsOutputServicebusQueueStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AnalyticsOutputServicebusQueueList contains a list of AnalyticsOutputServicebusQueues
type AnalyticsOutputServicebusQueueList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AnalyticsOutputServicebusQueue `json:"items"`
}

// Repository type metadata.
var (
	AnalyticsOutputServicebusQueue_Kind             = "AnalyticsOutputServicebusQueue"
	AnalyticsOutputServicebusQueue_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AnalyticsOutputServicebusQueue_Kind}.String()
	AnalyticsOutputServicebusQueue_KindAPIVersion   = AnalyticsOutputServicebusQueue_Kind + "." + CRDGroupVersion.String()
	AnalyticsOutputServicebusQueue_GroupVersionKind = CRDGroupVersion.WithKind(AnalyticsOutputServicebusQueue_Kind)
)

func init() {
	SchemeBuilder.Register(&AnalyticsOutputServicebusQueue{}, &AnalyticsOutputServicebusQueueList{})
}
