// +build !ignore_autogenerated

/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DailyRecurrenceObservation) DeepCopyInto(out *DailyRecurrenceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DailyRecurrenceObservation.
func (in *DailyRecurrenceObservation) DeepCopy() *DailyRecurrenceObservation {
	if in == nil {
		return nil
	}
	out := new(DailyRecurrenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DailyRecurrenceParameters) DeepCopyInto(out *DailyRecurrenceParameters) {
	*out = *in
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DailyRecurrenceParameters.
func (in *DailyRecurrenceParameters) DeepCopy() *DailyRecurrenceParameters {
	if in == nil {
		return nil
	}
	out := new(DailyRecurrenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GalleryImageReferenceObservation) DeepCopyInto(out *GalleryImageReferenceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GalleryImageReferenceObservation.
func (in *GalleryImageReferenceObservation) DeepCopy() *GalleryImageReferenceObservation {
	if in == nil {
		return nil
	}
	out := new(GalleryImageReferenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GalleryImageReferenceParameters) DeepCopyInto(out *GalleryImageReferenceParameters) {
	*out = *in
	if in.Offer != nil {
		in, out := &in.Offer, &out.Offer
		*out = new(string)
		**out = **in
	}
	if in.Publisher != nil {
		in, out := &in.Publisher, &out.Publisher
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GalleryImageReferenceParameters.
func (in *GalleryImageReferenceParameters) DeepCopy() *GalleryImageReferenceParameters {
	if in == nil {
		return nil
	}
	out := new(GalleryImageReferenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HourlyRecurrenceObservation) DeepCopyInto(out *HourlyRecurrenceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HourlyRecurrenceObservation.
func (in *HourlyRecurrenceObservation) DeepCopy() *HourlyRecurrenceObservation {
	if in == nil {
		return nil
	}
	out := new(HourlyRecurrenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HourlyRecurrenceParameters) DeepCopyInto(out *HourlyRecurrenceParameters) {
	*out = *in
	if in.Minute != nil {
		in, out := &in.Minute, &out.Minute
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HourlyRecurrenceParameters.
func (in *HourlyRecurrenceParameters) DeepCopy() *HourlyRecurrenceParameters {
	if in == nil {
		return nil
	}
	out := new(HourlyRecurrenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InboundNatRuleObservation) DeepCopyInto(out *InboundNatRuleObservation) {
	*out = *in
	if in.FrontendPort != nil {
		in, out := &in.FrontendPort, &out.FrontendPort
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InboundNatRuleObservation.
func (in *InboundNatRuleObservation) DeepCopy() *InboundNatRuleObservation {
	if in == nil {
		return nil
	}
	out := new(InboundNatRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InboundNatRuleParameters) DeepCopyInto(out *InboundNatRuleParameters) {
	*out = *in
	if in.BackendPort != nil {
		in, out := &in.BackendPort, &out.BackendPort
		*out = new(int64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InboundNatRuleParameters.
func (in *InboundNatRuleParameters) DeepCopy() *InboundNatRuleParameters {
	if in == nil {
		return nil
	}
	out := new(InboundNatRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationSettingsObservation) DeepCopyInto(out *NotificationSettingsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationSettingsObservation.
func (in *NotificationSettingsObservation) DeepCopy() *NotificationSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationSettingsParameters) DeepCopyInto(out *NotificationSettingsParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.TimeInMinutes != nil {
		in, out := &in.TimeInMinutes, &out.TimeInMinutes
		*out = new(int64)
		**out = **in
	}
	if in.WebhookURL != nil {
		in, out := &in.WebhookURL, &out.WebhookURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationSettingsParameters.
func (in *NotificationSettingsParameters) DeepCopy() *NotificationSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetObservation) DeepCopyInto(out *SubnetObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetObservation.
func (in *SubnetObservation) DeepCopy() *SubnetObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetParameters) DeepCopyInto(out *SubnetParameters) {
	*out = *in
	if in.UseInVirtualMachineCreation != nil {
		in, out := &in.UseInVirtualMachineCreation, &out.UseInVirtualMachineCreation
		*out = new(string)
		**out = **in
	}
	if in.UsePublicIPAddress != nil {
		in, out := &in.UsePublicIPAddress, &out.UsePublicIPAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetParameters.
func (in *SubnetParameters) DeepCopy() *SubnetParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestGlobalVmShutdownSchedule) DeepCopyInto(out *TestGlobalVmShutdownSchedule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestGlobalVmShutdownSchedule.
func (in *TestGlobalVmShutdownSchedule) DeepCopy() *TestGlobalVmShutdownSchedule {
	if in == nil {
		return nil
	}
	out := new(TestGlobalVmShutdownSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TestGlobalVmShutdownSchedule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestGlobalVmShutdownScheduleList) DeepCopyInto(out *TestGlobalVmShutdownScheduleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TestGlobalVmShutdownSchedule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestGlobalVmShutdownScheduleList.
func (in *TestGlobalVmShutdownScheduleList) DeepCopy() *TestGlobalVmShutdownScheduleList {
	if in == nil {
		return nil
	}
	out := new(TestGlobalVmShutdownScheduleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TestGlobalVmShutdownScheduleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestGlobalVmShutdownScheduleObservation) DeepCopyInto(out *TestGlobalVmShutdownScheduleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestGlobalVmShutdownScheduleObservation.
func (in *TestGlobalVmShutdownScheduleObservation) DeepCopy() *TestGlobalVmShutdownScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(TestGlobalVmShutdownScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestGlobalVmShutdownScheduleParameters) DeepCopyInto(out *TestGlobalVmShutdownScheduleParameters) {
	*out = *in
	if in.DailyRecurrenceTime != nil {
		in, out := &in.DailyRecurrenceTime, &out.DailyRecurrenceTime
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]NotificationSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.VirtualMachineID != nil {
		in, out := &in.VirtualMachineID, &out.VirtualMachineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestGlobalVmShutdownScheduleParameters.
func (in *TestGlobalVmShutdownScheduleParameters) DeepCopy() *TestGlobalVmShutdownScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(TestGlobalVmShutdownScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestGlobalVmShutdownScheduleSpec) DeepCopyInto(out *TestGlobalVmShutdownScheduleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestGlobalVmShutdownScheduleSpec.
func (in *TestGlobalVmShutdownScheduleSpec) DeepCopy() *TestGlobalVmShutdownScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(TestGlobalVmShutdownScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestGlobalVmShutdownScheduleStatus) DeepCopyInto(out *TestGlobalVmShutdownScheduleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestGlobalVmShutdownScheduleStatus.
func (in *TestGlobalVmShutdownScheduleStatus) DeepCopy() *TestGlobalVmShutdownScheduleStatus {
	if in == nil {
		return nil
	}
	out := new(TestGlobalVmShutdownScheduleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestLab) DeepCopyInto(out *TestLab) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestLab.
func (in *TestLab) DeepCopy() *TestLab {
	if in == nil {
		return nil
	}
	out := new(TestLab)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TestLab) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestLabList) DeepCopyInto(out *TestLabList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TestLab, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestLabList.
func (in *TestLabList) DeepCopy() *TestLabList {
	if in == nil {
		return nil
	}
	out := new(TestLabList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TestLabList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestLabObservation) DeepCopyInto(out *TestLabObservation) {
	*out = *in
	if in.ArtifactsStorageAccountID != nil {
		in, out := &in.ArtifactsStorageAccountID, &out.ArtifactsStorageAccountID
		*out = new(string)
		**out = **in
	}
	if in.DefaultPremiumStorageAccountID != nil {
		in, out := &in.DefaultPremiumStorageAccountID, &out.DefaultPremiumStorageAccountID
		*out = new(string)
		**out = **in
	}
	if in.DefaultStorageAccountID != nil {
		in, out := &in.DefaultStorageAccountID, &out.DefaultStorageAccountID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultID != nil {
		in, out := &in.KeyVaultID, &out.KeyVaultID
		*out = new(string)
		**out = **in
	}
	if in.PremiumDataDiskStorageAccountID != nil {
		in, out := &in.PremiumDataDiskStorageAccountID, &out.PremiumDataDiskStorageAccountID
		*out = new(string)
		**out = **in
	}
	if in.UniqueIdentifier != nil {
		in, out := &in.UniqueIdentifier, &out.UniqueIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestLabObservation.
func (in *TestLabObservation) DeepCopy() *TestLabObservation {
	if in == nil {
		return nil
	}
	out := new(TestLabObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestLabParameters) DeepCopyInto(out *TestLabParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestLabParameters.
func (in *TestLabParameters) DeepCopy() *TestLabParameters {
	if in == nil {
		return nil
	}
	out := new(TestLabParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestLabSpec) DeepCopyInto(out *TestLabSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestLabSpec.
func (in *TestLabSpec) DeepCopy() *TestLabSpec {
	if in == nil {
		return nil
	}
	out := new(TestLabSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestLabStatus) DeepCopyInto(out *TestLabStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestLabStatus.
func (in *TestLabStatus) DeepCopy() *TestLabStatus {
	if in == nil {
		return nil
	}
	out := new(TestLabStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestLinuxVirtualMachine) DeepCopyInto(out *TestLinuxVirtualMachine) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestLinuxVirtualMachine.
func (in *TestLinuxVirtualMachine) DeepCopy() *TestLinuxVirtualMachine {
	if in == nil {
		return nil
	}
	out := new(TestLinuxVirtualMachine)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TestLinuxVirtualMachine) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestLinuxVirtualMachineList) DeepCopyInto(out *TestLinuxVirtualMachineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TestLinuxVirtualMachine, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestLinuxVirtualMachineList.
func (in *TestLinuxVirtualMachineList) DeepCopy() *TestLinuxVirtualMachineList {
	if in == nil {
		return nil
	}
	out := new(TestLinuxVirtualMachineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TestLinuxVirtualMachineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestLinuxVirtualMachineObservation) DeepCopyInto(out *TestLinuxVirtualMachineObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.UniqueIdentifier != nil {
		in, out := &in.UniqueIdentifier, &out.UniqueIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestLinuxVirtualMachineObservation.
func (in *TestLinuxVirtualMachineObservation) DeepCopy() *TestLinuxVirtualMachineObservation {
	if in == nil {
		return nil
	}
	out := new(TestLinuxVirtualMachineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestLinuxVirtualMachineParameters) DeepCopyInto(out *TestLinuxVirtualMachineParameters) {
	*out = *in
	if in.AllowClaim != nil {
		in, out := &in.AllowClaim, &out.AllowClaim
		*out = new(bool)
		**out = **in
	}
	if in.DisallowPublicIPAddress != nil {
		in, out := &in.DisallowPublicIPAddress, &out.DisallowPublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.GalleryImageReference != nil {
		in, out := &in.GalleryImageReference, &out.GalleryImageReference
		*out = make([]GalleryImageReferenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InboundNatRule != nil {
		in, out := &in.InboundNatRule, &out.InboundNatRule
		*out = make([]InboundNatRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LabName != nil {
		in, out := &in.LabName, &out.LabName
		*out = new(string)
		**out = **in
	}
	if in.LabSubnetName != nil {
		in, out := &in.LabSubnetName, &out.LabSubnetName
		*out = new(string)
		**out = **in
	}
	if in.LabVirtualNetworkID != nil {
		in, out := &in.LabVirtualNetworkID, &out.LabVirtualNetworkID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notes != nil {
		in, out := &in.Notes, &out.Notes
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestLinuxVirtualMachineParameters.
func (in *TestLinuxVirtualMachineParameters) DeepCopy() *TestLinuxVirtualMachineParameters {
	if in == nil {
		return nil
	}
	out := new(TestLinuxVirtualMachineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestLinuxVirtualMachineSpec) DeepCopyInto(out *TestLinuxVirtualMachineSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestLinuxVirtualMachineSpec.
func (in *TestLinuxVirtualMachineSpec) DeepCopy() *TestLinuxVirtualMachineSpec {
	if in == nil {
		return nil
	}
	out := new(TestLinuxVirtualMachineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestLinuxVirtualMachineStatus) DeepCopyInto(out *TestLinuxVirtualMachineStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestLinuxVirtualMachineStatus.
func (in *TestLinuxVirtualMachineStatus) DeepCopy() *TestLinuxVirtualMachineStatus {
	if in == nil {
		return nil
	}
	out := new(TestLinuxVirtualMachineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestPolicy) DeepCopyInto(out *TestPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestPolicy.
func (in *TestPolicy) DeepCopy() *TestPolicy {
	if in == nil {
		return nil
	}
	out := new(TestPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TestPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestPolicyList) DeepCopyInto(out *TestPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TestPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestPolicyList.
func (in *TestPolicyList) DeepCopy() *TestPolicyList {
	if in == nil {
		return nil
	}
	out := new(TestPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TestPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestPolicyObservation) DeepCopyInto(out *TestPolicyObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestPolicyObservation.
func (in *TestPolicyObservation) DeepCopy() *TestPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(TestPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestPolicyParameters) DeepCopyInto(out *TestPolicyParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EvaluatorType != nil {
		in, out := &in.EvaluatorType, &out.EvaluatorType
		*out = new(string)
		**out = **in
	}
	if in.FactData != nil {
		in, out := &in.FactData, &out.FactData
		*out = new(string)
		**out = **in
	}
	if in.LabName != nil {
		in, out := &in.LabName, &out.LabName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PolicySetName != nil {
		in, out := &in.PolicySetName, &out.PolicySetName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestPolicyParameters.
func (in *TestPolicyParameters) DeepCopy() *TestPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(TestPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestPolicySpec) DeepCopyInto(out *TestPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestPolicySpec.
func (in *TestPolicySpec) DeepCopy() *TestPolicySpec {
	if in == nil {
		return nil
	}
	out := new(TestPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestPolicyStatus) DeepCopyInto(out *TestPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestPolicyStatus.
func (in *TestPolicyStatus) DeepCopy() *TestPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(TestPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestSchedule) DeepCopyInto(out *TestSchedule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestSchedule.
func (in *TestSchedule) DeepCopy() *TestSchedule {
	if in == nil {
		return nil
	}
	out := new(TestSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TestSchedule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestScheduleList) DeepCopyInto(out *TestScheduleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TestSchedule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestScheduleList.
func (in *TestScheduleList) DeepCopy() *TestScheduleList {
	if in == nil {
		return nil
	}
	out := new(TestScheduleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TestScheduleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestScheduleNotificationSettingsObservation) DeepCopyInto(out *TestScheduleNotificationSettingsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestScheduleNotificationSettingsObservation.
func (in *TestScheduleNotificationSettingsObservation) DeepCopy() *TestScheduleNotificationSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(TestScheduleNotificationSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestScheduleNotificationSettingsParameters) DeepCopyInto(out *TestScheduleNotificationSettingsParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TimeInMinutes != nil {
		in, out := &in.TimeInMinutes, &out.TimeInMinutes
		*out = new(int64)
		**out = **in
	}
	if in.WebhookURL != nil {
		in, out := &in.WebhookURL, &out.WebhookURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestScheduleNotificationSettingsParameters.
func (in *TestScheduleNotificationSettingsParameters) DeepCopy() *TestScheduleNotificationSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(TestScheduleNotificationSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestScheduleObservation) DeepCopyInto(out *TestScheduleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestScheduleObservation.
func (in *TestScheduleObservation) DeepCopy() *TestScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(TestScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestScheduleParameters) DeepCopyInto(out *TestScheduleParameters) {
	*out = *in
	if in.DailyRecurrence != nil {
		in, out := &in.DailyRecurrence, &out.DailyRecurrence
		*out = make([]DailyRecurrenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HourlyRecurrence != nil {
		in, out := &in.HourlyRecurrence, &out.HourlyRecurrence
		*out = make([]HourlyRecurrenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LabName != nil {
		in, out := &in.LabName, &out.LabName
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]TestScheduleNotificationSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TaskType != nil {
		in, out := &in.TaskType, &out.TaskType
		*out = new(string)
		**out = **in
	}
	if in.TimeZoneID != nil {
		in, out := &in.TimeZoneID, &out.TimeZoneID
		*out = new(string)
		**out = **in
	}
	if in.WeeklyRecurrence != nil {
		in, out := &in.WeeklyRecurrence, &out.WeeklyRecurrence
		*out = make([]WeeklyRecurrenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestScheduleParameters.
func (in *TestScheduleParameters) DeepCopy() *TestScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(TestScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestScheduleSpec) DeepCopyInto(out *TestScheduleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestScheduleSpec.
func (in *TestScheduleSpec) DeepCopy() *TestScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(TestScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestScheduleStatus) DeepCopyInto(out *TestScheduleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestScheduleStatus.
func (in *TestScheduleStatus) DeepCopy() *TestScheduleStatus {
	if in == nil {
		return nil
	}
	out := new(TestScheduleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestVirtualNetwork) DeepCopyInto(out *TestVirtualNetwork) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestVirtualNetwork.
func (in *TestVirtualNetwork) DeepCopy() *TestVirtualNetwork {
	if in == nil {
		return nil
	}
	out := new(TestVirtualNetwork)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TestVirtualNetwork) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestVirtualNetworkList) DeepCopyInto(out *TestVirtualNetworkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TestVirtualNetwork, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestVirtualNetworkList.
func (in *TestVirtualNetworkList) DeepCopy() *TestVirtualNetworkList {
	if in == nil {
		return nil
	}
	out := new(TestVirtualNetworkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TestVirtualNetworkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestVirtualNetworkObservation) DeepCopyInto(out *TestVirtualNetworkObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.UniqueIdentifier != nil {
		in, out := &in.UniqueIdentifier, &out.UniqueIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestVirtualNetworkObservation.
func (in *TestVirtualNetworkObservation) DeepCopy() *TestVirtualNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(TestVirtualNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestVirtualNetworkParameters) DeepCopyInto(out *TestVirtualNetworkParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.LabName != nil {
		in, out := &in.LabName, &out.LabName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]SubnetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestVirtualNetworkParameters.
func (in *TestVirtualNetworkParameters) DeepCopy() *TestVirtualNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(TestVirtualNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestVirtualNetworkSpec) DeepCopyInto(out *TestVirtualNetworkSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestVirtualNetworkSpec.
func (in *TestVirtualNetworkSpec) DeepCopy() *TestVirtualNetworkSpec {
	if in == nil {
		return nil
	}
	out := new(TestVirtualNetworkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestVirtualNetworkStatus) DeepCopyInto(out *TestVirtualNetworkStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestVirtualNetworkStatus.
func (in *TestVirtualNetworkStatus) DeepCopy() *TestVirtualNetworkStatus {
	if in == nil {
		return nil
	}
	out := new(TestVirtualNetworkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestWindowsVirtualMachine) DeepCopyInto(out *TestWindowsVirtualMachine) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestWindowsVirtualMachine.
func (in *TestWindowsVirtualMachine) DeepCopy() *TestWindowsVirtualMachine {
	if in == nil {
		return nil
	}
	out := new(TestWindowsVirtualMachine)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TestWindowsVirtualMachine) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestWindowsVirtualMachineGalleryImageReferenceObservation) DeepCopyInto(out *TestWindowsVirtualMachineGalleryImageReferenceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestWindowsVirtualMachineGalleryImageReferenceObservation.
func (in *TestWindowsVirtualMachineGalleryImageReferenceObservation) DeepCopy() *TestWindowsVirtualMachineGalleryImageReferenceObservation {
	if in == nil {
		return nil
	}
	out := new(TestWindowsVirtualMachineGalleryImageReferenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestWindowsVirtualMachineGalleryImageReferenceParameters) DeepCopyInto(out *TestWindowsVirtualMachineGalleryImageReferenceParameters) {
	*out = *in
	if in.Offer != nil {
		in, out := &in.Offer, &out.Offer
		*out = new(string)
		**out = **in
	}
	if in.Publisher != nil {
		in, out := &in.Publisher, &out.Publisher
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestWindowsVirtualMachineGalleryImageReferenceParameters.
func (in *TestWindowsVirtualMachineGalleryImageReferenceParameters) DeepCopy() *TestWindowsVirtualMachineGalleryImageReferenceParameters {
	if in == nil {
		return nil
	}
	out := new(TestWindowsVirtualMachineGalleryImageReferenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestWindowsVirtualMachineInboundNatRuleObservation) DeepCopyInto(out *TestWindowsVirtualMachineInboundNatRuleObservation) {
	*out = *in
	if in.FrontendPort != nil {
		in, out := &in.FrontendPort, &out.FrontendPort
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestWindowsVirtualMachineInboundNatRuleObservation.
func (in *TestWindowsVirtualMachineInboundNatRuleObservation) DeepCopy() *TestWindowsVirtualMachineInboundNatRuleObservation {
	if in == nil {
		return nil
	}
	out := new(TestWindowsVirtualMachineInboundNatRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestWindowsVirtualMachineInboundNatRuleParameters) DeepCopyInto(out *TestWindowsVirtualMachineInboundNatRuleParameters) {
	*out = *in
	if in.BackendPort != nil {
		in, out := &in.BackendPort, &out.BackendPort
		*out = new(int64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestWindowsVirtualMachineInboundNatRuleParameters.
func (in *TestWindowsVirtualMachineInboundNatRuleParameters) DeepCopy() *TestWindowsVirtualMachineInboundNatRuleParameters {
	if in == nil {
		return nil
	}
	out := new(TestWindowsVirtualMachineInboundNatRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestWindowsVirtualMachineList) DeepCopyInto(out *TestWindowsVirtualMachineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TestWindowsVirtualMachine, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestWindowsVirtualMachineList.
func (in *TestWindowsVirtualMachineList) DeepCopy() *TestWindowsVirtualMachineList {
	if in == nil {
		return nil
	}
	out := new(TestWindowsVirtualMachineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TestWindowsVirtualMachineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestWindowsVirtualMachineObservation) DeepCopyInto(out *TestWindowsVirtualMachineObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.UniqueIdentifier != nil {
		in, out := &in.UniqueIdentifier, &out.UniqueIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestWindowsVirtualMachineObservation.
func (in *TestWindowsVirtualMachineObservation) DeepCopy() *TestWindowsVirtualMachineObservation {
	if in == nil {
		return nil
	}
	out := new(TestWindowsVirtualMachineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestWindowsVirtualMachineParameters) DeepCopyInto(out *TestWindowsVirtualMachineParameters) {
	*out = *in
	if in.AllowClaim != nil {
		in, out := &in.AllowClaim, &out.AllowClaim
		*out = new(bool)
		**out = **in
	}
	if in.DisallowPublicIPAddress != nil {
		in, out := &in.DisallowPublicIPAddress, &out.DisallowPublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.GalleryImageReference != nil {
		in, out := &in.GalleryImageReference, &out.GalleryImageReference
		*out = make([]TestWindowsVirtualMachineGalleryImageReferenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InboundNatRule != nil {
		in, out := &in.InboundNatRule, &out.InboundNatRule
		*out = make([]TestWindowsVirtualMachineInboundNatRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LabName != nil {
		in, out := &in.LabName, &out.LabName
		*out = new(string)
		**out = **in
	}
	if in.LabSubnetName != nil {
		in, out := &in.LabSubnetName, &out.LabSubnetName
		*out = new(string)
		**out = **in
	}
	if in.LabVirtualNetworkID != nil {
		in, out := &in.LabVirtualNetworkID, &out.LabVirtualNetworkID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notes != nil {
		in, out := &in.Notes, &out.Notes
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestWindowsVirtualMachineParameters.
func (in *TestWindowsVirtualMachineParameters) DeepCopy() *TestWindowsVirtualMachineParameters {
	if in == nil {
		return nil
	}
	out := new(TestWindowsVirtualMachineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestWindowsVirtualMachineSpec) DeepCopyInto(out *TestWindowsVirtualMachineSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestWindowsVirtualMachineSpec.
func (in *TestWindowsVirtualMachineSpec) DeepCopy() *TestWindowsVirtualMachineSpec {
	if in == nil {
		return nil
	}
	out := new(TestWindowsVirtualMachineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestWindowsVirtualMachineStatus) DeepCopyInto(out *TestWindowsVirtualMachineStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestWindowsVirtualMachineStatus.
func (in *TestWindowsVirtualMachineStatus) DeepCopy() *TestWindowsVirtualMachineStatus {
	if in == nil {
		return nil
	}
	out := new(TestWindowsVirtualMachineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyRecurrenceObservation) DeepCopyInto(out *WeeklyRecurrenceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyRecurrenceObservation.
func (in *WeeklyRecurrenceObservation) DeepCopy() *WeeklyRecurrenceObservation {
	if in == nil {
		return nil
	}
	out := new(WeeklyRecurrenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyRecurrenceParameters) DeepCopyInto(out *WeeklyRecurrenceParameters) {
	*out = *in
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
	if in.WeekDays != nil {
		in, out := &in.WeekDays, &out.WeekDays
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyRecurrenceParameters.
func (in *WeeklyRecurrenceParameters) DeepCopy() *WeeklyRecurrenceParameters {
	if in == nil {
		return nil
	}
	out := new(WeeklyRecurrenceParameters)
	in.DeepCopyInto(out)
	return out
}
