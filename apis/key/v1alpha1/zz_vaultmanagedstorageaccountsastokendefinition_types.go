/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type VaultManagedStorageAccountSasTokenDefinitionObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	SecretID *string `json:"secretId,omitempty" tf:"secret_id,omitempty"`
}

type VaultManagedStorageAccountSasTokenDefinitionParameters struct {

	// +kubebuilder:validation:Required
	ManagedStorageAccountID *string `json:"managedStorageAccountId" tf:"managed_storage_account_id,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	SasTemplateURI *string `json:"sasTemplateUri" tf:"sas_template_uri,omitempty"`

	// +kubebuilder:validation:Required
	SasType *string `json:"sasType" tf:"sas_type,omitempty"`

	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// +kubebuilder:validation:Required
	ValidityPeriod *string `json:"validityPeriod" tf:"validity_period,omitempty"`
}

// VaultManagedStorageAccountSasTokenDefinitionSpec defines the desired state of VaultManagedStorageAccountSasTokenDefinition
type VaultManagedStorageAccountSasTokenDefinitionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VaultManagedStorageAccountSasTokenDefinitionParameters `json:"forProvider"`
}

// VaultManagedStorageAccountSasTokenDefinitionStatus defines the observed state of VaultManagedStorageAccountSasTokenDefinition.
type VaultManagedStorageAccountSasTokenDefinitionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VaultManagedStorageAccountSasTokenDefinitionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// VaultManagedStorageAccountSasTokenDefinition is the Schema for the VaultManagedStorageAccountSasTokenDefinitions API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type VaultManagedStorageAccountSasTokenDefinition struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VaultManagedStorageAccountSasTokenDefinitionSpec   `json:"spec"`
	Status            VaultManagedStorageAccountSasTokenDefinitionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VaultManagedStorageAccountSasTokenDefinitionList contains a list of VaultManagedStorageAccountSasTokenDefinitions
type VaultManagedStorageAccountSasTokenDefinitionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VaultManagedStorageAccountSasTokenDefinition `json:"items"`
}

// Repository type metadata.
var (
	VaultManagedStorageAccountSasTokenDefinition_Kind             = "VaultManagedStorageAccountSasTokenDefinition"
	VaultManagedStorageAccountSasTokenDefinition_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VaultManagedStorageAccountSasTokenDefinition_Kind}.String()
	VaultManagedStorageAccountSasTokenDefinition_KindAPIVersion   = VaultManagedStorageAccountSasTokenDefinition_Kind + "." + CRDGroupVersion.String()
	VaultManagedStorageAccountSasTokenDefinition_GroupVersionKind = CRDGroupVersion.WithKind(VaultManagedStorageAccountSasTokenDefinition_Kind)
)

func init() {
	SchemeBuilder.Register(&VaultManagedStorageAccountSasTokenDefinition{}, &VaultManagedStorageAccountSasTokenDefinitionList{})
}
