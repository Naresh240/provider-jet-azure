/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this AlertRuleFusion.
func (mg *AlertRuleFusion) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AlertRuleFusion.
func (mg *AlertRuleFusion) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AlertRuleFusion.
func (mg *AlertRuleFusion) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AlertRuleFusion.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AlertRuleFusion) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AlertRuleFusion.
func (mg *AlertRuleFusion) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AlertRuleFusion.
func (mg *AlertRuleFusion) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AlertRuleFusion.
func (mg *AlertRuleFusion) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AlertRuleFusion.
func (mg *AlertRuleFusion) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AlertRuleFusion.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AlertRuleFusion) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AlertRuleFusion.
func (mg *AlertRuleFusion) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AlertRuleMachineLearningBehaviorAnalytics.
func (mg *AlertRuleMachineLearningBehaviorAnalytics) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AlertRuleMachineLearningBehaviorAnalytics.
func (mg *AlertRuleMachineLearningBehaviorAnalytics) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AlertRuleMachineLearningBehaviorAnalytics.
func (mg *AlertRuleMachineLearningBehaviorAnalytics) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AlertRuleMachineLearningBehaviorAnalytics.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AlertRuleMachineLearningBehaviorAnalytics) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AlertRuleMachineLearningBehaviorAnalytics.
func (mg *AlertRuleMachineLearningBehaviorAnalytics) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AlertRuleMachineLearningBehaviorAnalytics.
func (mg *AlertRuleMachineLearningBehaviorAnalytics) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AlertRuleMachineLearningBehaviorAnalytics.
func (mg *AlertRuleMachineLearningBehaviorAnalytics) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AlertRuleMachineLearningBehaviorAnalytics.
func (mg *AlertRuleMachineLearningBehaviorAnalytics) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AlertRuleMachineLearningBehaviorAnalytics.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AlertRuleMachineLearningBehaviorAnalytics) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AlertRuleMachineLearningBehaviorAnalytics.
func (mg *AlertRuleMachineLearningBehaviorAnalytics) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AlertRuleMsSecurityIncident.
func (mg *AlertRuleMsSecurityIncident) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AlertRuleMsSecurityIncident.
func (mg *AlertRuleMsSecurityIncident) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AlertRuleMsSecurityIncident.
func (mg *AlertRuleMsSecurityIncident) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AlertRuleMsSecurityIncident.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AlertRuleMsSecurityIncident) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AlertRuleMsSecurityIncident.
func (mg *AlertRuleMsSecurityIncident) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AlertRuleMsSecurityIncident.
func (mg *AlertRuleMsSecurityIncident) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AlertRuleMsSecurityIncident.
func (mg *AlertRuleMsSecurityIncident) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AlertRuleMsSecurityIncident.
func (mg *AlertRuleMsSecurityIncident) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AlertRuleMsSecurityIncident.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AlertRuleMsSecurityIncident) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AlertRuleMsSecurityIncident.
func (mg *AlertRuleMsSecurityIncident) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this AlertRuleScheduled.
func (mg *AlertRuleScheduled) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AlertRuleScheduled.
func (mg *AlertRuleScheduled) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AlertRuleScheduled.
func (mg *AlertRuleScheduled) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AlertRuleScheduled.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AlertRuleScheduled) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AlertRuleScheduled.
func (mg *AlertRuleScheduled) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AlertRuleScheduled.
func (mg *AlertRuleScheduled) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AlertRuleScheduled.
func (mg *AlertRuleScheduled) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AlertRuleScheduled.
func (mg *AlertRuleScheduled) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AlertRuleScheduled.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AlertRuleScheduled) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AlertRuleScheduled.
func (mg *AlertRuleScheduled) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this DataConnectorAwsCloudTrail.
func (mg *DataConnectorAwsCloudTrail) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DataConnectorAwsCloudTrail.
func (mg *DataConnectorAwsCloudTrail) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this DataConnectorAwsCloudTrail.
func (mg *DataConnectorAwsCloudTrail) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this DataConnectorAwsCloudTrail.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *DataConnectorAwsCloudTrail) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this DataConnectorAwsCloudTrail.
func (mg *DataConnectorAwsCloudTrail) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DataConnectorAwsCloudTrail.
func (mg *DataConnectorAwsCloudTrail) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DataConnectorAwsCloudTrail.
func (mg *DataConnectorAwsCloudTrail) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this DataConnectorAwsCloudTrail.
func (mg *DataConnectorAwsCloudTrail) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this DataConnectorAwsCloudTrail.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *DataConnectorAwsCloudTrail) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this DataConnectorAwsCloudTrail.
func (mg *DataConnectorAwsCloudTrail) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this DataConnectorAzureActiveDirectory.
func (mg *DataConnectorAzureActiveDirectory) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DataConnectorAzureActiveDirectory.
func (mg *DataConnectorAzureActiveDirectory) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this DataConnectorAzureActiveDirectory.
func (mg *DataConnectorAzureActiveDirectory) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this DataConnectorAzureActiveDirectory.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *DataConnectorAzureActiveDirectory) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this DataConnectorAzureActiveDirectory.
func (mg *DataConnectorAzureActiveDirectory) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DataConnectorAzureActiveDirectory.
func (mg *DataConnectorAzureActiveDirectory) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DataConnectorAzureActiveDirectory.
func (mg *DataConnectorAzureActiveDirectory) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this DataConnectorAzureActiveDirectory.
func (mg *DataConnectorAzureActiveDirectory) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this DataConnectorAzureActiveDirectory.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *DataConnectorAzureActiveDirectory) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this DataConnectorAzureActiveDirectory.
func (mg *DataConnectorAzureActiveDirectory) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this DataConnectorAzureAdvancedThreatProtection.
func (mg *DataConnectorAzureAdvancedThreatProtection) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DataConnectorAzureAdvancedThreatProtection.
func (mg *DataConnectorAzureAdvancedThreatProtection) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this DataConnectorAzureAdvancedThreatProtection.
func (mg *DataConnectorAzureAdvancedThreatProtection) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this DataConnectorAzureAdvancedThreatProtection.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *DataConnectorAzureAdvancedThreatProtection) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this DataConnectorAzureAdvancedThreatProtection.
func (mg *DataConnectorAzureAdvancedThreatProtection) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DataConnectorAzureAdvancedThreatProtection.
func (mg *DataConnectorAzureAdvancedThreatProtection) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DataConnectorAzureAdvancedThreatProtection.
func (mg *DataConnectorAzureAdvancedThreatProtection) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this DataConnectorAzureAdvancedThreatProtection.
func (mg *DataConnectorAzureAdvancedThreatProtection) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this DataConnectorAzureAdvancedThreatProtection.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *DataConnectorAzureAdvancedThreatProtection) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this DataConnectorAzureAdvancedThreatProtection.
func (mg *DataConnectorAzureAdvancedThreatProtection) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this DataConnectorAzureSecurityCenter.
func (mg *DataConnectorAzureSecurityCenter) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DataConnectorAzureSecurityCenter.
func (mg *DataConnectorAzureSecurityCenter) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this DataConnectorAzureSecurityCenter.
func (mg *DataConnectorAzureSecurityCenter) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this DataConnectorAzureSecurityCenter.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *DataConnectorAzureSecurityCenter) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this DataConnectorAzureSecurityCenter.
func (mg *DataConnectorAzureSecurityCenter) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DataConnectorAzureSecurityCenter.
func (mg *DataConnectorAzureSecurityCenter) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DataConnectorAzureSecurityCenter.
func (mg *DataConnectorAzureSecurityCenter) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this DataConnectorAzureSecurityCenter.
func (mg *DataConnectorAzureSecurityCenter) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this DataConnectorAzureSecurityCenter.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *DataConnectorAzureSecurityCenter) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this DataConnectorAzureSecurityCenter.
func (mg *DataConnectorAzureSecurityCenter) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this DataConnectorMicrosoftCloudAppSecurity.
func (mg *DataConnectorMicrosoftCloudAppSecurity) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DataConnectorMicrosoftCloudAppSecurity.
func (mg *DataConnectorMicrosoftCloudAppSecurity) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this DataConnectorMicrosoftCloudAppSecurity.
func (mg *DataConnectorMicrosoftCloudAppSecurity) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this DataConnectorMicrosoftCloudAppSecurity.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *DataConnectorMicrosoftCloudAppSecurity) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this DataConnectorMicrosoftCloudAppSecurity.
func (mg *DataConnectorMicrosoftCloudAppSecurity) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DataConnectorMicrosoftCloudAppSecurity.
func (mg *DataConnectorMicrosoftCloudAppSecurity) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DataConnectorMicrosoftCloudAppSecurity.
func (mg *DataConnectorMicrosoftCloudAppSecurity) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this DataConnectorMicrosoftCloudAppSecurity.
func (mg *DataConnectorMicrosoftCloudAppSecurity) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this DataConnectorMicrosoftCloudAppSecurity.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *DataConnectorMicrosoftCloudAppSecurity) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this DataConnectorMicrosoftCloudAppSecurity.
func (mg *DataConnectorMicrosoftCloudAppSecurity) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this DataConnectorOffice365.
func (mg *DataConnectorOffice365) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DataConnectorOffice365.
func (mg *DataConnectorOffice365) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this DataConnectorOffice365.
func (mg *DataConnectorOffice365) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this DataConnectorOffice365.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *DataConnectorOffice365) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this DataConnectorOffice365.
func (mg *DataConnectorOffice365) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DataConnectorOffice365.
func (mg *DataConnectorOffice365) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DataConnectorOffice365.
func (mg *DataConnectorOffice365) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this DataConnectorOffice365.
func (mg *DataConnectorOffice365) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this DataConnectorOffice365.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *DataConnectorOffice365) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this DataConnectorOffice365.
func (mg *DataConnectorOffice365) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this DataConnectorThreatIntelligence.
func (mg *DataConnectorThreatIntelligence) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DataConnectorThreatIntelligence.
func (mg *DataConnectorThreatIntelligence) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this DataConnectorThreatIntelligence.
func (mg *DataConnectorThreatIntelligence) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this DataConnectorThreatIntelligence.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *DataConnectorThreatIntelligence) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this DataConnectorThreatIntelligence.
func (mg *DataConnectorThreatIntelligence) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DataConnectorThreatIntelligence.
func (mg *DataConnectorThreatIntelligence) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DataConnectorThreatIntelligence.
func (mg *DataConnectorThreatIntelligence) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this DataConnectorThreatIntelligence.
func (mg *DataConnectorThreatIntelligence) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this DataConnectorThreatIntelligence.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *DataConnectorThreatIntelligence) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this DataConnectorThreatIntelligence.
func (mg *DataConnectorThreatIntelligence) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
