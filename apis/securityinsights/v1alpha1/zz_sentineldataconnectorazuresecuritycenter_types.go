/*
Copyright 2022 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SentinelDataConnectorAzureSecurityCenterObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type SentinelDataConnectorAzureSecurityCenterParameters struct {

	// +kubebuilder:validation:Required
	LogAnalyticsWorkspaceID *string `json:"logAnalyticsWorkspaceId" tf:"log_analytics_workspace_id,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	SubscriptionID *string `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`
}

// SentinelDataConnectorAzureSecurityCenterSpec defines the desired state of SentinelDataConnectorAzureSecurityCenter
type SentinelDataConnectorAzureSecurityCenterSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SentinelDataConnectorAzureSecurityCenterParameters `json:"forProvider"`
}

// SentinelDataConnectorAzureSecurityCenterStatus defines the observed state of SentinelDataConnectorAzureSecurityCenter.
type SentinelDataConnectorAzureSecurityCenterStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SentinelDataConnectorAzureSecurityCenterObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SentinelDataConnectorAzureSecurityCenter is the Schema for the SentinelDataConnectorAzureSecurityCenters API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type SentinelDataConnectorAzureSecurityCenter struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SentinelDataConnectorAzureSecurityCenterSpec   `json:"spec"`
	Status            SentinelDataConnectorAzureSecurityCenterStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SentinelDataConnectorAzureSecurityCenterList contains a list of SentinelDataConnectorAzureSecurityCenters
type SentinelDataConnectorAzureSecurityCenterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SentinelDataConnectorAzureSecurityCenter `json:"items"`
}

// Repository type metadata.
var (
	SentinelDataConnectorAzureSecurityCenter_Kind             = "SentinelDataConnectorAzureSecurityCenter"
	SentinelDataConnectorAzureSecurityCenter_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SentinelDataConnectorAzureSecurityCenter_Kind}.String()
	SentinelDataConnectorAzureSecurityCenter_KindAPIVersion   = SentinelDataConnectorAzureSecurityCenter_Kind + "." + CRDGroupVersion.String()
	SentinelDataConnectorAzureSecurityCenter_GroupVersionKind = CRDGroupVersion.WithKind(SentinelDataConnectorAzureSecurityCenter_Kind)
)

func init() {
	SchemeBuilder.Register(&SentinelDataConnectorAzureSecurityCenter{}, &SentinelDataConnectorAzureSecurityCenterList{})
}
